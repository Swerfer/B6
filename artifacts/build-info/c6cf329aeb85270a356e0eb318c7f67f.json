{"id":"c6cf329aeb85270a356e0eb318c7f67f","_format":"hh-sol-build-info-1","solcVersion":"0.8.30","solcLongVersion":"0.8.30+commit.73712a01","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/MissionFactory.sol":{"content":"// SPDX-License-Identifier: MIT\r\n/**\r\n * © 2025 Be Brave Be Bold Be Banked™ | B6 Labs™ – Swerfer\r\n * All rights reserved.\r\n *\r\n * @title   Be Brave Be Bold Be Banked™ – Mission & Factory Architecture\r\n * @author  B6 Labs™ – Swerfer\r\n * @notice\r\n *  ▸ **B6** – a decentralized gaming platform that runs on the Cronos blockchain.\r\n *  ▸ **Mission** – an on-chain, time-boxed competition where players enroll\r\n *    by paying a fixed CRO fee and race through multiple payout rounds.  \r\n *  ▸ **MissionFactory** – the manager contract that deploys Mission clones,\r\n *    enforces enrolment limits, routes fees, and recycles funds for future\r\n *    games.  Each Mission clone is created with `clone.initialize(...)`\r\n *    and thereafter calls back into the factory for bookkeeping.\r\n *\r\n * ## 📖 Mission Overview\r\n * A Mission is a competitive game with three consecutive phases:\r\n *\r\n * 1. **Enrollment** (`enrollmentStart → enrollmentEnd`)  \r\n *    • Players pay `enrollmentAmount` once.  \r\n *    • Anti-addiction limits: max `weeklyLimit` per 7 days & `monthlyLimit`\r\n *      per 30 days – enforced by the factory.  \r\n *    • Mission requires `enrollmentMinPlayers` to arm; max is\r\n *      `enrollmentMaxPlayers`.\r\n *\r\n * 2. **Active** (`missionStart → missionEnd`)  \r\n *    • Consists of `missionRounds` payout rounds.  \r\n *    • A cooldown: 5 min after normal rounds, 1 min before the final round.  \r\n *    • A player can win **once per mission**.  \r\n *    • Each round’s payout = time-progress since last claim × `croStart` / 100.\r\n *\r\n * 3. **End / Settle**  \r\n *    • Ends when all rounds are claimed **or** `missionEnd` passes.  \r\n *    • Owner/authorized may call `forceFinalizeMission()` if necessary.  \r\n *    • Remaining CRO is distributed via `_withdrawFunds()`.\r\n *\r\n * ## 🏭 MissionFactory Responsibilities\r\n * • **Deployment** – clones the Mission implementation (EIP-1167).  \r\n * • **Status Tracking** – every Mission reports its status back via\r\n *   `setMissionStatus`; the factory stores this for dashboards and queries.  \r\n * • **Enrollment Limits** – global weekly / monthly caps checked in\r\n *   `canEnroll()` and recorded with `recordEnrollment()`.  \r\n * • **Reserved Funds Pool** – collects 75 % of leftover CRO from finished\r\n *   missions and redistributes part of it to newly-created games.  \r\n * • **Authorization Layer** – owner can whitelist helpers; `onlyOwnerOrAuthorized`\r\n *   guards all admin actions (create, withdraw, config).  \r\n * • **Registry** – `isMission[addr]` and `missionStatus[addr]` let the factory\r\n *   authenticate mission callbacks and list active / ended missions.\r\n *\r\n * ## 💰 Fee Split\r\n * • 25 % of post-game pot → factory owner.  \r\n * • 75 %                  → factory reserve (`reservedFunds[missionType]`).\r\n *\r\n * ## 🔄 Refund & Failure Logic\r\n * • If a mission never arms (not enough players) all enrollments are refunded.  \r\n * • If CRO transfers to players fail, amounts are parked in\r\n *   `failedRefundAmounts`; .\r\n *\r\n * ## ⚠️ Key Constraints\r\n * • `missionRounds` ≥ `enrollmentMinPlayers`.  \r\n * • A player can win at most once per mission.\r\n *\r\n * ## 🛠 Admin Functions (Mission level)\r\n * • `checkMissionStartCondition`, `forceFinalizeMission`, `withdrawFunds`, `refundPlayers`.\r\n *\r\n * ## ✅ Security\r\n * • OpenZeppelin **Ownable** + **ReentrancyGuard**.  \r\n * • CRO transfers via `.call{value: …}` to forward all gas and avoid\r\n *   griefing.  \r\n * • Factory verifies that callbacks come from registered missions\r\n *   (`onlyMission`).\r\n *\r\n * @dev Each Mission is an EIP-1167 minimal proxy deployed by MissionFactory.\r\n */\r\n\r\npragma solidity ^0.8.30;\r\n\r\n// ───────────────────── Imports ────────────────────────\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nusing Strings for uint256;\r\n\r\n// ─────────────────── Global Enums ─────────────────────\r\n/**\r\n * @dev Enum to represent the type of mission.\r\n * The mission can be one of several types: Custom, Hourly, QuarterDaily, BiDaily, Daily, Weekly, or Monthly.\r\n * The default use for each type is defined in the comments but is set in the dApp UI and can vary.\r\n */\r\nenum MissionType {\r\n    Custom,         // No default use, completely custom\r\n    Hourly,         // Default use:  1 day  enrollment, 1 hour arming,  1 hour  rounds\r\n    QuarterDaily,   // Default use:  1 day  enrollment, 1 hour arming,  6 hours rounds\r\n    BiDaily,        // Default use:  1 day  enrollment, 1 hour arming, 12 hours rounds\r\n    Daily,          // Default use:  1 day  enrollment, 1 hour arming, 24 hours rounds\r\n    Weekly,         // Default use:  1 week enrollment, 1 hour arming,  7 days  rounds\r\n    Monthly         // Default use:  1 week enrollment, 1 hour arming, 30 days  rounds\r\n}\r\n\r\n/**\r\n * @dev Enum to represent the status of a mission.\r\n * The mission can be in one of several states: Pending, Enrolling, Active, Paused, Ended, or Failed.\r\n */\r\nenum Status     {\r\n    Pending,        // Mission is created but not yet enrolling\r\n    Enrolling,      // Mission is open for enrollment, waiting for players to join\r\n    Arming,         // Mission is armed and ready to start\r\n    Active,         // Mission is currently active and players can participate\r\n    Paused,         // Mission is paused, no further actions can be taken\r\n    PartlySuccess,  // Mission has ended with some players winning, but not all rounds were claimed\r\n    Success,        // Mission has ended successfully, all rounds were claimed\r\n    Failed          // Mission has failed, no players won or not enough players enrolled\r\n}\r\n\r\n/**\r\n * @dev Enum to represent the enrollment limits for a mission.\r\n * The limits can be None, Weekly, or Monthly.\r\n */\r\nenum Limit      { \r\n    None,       // No limit breached\r\n    Weekly,     // Weekly limit breached\r\n    Monthly     // Monthly limit breached\r\n}\r\n\r\n// ────────────── Contract MissionFactory────────────────\r\ncontract MissionFactory is Ownable, ReentrancyGuard {\r\n    using Clones    for address;\r\n    \r\n    // ────────────────── Events ───────────────────────\r\n    /** \r\n     * @dev Events emitted by the MissionFactory contract.\r\n     * These events are used to log important actions and state changes within the contract.\r\n     */\r\n    event AuthorizedAddressAdded                (address        indexed addr                                                                        );\r\n    event AuthorizedAddressRemoved              (address        indexed addr                                                                        );\r\n    event MissionCreated                        (address        indexed missionAddress, MissionType indexed missionType                             );\r\n    event FundsReceived                         (address        indexed sender,         uint256             amount                                  );\r\n    event MissionFundsRegistered                (uint256                amount,         MissionType indexed missionType,    address indexed sender  );\r\n    event FundsWithdrawn                        (address        indexed to,             uint256             amount                                  );    \r\n    event OwnershipTransferProposed             (address        indexed proposer,       address             newOwner,       uint256 timestamp       );\r\n    event OwnershipTransferConfirmed            (address        indexed confirmer,      address             newOwner,       uint256 timestamp       );\r\n    event EnrollmentLimitUpdated                (uint8                  newWeekly,      uint8               newMonthly                              );\r\n    event EnrollmentRecorded                    (address        indexed user,           uint256             timestamp                               );\r\n\r\n    // ────────────────── Modifiers ─────────────────────\r\n    /**\r\n     * @dev Modifier that allows only the owner or an authorized address to call.\r\n     */\r\n    modifier onlyOwnerOrAuthorized() {\r\n        require(\r\n            msg.sender == owner() || authorized[msg.sender],    // Check if the caller is the owner or an authorized address\r\n            \"Not owner or MissionFactory authorized\"\r\n        );\r\n        _;\r\n    }\r\n\t\r\n\t/**\r\n     * @dev Modifier that allows only a valid mission contract to call.\r\n     * This ensures that the caller is a contract that has been registered as a mission.\r\n     */\r\n\tmodifier onlyMission() {\r\n        require(\r\n            isMission[msg.sender],                                      // Check if the caller is a registered mission\r\n            \"MissionFactory: caller is not a valid mission contract\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // ────────────── State Variables ───────────────────\r\n    /**\r\n     * @dev State variables for the MissionFactory contract.\r\n     * These variables store the state of the contract, including authorized addresses, reserved funds, mission statuses, and the implementation address for missions.\r\n     */\r\n    address[]                               public  missions;                                   // Array to hold all mission addresses\r\n    uint8                                   public  weeklyLimit = 4;                            // Maximum number of missions a player can enroll in per week\r\n    uint8                                   public  monthlyLimit = 10;                          // Maximum number of missions a player can enroll in per month\r\n    uint256                                 public  totalMissionFunds;                          // Total funds registered by missions\r\n    uint256                                 public  totalOwnerEarnedFunds;                      // Total funds earned by the owner from missions\r\n    uint256                                 public  totalMissionSuccesses;                      // Total number of successful missions\r\n    uint256                                 public  totalMissionFailures;                       // Total number of failed missions\r\n    address                                 public immutable missionImplementation;             // Address of the Mission implementation contract for creating new missions\r\n    uint256                                 public constant OWNERSHIP_PROPOSAL_WINDOW = 1 days; // Duration for ownership proposal validity\r\n    uint256                                 public proposalTimestamp;                           // The timestamp the proposal was made\r\n    address                                 public proposedNewOwner;                            // The proposed new owner's address     \r\n    address                                 public proposalProposer;                            // The proposer's address\r\n    mapping(address => bool)                public  authorized;                                 // Mapping to track authorized addresses\r\n    mapping(address => bool)                public  isMission;                                  // ↪ quick “is this address a mission?” lookup\r\n    mapping(address => Status)              public  missionStatus;                              // Mapping to hold the status of each mission\r\n    mapping(MissionType => uint256)         public  reservedFunds;                              // Track funds by type\r\n    mapping(address => uint256[])           private _enrollmentHistory;                         // Store timestamps\r\n    mapping(address => string)              public missionNames;                                // Store mission names\r\n    mapping(MissionType => uint256)         public missionTypeCounts;                           // Store per mission type the mission type count\r\n\r\n    // ──────────────── Constructor ─────────────────────\r\n    /**\r\n     * @dev Struct to hold information about players who won the mission.\r\n     * Contains the player's address and the amount they won.\r\n     */\r\n    constructor(address _impl) Ownable(msg.sender) {\r\n        require(_impl != address(0), \"impl zero\");\r\n        missionImplementation = _impl;\r\n    }\r\n\r\n    // ────────────────── Helper functions ──────────────\r\n    /**\r\n     * @dev Function to convert mission types to human readable names \r\n     */  \r\n    function _toHumanReadableName(MissionType t) internal pure returns (string memory) {\r\n        if (t == MissionType.Hourly)         return \"Hourly\";\r\n        if (t == MissionType.QuarterDaily)   return \"QuarterDaily\";\r\n        if (t == MissionType.BiDaily)        return \"BiDaily\";\r\n        if (t == MissionType.Daily)          return \"Daily\";\r\n        if (t == MissionType.Weekly)         return \"Weekly\";\r\n        if (t == MissionType.Monthly)        return \"Monthly\";\r\n        return \"Custom\";                      \r\n    }\r\n\r\n    /**\r\n     * @dev Returns the time until the next weekly slot for a user.\r\n     * This function calculates the time remaining until the next weekly slot based on the user's enrollment history.\r\n     * @param user The address of the user to check.\r\n     * @return The number of seconds until the next weekly slot.\r\n     */\r\n    function secondsTillWeeklySlot(address user)                            external view returns (uint256) {\r\n        uint256 nowTs = block.timestamp;                                // Get the current timestamp\r\n        uint256[] storage h = _enrollmentHistory[user];                 // Get the user's enrollment history\r\n        uint256 earliest;                                               // Variable to store the earliest enrollment time within the next week\r\n        for (uint i = 0; i < h.length; i++) {                           // Loop through the enrollment history  \r\n            if (h[i] + 7 days > nowTs) {\r\n                if (earliest == 0 || h[i] < earliest) earliest = h[i];  // If this is the first valid enrollment or earlier than the current earliest, update earliest\r\n            }\r\n        }\r\n        return earliest == 0 ? 0 : earliest + 7 days - nowTs;    // If no valid enrollment found, return 0; otherwise, return the time until the next weekly slot\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the time until the next monthly slot for a user.\r\n     * This function calculates the time remaining until the next monthly slot based on the user's enrollment history.\r\n     * @param user The address of the user to check.\r\n     * @return The number of seconds until the next monthly slot.\r\n     */\r\n    function secondsTillMonthlySlot(address user)                           external view returns (uint256) {\r\n        uint256 nowTs = block.timestamp;                                // Get the current timestamp\r\n        uint256[] storage h = _enrollmentHistory[user];                 // Get the user's enrollment history\r\n        uint256 earliest;                                               // Variable to store the earliest enrollment time within the next month \r\n        for (uint i = 0; i < h.length; i++) {                           // Loop through the enrollment history  \r\n            if (h[i] + 30 days > nowTs) {\r\n                if (earliest == 0 || h[i] < earliest) earliest = h[i];  // If this is the first valid enrollment or earlier than the current earliest, update earliest\r\n            }\r\n        }\r\n        return earliest == 0 ? 0 : earliest + 30 days - nowTs;   // If no valid enrollment found, return 0; otherwise, return the time until the next monthly slot\r\n    }\r\n\r\n    // ──────────── Anti-addiction Functions ────────────\r\n    /**\r\n     * @dev Sets the weekly and monthly enrollment limits.\r\n     * This function allows the owner or an authorized address to set the limits for how many missions a user can enroll in per week and per month.\r\n     * @param _weekly The new weekly limit for mission enrollments.\r\n     * @param _monthly The new monthly limit for mission enrollments.\r\n     */\r\n    function setEnrollmentLimits(uint8 _weekly, uint8 _monthly)             external onlyOwnerOrAuthorized {\r\n        weeklyLimit = _weekly;\r\n        monthlyLimit = _monthly;\r\n        emit EnrollmentLimitUpdated(_weekly, _monthly);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a user can enroll in a mission based on anti-addiction limits.\r\n     * This function checks the user's enrollment history to determine if they have exceeded the weekly or monthly limits.\r\n     * @param user The address of the user to check.\r\n     * @return ok A boolean indicating if the user can enroll.\r\n     * @return breach A Limit enum indicating which limit is breached, if any.\r\n     */\r\n    function canEnroll(address user)                                        public view returns (bool ok, Limit breach) {\r\n        uint256 nowTs = block.timestamp;                                    // Get the current timestamp\r\n        uint256 weeklyCount;                                                // Count of enrollments in the last 7 days  \r\n        uint256 monthlyCount;                                               // Count of enrollments in the last 30 days\r\n        uint256 earliest7d;                                                 // Earliest enrollment timestamp in the last 7 days\r\n        uint256 earliest30d;                                                // Earliest enrollment timestamp in the last 30 days    \r\n\r\n        uint256[] storage h = _enrollmentHistory[user];                     // Get the user's enrollment history\r\n        for (uint256 i; i < h.length; ++i) {                                // Loop through the enrollment history\r\n            uint256 t = h[i];\r\n            if (t + 30 days > nowTs) {                                      // If the enrollment is within the last 30 days\r\n                ++monthlyCount;\r\n                if (earliest30d == 0 || t < earliest30d) earliest30d = t;   // Update the earliest enrollment timestamp in the last 30 days\r\n                if (t + 7 days > nowTs) {\r\n                    ++weeklyCount;\r\n                    if (earliest7d == 0 || t < earliest7d) earliest7d = t;  // Update the earliest enrollment timestamp in the last 7 days\r\n                }\r\n            }\r\n        }\r\n\r\n        bool wk = weeklyCount  >= weeklyLimit;                              // Check if the weekly limit is breached    \r\n        bool mo = monthlyCount >= monthlyLimit;                             // Check if the monthly limit is breached\r\n\r\n        if (!wk && !mo) return (true,  Limit.None);                         // If neither limit is breached, return true with Limit.None\r\n\r\n        if (wk && !mo)  return (false, Limit.Weekly);                       // If only the weekly limit is breached, return false with Limit.Weekly\r\n        if (mo && !wk)  return (false, Limit.Monthly);                      // If only the monthly limit is breached, return false with Limit.Monthly   \r\n\r\n        // both breached: compare remaining seconds\r\n        uint256 leftW = earliest7d  +  7 days - nowTs;                      // Calculate the time left until the next weekly slot\r\n        uint256 leftM = earliest30d + 30 days - nowTs;                      // Calculate the time left until the next monthly slot\r\n        return (false, leftM > leftW ? Limit.Monthly : Limit.Weekly);       // If both limits are breached, return the one with the shorter time left\r\n    }\r\n\r\n    /**\r\n     * @dev Records the enrollment of a user in a mission.\r\n     * This function is called when a user enrolls in a mission.\r\n     * It updates the user's enrollment history and emits an event.\r\n     * @param user The address of the user enrolling in the mission.\r\n     */\r\n    function recordEnrollment(address user)                                 external {\r\n        uint256 nowTs = block.timestamp;                                            // Get the current timestamp\r\n        require(missionStatus[msg.sender] == Status.Enrolling, \"Invalid caller\");   // Ensure the caller is in the Enrolling status\r\n\r\n        uint256 cutoff = nowTs - 30 days;                                           // Calculate the cutoff timestamp for pruning  \r\n        uint256[] storage history = _enrollmentHistory[user];                       // Get the user's enrollment history    \r\n        uint256 i = 0;\r\n        while (i < history.length && history[i] < cutoff) {                         // Loop through the history to find entries older than 30 days\r\n            i++;    \r\n        }\r\n        if (i > 0) {                                                                // If there are old entries, remove them\r\n            for (uint256 j = 0; j < history.length - i; j++) {                      // Shift remaining entries to the left\r\n                history[j] = history[j + i];\r\n            }\r\n            for (uint256 k = 0; k < i; k++) {                                       // Remove the last i entries   \r\n                history.pop();\r\n            }\r\n        }\r\n\r\n        history.push(nowTs);                                                        // Add the current timestamp to the enrollment history  \r\n        emit EnrollmentRecorded(user, nowTs);                                       // Emit an event for the enrollment record\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the player's enrollment limits and time until next slots.\r\n     * This function calculates the number of enrollments a player has made in the last week and month,\r\n     * and returns the limits and time until the next slots.\r\n     * @param player The address of the player to check.\r\n     * @return weekUsed The number of enrollments used in the last week.\r\n     * @return weekMax The maximum number of enrollments allowed in a week.\r\n     * @return monthUsed The number of enrollments used in the last month.\r\n     * @return monthMax The maximum number of enrollments allowed in a month.\r\n     * @return secToWeek The number of seconds until the next weekly slot.\r\n     * @return secToMonth The number of seconds until the next monthly slot.\r\n     */\r\n    function getPlayerLimits(address player)                                external view returns \r\n        (uint8 weekUsed, uint8 weekMax, uint8 monthUsed, uint8 monthMax, uint256 secToWeek, uint256 secToMonth) {\r\n        uint256 nowTs = block.timestamp;                                        // Get the current timestamp\r\n        uint256[] storage h = _enrollmentHistory[player];                       // Get the player's enrollment history\r\n        uint256 weeklyCount;                                                    // Count of enrollments in the last 7 days\r\n        uint256 monthlyCount;                                                   // Count of enrollments in the last 30 days\r\n        uint256 earliest7d;                                                     // Earliest enrollment timestamp in the last 7 days\r\n        uint256 earliest30d;                                                    // Earliest enrollment timestamp in the last 30 days\r\n        for (uint256 i; i < h.length; ++i) {                                    // Loop through the enrollment history\r\n            uint256 t = h[i];\r\n            if (t + 30 days > nowTs) {                                          // If the enrollment is within the last 30 days\r\n                ++monthlyCount;\r\n                if (earliest30d == 0 || t < earliest30d) earliest30d = t;       // Update the earliest enrollment timestamp in the last 30 days\r\n                if (t + 7 days > nowTs) {\r\n                    ++weeklyCount;\r\n                    if (earliest7d == 0 || t < earliest7d) earliest7d = t;      // Update the earliest enrollment timestamp in the last 7 days\r\n                }\r\n            }\r\n        }\r\n        weekUsed   = uint8(weeklyCount);                                        // Convert weekly count to uint8\r\n        weekMax    = weeklyLimit;                                               // Get the maximum weekly limit\r\n        monthUsed  = uint8(monthlyCount);                                       // Convert monthly count to uint8\r\n        monthMax   = monthlyLimit;                                              // Get the maximum monthly limit\r\n        secToWeek  = earliest7d  == 0 ? 0 : earliest7d  + 7 days - nowTs;       // Calculate seconds until next weekly slot\r\n        secToMonth = earliest30d == 0 ? 0 : earliest30d + 30 days - nowTs;      // Calculate seconds until next monthly slot\r\n        return (weekUsed, weekMax, monthUsed, monthMax, secToWeek, secToMonth); // Return the limits and time until next slots\r\n    }\r\n\r\n    // ──────────────── Admin Functions ─────────────────\r\n    /**\r\n     * @dev Adds an address to the list of authorized addresses.\r\n     * @param account The address to authorize.\r\n     */\r\n    function addAuthorizedAddress(address account)                          external onlyOwnerOrAuthorized {\r\n        require(account != address(0),  \"Invalid address\");                         // Ensure the account is valid\r\n        require(!authorized[account],   \"Already authorized\");                      // Ensure the account is not already authorized\r\n        authorized[account] = true;                                                 // Add authorization for the account  \r\n        emit AuthorizedAddressAdded(account);                                       // Emit event for addition of authorization\r\n    }\r\n\r\n    /**\r\n     * @dev Removes authorization for an address.\r\n     * @param account The address to remove authorization from.\r\n     */\r\n    function removeAuthorizedAddress(address account)                       external onlyOwnerOrAuthorized {\r\n        require(account != address(0),  \"Invalid address\");                         // Ensure the account is valid\r\n        require(authorized[account],    \"Not authorized\");                          // Ensure the account is currently authorized\r\n        authorized[account] = false;                                                // Remove authorization for the account\r\n        emit AuthorizedAddressRemoved(account);                                     // Emit event for removal of authorization\r\n    }\r\n\r\n    /**\r\n     * @dev Proposes a transfer of ownership to a new address.\r\n     * @param newOwner The address of the new owner.\r\n     * If the owner is not available anymore or lost access, this function allows an authorized address to propose a new owner.\r\n     */\r\n    function proposeOwnershipTransfer(address newOwner)                     external onlyOwnerOrAuthorized {\r\n        uint256 nowTs = block.timestamp;                                // Get the current timestamp\r\n        require(newOwner != address(0), \"Invalid new owner\");           // Ensure the new owner is a valid address\r\n        proposedNewOwner = newOwner;\r\n        proposalProposer = msg.sender;\r\n        proposalTimestamp = block.timestamp;\r\n        emit OwnershipTransferProposed(msg.sender, newOwner, nowTs);    // Emit event for ownership transfer proposal\r\n    }\r\n\r\n    /**\r\n     * @dev Confirms the ownership transfer to a new address.\r\n     * This function allows a 2nd authorized address to confirm the ownership transfer.\r\n     */\r\n    function confirmOwnershipTransfer()                                     external onlyOwnerOrAuthorized {\r\n        uint256 nowTs = block.timestamp;                                                                // Get the current timestamp\r\n        require(proposalProposer != msg.sender, \"Cannot confirm your own proposal\");                    // Ensure the confirmer is not the proposer\r\n        require(block.timestamp <= proposalTimestamp + OWNERSHIP_PROPOSAL_WINDOW, \"Proposal expired\");  // Ensure the proposal is still valid within the proposal window\r\n\r\n        // Transfer ownership\r\n        _transferOwnership(proposedNewOwner);                                                           // Transfer ownership to the new owner   \r\n\r\n        emit OwnershipTransferConfirmed(msg.sender, proposedNewOwner, nowTs);                           // Emit event for ownership transfer confirmation\r\n        // Cleanup\r\n        delete proposedNewOwner;                                                                        // Delete the new owner\r\n        delete proposalProposer;                                                                        // Delete the proposal proposer\r\n        delete proposalTimestamp;                                                                       // Delete the proposal timestamp\r\n\r\n    }\r\n\r\n    // ───────────── Core Factory Functions ─────────────\r\n    /**\r\n     * @dev Creates a new mission with the specified parameters.\r\n     * @param _missionType          The type of the mission.\r\n     * @param _enrollmentStart      The start time for enrollment.\r\n     * @param _enrollmentEnd        The end time for enrollment.\r\n     * @param _enrollmentAmount     The amount required for enrollment.\r\n     * @param _enrollmentMinPlayers The minimum number of players required to start the mission.\r\n     * @param _enrollmentMaxPlayers The maxnimum number of players required to start the mission.\r\n     * @param _missionStart         The start time for the mission.\r\n     * @param _missionEnd           The end time for the mission.\r\n     * @param _missionRounds        The number of rounds in the mission.\r\n     */\r\n    function createMission (\r\n        MissionType     _missionType,           // Type of the mission\r\n        uint256         _enrollmentStart,       // Start time for enrollment\r\n        uint256         _enrollmentEnd,         // End time for enrollment\r\n        uint256         _enrollmentAmount,      // Amount required for enrollment\r\n        uint8           _enrollmentMinPlayers,  // Minimum number of players required to start the mission\r\n        uint8           _enrollmentMaxPlayers,  // Maximum number of players required to start the mission\r\n        uint256         _missionStart,          // Start time for the mission\r\n        uint256         _missionEnd,            // End time for the mission\r\n        uint8           _missionRounds,         // Number of rounds in the mission\r\n        string calldata _missionName            // The mission name (optional)\r\n        ) external payable onlyOwnerOrAuthorized nonReentrant returns (address, string memory) {\r\n            require(_missionRounds          >= 5,                       \"Mission rounds must be greater than or equal to 5\");               // Ensure mission rounds is greater than or equal to 5\r\n            require(_enrollmentMinPlayers   >= _missionRounds,          \"Minimum players must be greater than or equal to mission rounds\"); // Ensure minimum players is at least equal to mission rounds\r\n            require(_enrollmentMaxPlayers   >= _enrollmentMinPlayers,   \"Maximum players must be greater than or equal to minimum players\");// Ensure maximum players is at least equal to minimum players\r\n            require(_enrollmentStart        <  _enrollmentEnd,          \"Enrollment start must be before end\");                             // Ensure enrollment start is before end\r\n            require(_missionStart           >= _enrollmentEnd,          \"Mission start must be on or after enrollment end\");                // Ensure mission start is on or after enrollment end\r\n            require(_missionEnd             >  _missionStart,           \"Mission start must be before end\");                                // Ensure mission start is before end\r\n            require(_enrollmentAmount       >  0,                       \"Enrollment amount must be greater than zero\");                     // Ensure enrollment amount is greater than zero\r\n\r\n\t\t\taddress clone = missionImplementation.clone(); \t    // EIP-1167 minimal proxy\r\n\r\n            // Increment mission type counter\r\n            missionTypeCounts[_missionType]++;                          // Increase mission counts by 1 and store for the mission type\r\n            string memory _finalName = bytes(_missionName).length > 0   // Check if mission name is not \"\"\r\n                ? _missionName                                          // Not empty --> the supplied name\r\n                : string(abi.encodePacked(\r\n                    _toHumanReadableName(_missionType),\r\n                    \" - \",\r\n                    missionTypeCounts[_missionType].toString()  // \"\" --> calculated mission name\r\n                ));\r\n\r\n            isMission[clone]     = true;                        // mark as a valid mission\r\n            missionStatus[clone] = Status.Pending;              // placeholder so first callback passes onlyMission\r\n            missionNames[clone] = _finalName;                   // Store the supplied name or calculated name if nothing supplied\r\n\r\n            Mission(payable(clone)).initialize{value: msg.value} (\r\n\t\t\t\towner(),\t\t\t\t\t\t\t\t\t    // Set the owner of the mission to the owner of MissionFactory\r\n\t\t\t\taddress(this),\t\t\t\t\t\t\t\t    // Set the MissionFactory address\r\n                _missionType,                                   // Set the type of the mission\r\n                _enrollmentStart,                               // Set the enrollment start time\r\n                _enrollmentEnd,                                 // Set the enrollment end time\r\n                _enrollmentAmount,                              // Set the enrollment amount\r\n                _enrollmentMinPlayers,                          // Set the minimum players required\r\n                _enrollmentMaxPlayers,                          // Set the maximum players allowed\r\n                _missionStart,                                  // Set the mission start time\r\n                _missionEnd,                                    // Set the mission end time\r\n                _missionRounds,                                 // Set the number of rounds in the mission\r\n                _finalName                                      // The supplied name or calculated name if nothing supplied\r\n            );\r\n\r\n        missions.push(clone);                                   // Add the new mission to the list of missions\r\n        emit MissionCreated(clone, _missionType);               // Emit event for mission creation\r\n\r\n        // Calculate allocation based on mission type\r\n        uint256 allocation = reservedFunds[_missionType] / 4;   // Missions get 1/4th of the reserved funds\r\n\r\n        if (allocation > 0 && address(this).balance >= allocation) {\r\n            reservedFunds[_missionType] -= allocation;\r\n            Mission(payable(clone)).increasePot{value: allocation}();   // Sends CRO and updates mission accounting\r\n        }\r\n\r\n        return (clone, _finalName);\t\t\t\t\t\t                            // Return the address of the newly created mission\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the status of a mission.\r\n     * @param newStatus The new status to set for the mission.\r\n     */\r\n    function setMissionStatus(Status newStatus)                             external onlyMission {\r\n\t\tmissionStatus[msg.sender] = newStatus;          // Update the mission status\r\n        if (newStatus == Status.Success) {\r\n            totalMissionSuccesses++;                    // Increment the total number of successful missions\r\n        } else if (newStatus == Status.Failed) {\r\n            totalMissionFailures++;                     // Increment the total number of failed missions\r\n        }\r\n    } \r\n\r\n    // ──────────────── Financial Functions ─────────────\r\n    /**\r\n     * @dev Registers mission funds for a specific mission type.\r\n     * @param missionType The type of the mission.\r\n     */\r\n    function registerMissionFunds(MissionType missionType)                  external payable onlyMission nonReentrant {\r\n        require(msg.value > 0, \"Amount must be greater than zero\");                                                         // Ensure the amount is greater than zero\r\n        bool isEndedMission = missionStatus[msg.sender] == Status.Success || missionStatus[msg.sender] == Status.Failed;    // Check if the mission has ended successfully or failed\r\n        require(isEndedMission, \"Caller not a mission\");                                                                    // Ensure the caller is a valid mission that has ended \r\n        reservedFunds[missionType] += msg.value;                                                                            // Add the amount to the reserved funds for the specified mission type\r\n        totalMissionFunds += msg.value;                                                                                     // Update the total mission funds\r\n        totalOwnerEarnedFunds += msg.value / 3;                                                                             // Update the total funds earned by the owner (25% of the amount)\r\n        emit MissionFundsRegistered(msg.value, missionType, msg.sender);                                                    // Emit an event for the registered mission funds\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the breakdown of reserved funds for each mission type.\r\n     * This function returns an array containing the reserved funds for each mission type.\r\n     * @return breakdown An array containing the reserved funds for each mission type.\r\n     */\r\n    function reservedFundsBreakdown()                                       external view returns (uint256[7] memory) {\r\n        uint256[7] memory breakdown;                        // Array to hold the breakdown of reserved funds for each mission type\r\n        for (uint256 i = 0; i < 7; i++) {\r\n            breakdown[i] = reservedFunds[MissionType(i)];   // Fill the array with the reserved funds for each mission type\r\n        }\r\n        return breakdown;                                   // Return the breakdown of reserved funds\r\n    }\r\n\r\n    /**\r\n     * @dev Receives funds sent to the contract.\r\n     * This function is called when the contract receives CRO without any data.\r\n     * It allows the contract to accept CRO transfers.\r\n     */\r\n    receive()                                                               external payable {}\r\n\r\n    /**\r\n     * @dev Fallback function to receive CRO.\r\n     * This function is called when the contract receives CRO without any data.\r\n     * It allows the contract to accept CRO transfers.\r\n     */\r\n    fallback()                                                              external payable {}\r\n\r\n    /**\r\n     * @dev Withdraws funds from the MissionFactory contract.\r\n     * This function allows the owner or an authorized address to withdraw funds from the contract.\r\n     * This function shall only be called if the contract is not in use anymore and all missions have ended.\r\n     * It transfers the specified amount of funds to the owner of the MissionFactory contract.\r\n     * @param amount The amount of funds to withdraw. If 0, withdraws all available funds.\r\n     */\r\n    function withdrawFunds(uint256 amount)                                  external onlyOwner nonReentrant {\r\n        address mgrOwner = owner();                                                             // Get the owner of the MissionFactory contract\r\n        require(mgrOwner != address(0), \"Invalid manager owner\");                               // Ensure the manager owner is valid\r\n        if (amount == 0) {\r\n            amount = address(this).balance;                                                     // If no amount specified, withdraw all funds\r\n        }\r\n        require(amount <= address(this).balance, \"Insufficient balance\");                       // Ensure the contract has enough balance to withdraw\r\n        (bool ok, ) = payable(mgrOwner).call{ value: amount }(\"\");                              // Attempt to transfer the specified amount to the manager owner\r\n        require(ok, \"Transfer failed\");                                                         // Ensure the transfer was successful\r\n        emit FundsWithdrawn(mgrOwner, amount);                                                  // Emit event for funds withdrawal\r\n    }\r\n\r\n    // ──────────────── View Functions ────────────────\r\n\r\n    /**\r\n     * @dev Returns the missions a player is participating in and their statuses.\r\n     * This function retrieves all missions the player is enrolled in and their current statuses.\r\n     * @param player The address of the player to check.\r\n     * @return joined An array of addresses of the missions the player is enrolled in.\r\n     * @return statuses An array of statuses corresponding to each mission.\r\n     */\r\n    function getPlayerParticipation(address player)                         public view returns (address[] memory, Status[] memory, string[] memory) {\r\n        uint256 len = missions.length;                                      // Get the total number of missions\r\n        uint256 count;                                                      // Variable to count how many missions the player is in\r\n\r\n        // First pass: count how many missions the player is in\r\n        for (uint256 i = len; i > 0; i--) {                                 // Loop through the missions from newest to oldest\r\n            if (Mission(payable(missions[i - 1])).isPlayer(player)) {       // Check if the player is enrolled in the mission\r\n                count++;\r\n            }\r\n        }\r\n\r\n        // Allocate return arrays\r\n        address[] memory joined     = new address[](count);                 // Create an array to hold the addresses of the missions the player is in\r\n        Status[]  memory statuses   = new Status[](count);                  // Create an array to hold the statuses of the missions the player is in    \r\n        string[]  memory names      = new string[](count);                  // Create an array to hold the mission names\r\n        uint256 idx;                                                        // Index for the return arrays\r\n\r\n        // Second pass: fill both arrays\r\n        for (uint256 i = len; i > 0; i--) {                                 // Loop through the missions from newest to oldest\r\n            address m = missions[i - 1];                                    // Get the address of the current mission\r\n            if (Mission(payable(m)).isPlayer(player)) {                     // Check if the player is enrolled in the mission\r\n                joined[idx]   = m;                                          // Add the mission address to the joined array                          \r\n                statuses[idx] = Mission(payable(m)).getRealtimeStatus();    // Get the realtime status of the mission and add it to the statuses array\r\n                names[idx] = missionNames[m];                               // Add the mission name to the output array\r\n                idx++;                                                      // Increment the index for the return arrays\r\n            }\r\n        }\r\n        return (joined, statuses, names);                                   // Return arrays: addresses of missions not ended, their statuses and names \r\n    }\r\n\r\n    /**\r\n     * @dev Returns a summary of the factory's state.\r\n     * This function returns various details about the factory, including owner address, implementation address, total missions, limits, funds, and mission success/failure counts.\r\n     * @return ownerAddress The address of the owner of the factory.\r\n     * @return factoryAddress The address of the factory contract.\r\n     * @return implementation The address of the mission implementation contract.\r\n     * @return totalMissions The total number of missions created.\r\n     * @return weekly The weekly enrollment limit.\r\n     * @return monthly The monthly enrollment limit.\r\n     * @return missionFunds The total funds registered by missions.\r\n     * @return ownerFunds The total funds earned by the owner from missions.\r\n     * @return successes The total number of successful missions.\r\n     * @return failures The total number of failed missions.\r\n     * @return fundsPerTypeArray An array containing the reserved funds for each mission type (1–6).\r\n     */\r\n    function getFactorySummary()                                            public view\r\n        returns (\r\n            address ownerAddress,\r\n            address factoryAddress,\r\n            address implementation,\r\n            uint256 totalMissions,\r\n            uint256 weekly,\r\n            uint256 monthly,\r\n            uint256 missionFunds,\r\n            uint256 ownerFunds,\r\n            uint256 successes,\r\n            uint256 failures,\r\n            uint256[] memory fundsPerTypeArray\r\n        ) {\r\n        uint256 enumLength = uint256(type(MissionType).max) + 1;\r\n\t\tuint256[] memory breakdown = new uint256[](enumLength);\r\n\t\tfor (uint256 i = 0; i < enumLength; i++) {\r\n\t\t\tbreakdown[i] = reservedFunds[MissionType(i)];\r\n\t\t}\r\n        return (\r\n            owner(),                // Return the address of the owner of the factory contract\r\n            address(this),          // Return the address of the factory contract\r\n            missionImplementation,  // Return the address of the mission implementation contract\r\n            missions.length,        // Return the total number of missions\r\n            weeklyLimit,            // Return the weekly limit\r\n            monthlyLimit,           // Return the weekly and monthly limits\r\n            totalMissionFunds,      // Return the total funds registered by missions\r\n            totalOwnerEarnedFunds,  // Return the total funds registered by missions and earned by the owner\r\n            totalMissionSuccesses,  // Return the total number of successful missions\r\n            totalMissionFailures,   // Return the total number of successful and failed missions\r\n            breakdown               // Return the reserved funds for each mission type\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the status of a mission.\r\n     * @param missionAddress The address of the mission to check.\r\n     * @return mission data of the mission.\r\n     */\r\n    function getMissionData(address missionAddress)                         external view returns (Mission.MissionData memory) {\r\n        require(missionAddress != address(0), \"Invalid mission address\");          // Ensure mission address is valid\r\n        return Mission(payable(missionAddress)).getMissionData();                           // Return the mission data from the Mission contract\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of missions.\r\n     * This function returns the length of the missions array, which contains all mission addresses.\r\n     * @return The total number of missions.\r\n     */\r\n    function getTotalMissions()                                             external view returns (uint256) {\r\n        return missions.length;             // Return the total number of missions\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addresses and statuses of all missions.\r\n     * This function retrieves all missions and their statuses, filtering out old missions.\r\n     * @return An array of mission addresses and an array of their corresponding statuses.\r\n     */\r\n    function getAllMissions()                                               external view returns (address[] memory, Status[] memory, string[] memory) {\r\n        uint256 nowTs = block.timestamp;                                            // Get the current timestamp\r\n        uint256 len = missions.length;\r\n        if (len == 0) {                                                             // If there are no missions, return empty arrays\r\n            return (new address[](0), new Status[](0), new string[](0));\r\n        }\r\n\r\n        uint256 startCutoff = nowTs - 60 days;                                      // skip if missionStart < startCutoff\r\n        uint256 endCutoff   = nowTs - 30 days;                                      // skip if (ended) missionEnd < endCutoff\r\n        uint256 count;\r\n\r\n        // FIRST PASS ── count how many to return, scanning newest → oldest\r\n        for (uint256 i = len; i > 0;) {\r\n            unchecked { --i; }                                                      // safe because we check i>0 first\r\n            address m = missions[i];\r\n            Status  s = missionStatus[m];\r\n            Mission.MissionData memory md = Mission(payable(m)).getMissionData();\r\n\r\n            bool tooOld =\r\n                md.missionStart < startCutoff &&                                    // started > 60 days ago\r\n                (s == Status.Success || s == Status.Failed)\r\n                    ? md.missionEnd < endCutoff                                     // …and ended/failed > 30 days ago\r\n                    : md.missionStart < startCutoff;                                // or is still running but started > 60 days ago\r\n\r\n            if (tooOld) {\r\n                break;                                                              // every earlier mission will be older ⇒ stop\r\n            }\r\n            count++;\r\n        }\r\n\r\n        // SECOND PASS ── copy the selected missions into fixed-size arrays\r\n        address[] memory outAddrs  = new address[](count);                          // Create an array to hold the addresses of the missions\r\n        Status[]  memory outStatus = new Status[](count);                           // Create an array to hold the statuses of the missions\r\n        string[]  memory names     = new string[](count);                           // Create an array to hold the mission names\r\n        uint256 j;\r\n\r\n        for (uint256 i = len; i > 0 && j < count;) {                                // Loop through the missions from newest to oldest\r\n            unchecked { --i; }\r\n            address m = missions[i];                                                // Get the address of the current mission\r\n            Status  s = missionStatus[m];                                           // Get the status of the current mission    \r\n            Mission.MissionData memory md = Mission(payable(m)).getMissionData();   // Get the mission data for the current mission\r\n\r\n            bool tooOld =\r\n                md.missionStart < startCutoff &&\r\n                (s == Status.Success || s == Status.Failed)                         // If the mission has ended or failed, check if it ended more than 30 days ago\r\n                    ? md.missionEnd < endCutoff\r\n                    : md.missionStart < startCutoff;\r\n\r\n            if (tooOld) {                                                           // If the mission is too old, skip it\r\n                break;\r\n            }\r\n            outAddrs[j]  = m;                                                       // Add the mission address to the output array  \r\n            outStatus[j] = s;                                                       // Add the mission status to the output array\r\n            names[j] = missionNames[m];                                             // Add the mission name to the output array\r\n            unchecked { ++j; }                                                      // Increment the index for the output arrays\r\n        }\r\n\r\n        return (outAddrs, outStatus, names);                                        // Return arrays: addresses of missions not ended, their statuses and names \r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addresses of missions filtered by status.\r\n     * This function filters missions based on their status and returns an array of mission addresses that match the specified status.\r\n     * @param s The status to filter missions by.\r\n     * @return An array of mission addresses and an array of their corresponding statuses.\r\n     */\r\n    function getMissionsByStatus(Status s)                                  external view returns (address[] memory, uint8[] memory, string[] memory) {\r\n        uint256 len = missions.length;                              // Get the total number of missions\r\n        uint256 count;\r\n\r\n        // First pass: count missions with the specified status\r\n        for (uint256 i = 0; i < len; i++) {                         // Loop through all missions\r\n            if (missionStatus[missions[i]] == s) {                  // If the mission status matches the specified status\r\n                count++;                                            // Increment the count of matching missions\r\n            }\r\n        }\r\n\r\n        // Second pass: populate result arrays\r\n        address[] memory filteredMissions = new address[](count);   // Create an array to hold the addresses of matching missions\r\n        uint8[]   memory statuses         = new uint8[](count);     // Create a parallel array for statuses\r\n        string[]  memory names            = new string[](count);    // Create an array to hold the mission names\r\n        uint256 index;\r\n        for (uint256 i = 0; i < len; i++) {                         // Loop through all missions again\r\n            if (missionStatus[missions[i]] == s) {                  // If the mission status matches the specified status\r\n                filteredMissions[index] = missions[i];              // Add the mission address to the result array\r\n                statuses[index] = uint8(s);                         // Add the known status\r\n                names[index] = missionNames[missions[i]];           // Add the mission name to the output array\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return (filteredMissions, statuses, names);                 // Return arrays: addresses of missions not ended, their statuses and names \r\n    }\r\n    \r\n    /**\r\n     * @dev Returns the addresses of missions that have not ended.\r\n     * This function filters out missions that are in the Ended or Failed status.\r\n     * @return An array of mission addresses and an array of their corresponding statuses.\r\n     */\r\n    \r\n    function getMissionsNotEnded()                                          external view returns (address[] memory, uint8[] memory, string[] memory) {\r\n        uint256 len = missions.length;                          // Get the total number of missions \r\n        uint256 count;                                          // Variable to count how many missions are not ended    \r\n\r\n        // First pass: count how many missions are not ended\r\n        for (uint256 i = 0; i < len; i++) {                     // Loop through all missions    \r\n            Status s = missionStatus[missions[i]];\r\n            if (s != Status.Success && s != Status.Failed) {    // If the mission is not in Success or Failed status\r\n                count++;\r\n            }\r\n        }\r\n\r\n        // Second pass: populate arrays\r\n        address[] memory result   = new address[](count);       // Create an array to hold the addresses of missions that are not ended\r\n        uint8[]   memory statuses = new uint8[](count);         // Create a parallel array for statuses\r\n        string[]  memory names    = new string[](count);        // Create an array to hold the mission names\r\n        uint256 index;\r\n\r\n        for (uint256 i = 0; i < len; i++) {                     // Loop through all missions again\r\n            Status s = missionStatus[missions[i]];              // Get the status of the current mission\r\n            if (s != Status.Success && s != Status.Failed) {    // If the mission is not in Success or Failed status\r\n                result[index] = missions[i];                    // Add the mission address to the result array\r\n                statuses[index] = uint8(s);                     // Add the status to the statuses array\r\n                names[index] = missionNames[missions[i]];       // Add the mission name to the output array\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return (result, statuses, names);                       // Return arrays: addresses of missions not ended, their statuses and names  \r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addresses of missions that have ended.\r\n     * This function filters out missions that are in the Ended or Failed status.\r\n     * @return An array of mission addresses and an array of their corresponding statuses.\r\n     */\r\n    function getMissionsEnded()                                             external view returns (address[] memory, uint8[] memory, string[] memory) {\r\n        uint256 len = missions.length;                          // Get the total number of missions\r\n        uint256 count;                                          // Variable to count how many missions have ended\r\n\r\n        // First pass: count how many missions are ended\r\n        for (uint256 i = 0; i < len; i++) {                     // Loop through all missions\r\n            Status s = missionStatus[missions[i]];              // Get the status of the current mission\r\n            if (s == Status.Success || s == Status.Failed) {    // If the mission is in Success or Failed status\r\n                count++;\r\n            }\r\n        }\r\n\r\n        // Second pass: populate arrays\r\n        address[] memory result   = new address[](count);       // Create an array to hold the addresses of missions that have ended\r\n        uint8[]   memory statuses = new uint8[](count);         // Create a parallel array for statuses\r\n        string[]  memory names    = new string[](count);        // Create an array to hold the mission names\r\n        uint256 index;\r\n\r\n        for (uint256 i = 0; i < len; i++) {                     // Loop through all missions again\r\n            Status s = missionStatus[missions[i]];              // Get the status of the current mission\r\n            if (s == Status.Success || s == Status.Failed) {    // If the mission is in Success or Failed status\r\n                result[index] = missions[i];                    // Add the mission address to the result array  \r\n                statuses[index] = uint8(s);                     // Add the status to the statuses array\r\n                names[index] = missionNames[missions[i]];       // Add the mission name to the output array\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return (result, statuses, names);                       // Return arrays: addresses of missions not ended, their statuses and names  \r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addresses of the latest n missions.\r\n     * This function retrieves the last n missions from the list of all missions.\r\n     * @param n The number of latest missions to return.\r\n     * @return An array of mission addresses and an array of their corresponding statuses.\r\n     */\r\n    function getLatestMissions(uint256 n)                                   external view returns (address[] memory, uint8[] memory, string[] memory) {\r\n        uint256 total = missions.length;                    // Get the total number of missions\r\n        if (n > total) n = total;                           // If n is greater than the total number of missions, adjust n to total\r\n\r\n        address[] memory result   = new address[](n);       // Create an array to hold the addresses of the latest missions\r\n        uint8[]   memory statuses = new uint8[](n);         // Create a parallel array for statuses\r\n        string[]  memory names    = new string[](n);        // Create an array to hold the mission names\r\n\r\n        for (uint256 i = 0; i < n; i++) {                   // Loop through the last n missions\r\n            address m = missions[total - 1 - i];            // Get the address of the mission\r\n            result[i] = m;                                  // Add the mission address to the result array  \r\n            statuses[i] = uint8(missionStatus[m]);          // Add the status of the mission to the statuses array\r\n            names[i] = missionNames[missions[i]];           // Add the mission name to the output array\r\n       }\r\n\r\n        return (result, statuses, names);                   // Return arrays: addresses of missions not ended, their statuses and names  \r\n    }\r\n\r\n    /**\r\n     * @dev Returns the reserved funds for a specific mission type.\r\n     * @param _type The type of the mission to check.\r\n     * @return The amount of reserved funds for the specified mission type.\r\n     */\r\n    function getFundsByType(MissionType _type)                              external view returns (uint256) {\r\n        return reservedFunds[_type];                                                // Return the reserved funds for the specified mission type\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the proposal data\r\n     * @return newOwner the stored newOwner proposal\r\n     * @return proposer the proposer\r\n     * @return timestamp the time of the proposal\r\n     * @return timeLeft the time left\r\n     */   \r\n    function getOwnershipProposal()                                         external view returns (address newOwner, address proposer, uint256 timestamp, uint256 timeLeft) {\r\n        if (proposalTimestamp == 0) {\r\n            return (address(0), address(0), 0, 0);                              // No active proposal\r\n        }\r\n\r\n        uint256 expiry = proposalTimestamp + OWNERSHIP_PROPOSAL_WINDOW;\r\n        uint256 nowTs = block.timestamp;\r\n\r\n        if (nowTs >= expiry) {\r\n            return (proposedNewOwner, proposalProposer, proposalTimestamp, 0);  // Expired\r\n        }\r\n\r\n        return (\r\n            proposedNewOwner,\r\n            proposalProposer,\r\n            proposalTimestamp,\r\n            expiry - nowTs                                                      // Seconds remaining until expiry\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// ───────────────── Contract Mission ───────────────────\r\ncontract Mission        is Ownable, ReentrancyGuard {\r\n    \r\n    // ───────────────────── Events ─────────────────────\r\n    event MissionStatusChanged  (Status     indexed previousStatus, Status      indexed newStatus,      uint256 timestamp                   );\r\n    event PlayerEnrolled        (address    indexed player,         uint256             amount,         uint256 totalPlayers                );\r\n    event RoundCalled           (address    indexed player,         uint8       indexed roundNumber,    uint256 payout, uint256 croRemaining);\r\n    event PlayerRefunded        (address    indexed player,         uint256             amount                                              );\r\n    event FundsWithdrawn        (uint256            ownerAmount,    uint256             factoryAmount                                       );\r\n    event RefundFailed          (address    indexed player,         uint256             amount                                              ); \r\n    event MissionRefunded       (uint256    indexed nrOfPlayers,    uint256     indexed amount,         address[] indexed player,  uint256 timestamp); // Event emitted when a player is refunded\r\n    event MissionInitialized    (address    indexed owner,          MissionType indexed missionType,    uint256 timestamp                   );\r\n\tevent PotIncreased\t\t\t(uint256\t\t\tvalue,\t\t\tuint256\t\t\t\tcroCurrent\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n    // ────────── Player-facing custom errors ───────────\r\n    error EnrollmentNotStarted(uint256 nowTs, uint256 startTs);     // Enrollment has not started yet.\r\n    error EnrollmentClosed(uint256 nowTs, uint256 endTs);           // Enrollment is closed.\r\n    error MaxPlayers(uint8 maxPlayers);                             // Maximum number of players has been reached.  \r\n    error WrongEntryFee(uint256 expected, uint256 sent);            // The entry fee sent does not match the expected amount.\r\n    error AlreadyJoined();                                          // Player has already joined the mission.\r\n    error WeeklyLimit(uint256 secondsLeft);                         // Weekly  limit for mission enrollments has been reached.\r\n    error MonthlyLimit(uint256 secondsLeft);                        // Monthly limit for mission enrollments has been reached.\r\n    error Cooldown(uint256 secondsLeft);                            // Cooldown period is still active, cannot join a new mission.\r\n    error NotActive(uint256 nowTs, uint256 missionStart);           // Mission is not active yet.\r\n    error MissionEnded();                                           // Mission has already ended.\r\n    error AlreadyWon();                                             // Player has already won in a previous round.\r\n    error NotJoined();                                              // Player has not joined the mission.\r\n    error AllRoundsDone();                                          // All rounds of the mission have been completed.\r\n    error PayoutFailed(address winner, uint256 amount, bytes data); // Payout to a winner failed.\r\n    error ContractsNotAllowed();                                    // Contracts are not allowed to join the mission.   \r\n\r\n    // ──────────────────── Modifiers ───────────────────\r\n    /**\r\n     * @dev Modifier to restrict access to the owner or an authorized address.\r\n     * This is used for functions that can only be called by the owner or an authorized address.\r\n     */\r\n    modifier onlyOwnerOrAuthorized() {\r\n        require(\r\n            msg.sender == owner() || missionFactory.authorized(msg.sender),\r\n            \"Not owner or authorized\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    // ──────────────────── Structs ───────────────────── \r\n    /**\r\n     * @dev Struct to hold information about players who won the mission.\r\n     * Contains the player's address and the amount they won.\r\n     */\r\n    struct PlayersWon {\r\n        address player;                     // Address of the player who won\r\n        uint256 amountWon;                  // Amount won by the player\r\n    }\r\n\r\n    /**\r\n     * @dev Struct to hold all mission data.\r\n     * Contains information about players, mission status, enrollment details, and financials.\r\n     */\r\n    struct MissionData {\r\n        address[]       players;                        // Array to hold addresses of players enrolled in the mission\r\n        MissionType     missionType;                    // Type of the mission\r\n        uint256         enrollmentStart;                // Start and end times for enrollment\r\n        uint256         enrollmentEnd;                  // Start and end times for enrollment\r\n        uint256         enrollmentAmount;               // Amount required for enrollment\r\n        uint8           enrollmentMinPlayers;           // Minimum number of players required to start the mission\r\n        uint8           enrollmentMaxPlayers;           // Maximum number of players allowed in the mission\r\n        uint256         missionStart;                   // Start time for the mission\r\n        uint256         missionEnd;                     // End time for the mission\r\n        uint8           missionRounds;                  // Total number of rounds in the mission\r\n        uint8           roundCount;                     // Current round count  \r\n        uint256         croStart;                       // Initial CRO amount at the start of the mission\r\n        uint256         croCurrent;                     // Current CRO amount in the mission\r\n        PlayersWon[]    playersWon;                     // Array to hold players who won in the mission     \r\n        uint256         pauseTimestamp;                 // Time when the mission was paused\r\n        address[]       refundedPlayers;                // Track players who have been refunded\r\n        string          name;                           // Name of the mission\r\n    }\r\n\r\n    // ──────────────── State Variables ─────────────────\r\n    /**\r\n     * @dev Reference to the MissionFactory contract.\r\n     * This contract manages the overall mission lifecycle and player interactions.\r\n     */\r\n    MissionFactory              public  missionFactory;      // Reference to the MissionFactory contract\r\n    mapping(address => bool)    public  enrolled;            // Track if a player is enrolled in the mission\r\n    mapping(address => bool)    public  hasWon;              // Track if a player has won in any round\r\n    mapping(address => bool)    public  refunded;            // Track if a player has been refunded\r\n    mapping(address => uint256) public  failedRefundAmounts; // Track failed refund amounts for players\r\n    uint256                     public  ownerShare;          // Total share of funds for the owner\r\n    uint256                     public  factoryShare;        // Total share of funds for the MissionFactory\r\n    bool                        public  missionStartConditionChecked = false; // Flag to check if the mission start condition has been checked\r\n    MissionData                 private _missionData;        // Struct to hold all mission data  \r\n    bool                        private _initialized;        // Flag to track if the contract has been initialized\r\n    Status                      private _previousStatus;     // Track the previous status of the mission\r\n\r\n    // ────────────────── Constructor ───────────────────\r\n    /**\r\n     * @dev Constructor for the Mission contract.\r\n     * Initializes the contract with the owner set to address(0) to prevent accidental ownership.\r\n     * The actual ownership will be set during the initialization phase.\r\n     */\r\n    constructor() Ownable(msg.sender) {}      \r\n\r\n    // ────────────────── Initializer ───────────────────\r\n    /**\r\n     * @dev Initializes the Mission contract.\r\n     * This function sets the initial values for the mission and registers it with the MissionFactory.\r\n     * It can only be called once during contract deployment.\r\n     * @param _owner                The address of the owner of the contract.\r\n     * @param _missionFactory            The address of the MissionFactory contract.\r\n     * @param _missionType          The type of the mission.\r\n     * @param _enrollmentStart      The start time for enrollment.\r\n     * @param _enrollmentEnd        The end time for enrollment.\r\n     * @param _enrollmentAmount     The amount required for enrollment.\r\n     * @param _enrollmentMinPlayers The minimum number of players required to start the mission.\r\n     * @param _enrollmentMaxPlayers The maximum number of players allowed in the mission.\r\n     * @param _missionStart         The start time for the mission.\r\n     * @param _missionEnd           The end time for the mission.\r\n     * @param _missionRounds        The number of rounds in the mission.\r\n     */ \r\n    function initialize(\r\n        address         _owner,\r\n        address         _missionFactory,\r\n        MissionType     _missionType,\r\n        uint256         _enrollmentStart,\r\n        uint256         _enrollmentEnd,\r\n        uint256         _enrollmentAmount,\r\n        uint8           _enrollmentMinPlayers,\r\n        uint8           _enrollmentMaxPlayers,\r\n        uint256         _missionStart,\r\n        uint256         _missionEnd,\r\n        uint8           _missionRounds,\r\n        string calldata _name\r\n    )                                       external payable nonReentrant {\r\n        require(!_initialized, \"Already initialized\");                          // Ensure the contract is not already initialized\r\n\r\n        _initialized = true;\r\n\r\n        _transferOwnership(_owner);\r\n        missionFactory = MissionFactory(payable(_missionFactory));              // Set the MissionFactory contract reference\r\n\r\n        // Initialize mission data\r\n        _missionData.missionType             = _missionType;\r\n        _missionData.enrollmentStart         = _enrollmentStart;\r\n        _missionData.enrollmentEnd           = _enrollmentEnd;\r\n        _missionData.enrollmentAmount        = _enrollmentAmount;\r\n        _missionData.enrollmentMinPlayers    = _enrollmentMinPlayers;\r\n        _missionData.enrollmentMaxPlayers    = _enrollmentMaxPlayers;\r\n        _missionData.missionStart            = _missionStart;\r\n        _missionData.missionEnd              = _missionEnd;\r\n        _missionData.missionRounds           = _missionRounds;\r\n        _missionData.roundCount              = 0;\r\n        _missionData.croStart                = msg.value;                       // Set initial CRO amount to the value sent during initialization\r\n        _missionData.croCurrent              = msg.value;                       // Set current CRO amount to the value sent during initialization\r\n        _missionData.pauseTimestamp          = 0;                               // Initialize pause time to 0\r\n        _missionData.players                 = new address[](0);                // Initialize players array\r\n        _missionData.playersWon              = new PlayersWon[](0);             // Initialize playersWon array\r\n        _missionData.name = _name;\r\n        emit MissionInitialized(_owner, _missionType, block.timestamp);         // Emit event for mission initialization\r\n    }\r\n\r\n    // ──────────── Core Mission Functions ──────────────\r\n    /**\r\n     * @notice Allows a player to enroll by paying the enrollment fee.\r\n     * @dev Player can enroll only during the enrollment window and only once.\r\n     * @dev Reverts if:\r\n     *      - Player is a contract\r\n     *      - Enrollment period not open\r\n     *      - Max players reached\r\n     *      - Insufficient CRO sent\r\n     *      - Player has already enrolled\r\n     *      - Player has reached their weekly/monthly limit\r\n     */\r\n    function enrollPlayer()                 external payable nonReentrant {\r\n        uint256 nowTs = block.timestamp;                                                    // Get the current timestamp\r\n        address player = msg.sender;                                                        // Get the address of the player enrolling  \r\n\r\n        if (player.code.length > 0) {\r\n            revert ContractsNotAllowed();                                                   // Ensure that contracts cannot enroll in the mission\r\n        }\r\n        if (nowTs < _missionData.enrollmentStart) {\r\n            revert EnrollmentNotStarted(nowTs, _missionData.enrollmentStart);               // Check if enrollment has started\r\n        }\r\n        if (nowTs > _missionData.enrollmentEnd) {\r\n            revert EnrollmentClosed(nowTs, _missionData.enrollmentEnd);                     // Check if enrollment has ended\r\n        }\r\n\r\n        if (_missionData.players.length >= _missionData.enrollmentMaxPlayers) {\r\n            revert MaxPlayers(_missionData.enrollmentMaxPlayers);                           // Check if maximum players limit has been reached\r\n        }\r\n        if (msg.value != _missionData.enrollmentAmount) {\r\n            revert WrongEntryFee(_missionData.enrollmentAmount, msg.value);                 // Check if the sent CRO matches the required enrollment amount\r\n        }\r\n        if (enrolled[player]) revert AlreadyJoined();\r\n\r\n        (bool ok, Limit breach) = missionFactory.canEnroll(player);                         // Check if the player can enroll based on anti-addiction limits    \r\n        if (!ok) {                                                                          // If the player cannot enroll, revert with the appropriate limit breach error\r\n            if (breach == Limit.Weekly) {                                                   \r\n                revert WeeklyLimit(\r\n                    missionFactory.secondsTillWeeklySlot(player)                            // Revert with the time left until the next weekly slot\r\n                );\r\n            } else {                     \r\n                revert MonthlyLimit(\r\n                    missionFactory.secondsTillMonthlySlot(player)                           // Revert with the time left until the next monthly slot    \r\n                );\r\n            }\r\n        }\r\n\r\n        _missionData.players.push(player);                                                  // Add the player to the players array\r\n        enrolled[player] = true;                                                            // Mark the player as enrolled\r\n        _missionData.croStart += msg.value;                                                 // Increase the initial CRO amount by the enrollment fee\r\n        _missionData.croCurrent += msg.value;                                               // Increase the current CRO amount by the enrollment fee\r\n\r\n        _setStatus(Status.Enrolling);                                                       // Set the mission status to Enrolling\r\n        missionFactory.recordEnrollment(player);                                            // Record the player's enrollment in the MissionFactory contract\r\n        emit PlayerEnrolled(player, msg.value, _missionData.players.length);                // Emit event for player enrollment\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if the mission's conditions are met to start.\r\n     * Only callable by the owner or an authorized address\r\n     * This function must be called after the enrollment period ends and before the mission starts to\r\n     * refund players if the conditions are not met. If calling the function is obmitted, \r\n     * calling refundPlayers() is the last chance to refund players.\r\n     * @dev If conditions are not met, sets status to Failed and refunds players.\r\n     */\r\n    function checkMissionStartCondition()   external nonReentrant onlyOwnerOrAuthorized { \r\n        uint256 nowTs = block.timestamp;                                                    // Get the current timestamp\r\n        require(nowTs > _missionData.enrollmentEnd && nowTs < _missionData.missionStart, \r\n                 \"Mission not in arming window. Call refundPlayers instead\");               // Ensure mission is in the correct time window to check start conditions\r\n        require(missionStartConditionChecked == false, \"Already checked start condition\");  // Ensure the start condition has not been checked yet\r\n        missionStartConditionChecked = true;                                                // Set the flag to indicate that the mission start condition has been checked\r\n        if (_missionData.players.length == 0) {                                             // If no players enrolled, set status to Failed and withdraw funds\r\n            _setStatus(Status.Failed);                                                      // Set the mission status to Failed \r\n            _withdrawFunds(true);                                                           // Withdraw funds and refund players\r\n            return;\r\n        }\r\n        if (_missionData.players.length < _missionData.enrollmentMinPlayers) {\r\n            _setStatus(Status.Failed);                                                      // If not enough players, refund and set status to Failed\r\n            _refundPlayers();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Called by a player to claim a round reward.\r\n     * @dev A player can only win once. The mission must be Active and not expired.\r\n     * @dev After each round, the mission is Paused for:\r\n     *      - 5 minutes for normal rounds\r\n     *      - 1 minute before the final round\r\n     * @dev Emits {RoundClaimed}.\r\n     * @dev Reverts if:\r\n     *      - Mission is in Paused status\r\n     *      - Mission is not Active\r\n     *      - Player has already won a round\r\n     *      - Player is not enrolled in the mission\r\n     *      - All rounds have been claimed\r\n     *      - Payout transfer fails\r\n     * @dev If it is the last round, sets status to Success and withdraws funds\r\n     */\r\n    function callRound()                    external nonReentrant {\r\n        Status s = _getRealtimeStatus();                                                                                // Get the current real-time status of the mission\r\n        uint256 nowTs = block.timestamp;                                                                                // Get the current timestamp\r\n\r\n        if (s == Status.Paused) {\r\n            uint256 cd = (_missionData.roundCount + 1 == _missionData.missionRounds)\r\n                ? 60 : 300;                                                                                             // Cooldown duration: 1 minute before final round, 5 minutes otherwise\r\n            uint256 secsLeft = _missionData.pauseTimestamp + cd - nowTs;                                                // Calculate seconds left in the cooldown period\r\n                                                                    revert Cooldown(secsLeft);                          // Ensure the mission is not in a cooldown period\r\n        }\r\n        if (s < Status.Active)                                      revert NotActive(nowTs, _missionData.missionStart); // Ensure the mission is in Active status\r\n        if (s > Status.Active)                                      revert MissionEnded();                              // Ensure the mission has not ended\r\n        if (hasWon[msg.sender])                                     revert AlreadyWon();                                // Ensure the player has not already won a round\r\n        if (!enrolled[msg.sender])                                  revert NotJoined();                                 // Ensure the player is enrolled in the mission\r\n        if (_missionData.roundCount >= _missionData.missionRounds)  revert AllRoundsDone();                             // Ensure all rounds have not been claimed yet\r\n\r\n        uint256 progress = (nowTs - _missionData.missionStart) * 100                                                    // Calculate the progress percentage of the mission\r\n                        / (_missionData.missionEnd - _missionData.missionStart);\r\n        uint256 lastAmt = _missionData.playersWon.length > 0                                                            // Get the last payout amount, or 0 if no payouts have been made\r\n            ? _missionData.playersWon[_missionData.playersWon.length-1].amountWon\r\n            : 0;                                                                                                        \r\n        uint256 lastProg = (lastAmt * 100) / _missionData.croStart;                                                     // Calculate the last progress percentage based on the last payout amount\r\n        uint256 payout   = (progress - lastProg) * _missionData.croStart / 100;                                         // Calculate the payout amount based on the progress and last payout\r\n\r\n        _missionData.croCurrent -= payout;                                                                              // Deduct the payout from the current CRO amount\r\n        _missionData.roundCount++;                                                                                      // Increment the round count\r\n        hasWon[msg.sender] = true;                                                                                      // Mark the player as having won a round\r\n        _missionData.playersWon.push(PlayersWon(msg.sender, payout));                                                   // Add the player and their payout to the playersWon array\r\n\r\n        (bool ok, bytes memory data) = msg.sender.call{ value: payout }(\"\");                                            // Attempt to transfer the payout to the player\r\n        if (!ok)                                                    revert PayoutFailed(msg.sender, payout, data);      // If the transfer fails, revert with an error\r\n\r\n        emit RoundCalled(msg.sender, _missionData.roundCount, payout, _missionData.croCurrent);                         // Emit event for round claim\r\n\r\n        if (_missionData.roundCount == _missionData.missionRounds) {                                                    // If this is the last round, set status to Success\r\n            _setStatus(Status.Success);\r\n            _withdrawFunds(false);\r\n        } else {\r\n            _setStatus(Status.Paused);\r\n        }\r\n    }\r\n\r\n    // ────────────── Financial Functions ───────────────\r\n\t/**\r\n     * @dev Add funds to prize pool.\r\n     */\r\n\tfunction increasePot()                  external payable {\r\n\t\trequire(msg.value > 0, \"No funds sent\");                                            // Ensure some funds are sent\r\n        require(\r\n            msg.sender == address(missionFactory) || missionFactory.authorized(msg.sender) || msg.sender == owner(),\r\n            \"Only factory or authorized can fund\"\r\n        );                                                                                  // Ensure the sender is the MissionFactory or an authorized address\r\n        require(_getRealtimeStatus() < Status.Active, \"Mission passed activation\");         // Ensure the mission is not already active\r\n\t\t_missionData.croStart \t    += msg.value;                                           // Increase the initial CRO amount by the value sent\r\n\t\t_missionData.croCurrent \t+= msg.value;                                           // Increase the current CRO amount by the value sent\r\n\t\temit PotIncreased(msg.value, _missionData.croCurrent);                              // Emit event for pot increase\r\n\t}\r\n\r\n    /**\r\n     * @dev Refunds players if the mission fails.\r\n     * This function can be called by the owner or an authorized address.\r\n     */\r\n    function refundPlayers()                external nonReentrant onlyOwnerOrAuthorized {\r\n        _refundPlayers();                                                                                           // Call internal refund function\r\n    }\r\n\r\n    /**\r\n     * @notice Distributes remaining CRO after mission completion or failure.\r\n     * @dev Sends:\r\n     *      - 25% to factory owner\r\n     *      - 75% to MissionFactory (for future missions)\r\n     * @dev If `force = true`, also withdraws failed refund amounts.\r\n     */\r\n    function withdrawFunds()                external nonReentrant onlyOwnerOrAuthorized {\r\n        _withdrawFunds(true);                                                                                       // Call internal withdraw function\r\n    }\r\n\r\n    /**\r\n     * @notice Allows owner or authorized to finalize a mission after time expiry.\r\n     * @dev Ends mission and withdraws remaining pot.\r\n     */   \r\n    function forceFinalizeMission()         external onlyOwnerOrAuthorized nonReentrant {\r\n        require(_getRealtimeStatus() == Status.PartlySuccess || \r\n                _getRealtimeStatus() == Status.Success, \"Mission not ended yet\");   // Ensure mission is in PartlySuccess or Success status\r\n\r\n        _setStatus(Status.Success);\r\n        _withdrawFunds(false);                                                      // Withdraw funds to MissionFactory contract \r\n    }\r\n\r\n    // ───────────────── View Functions ─────────────────\r\n\r\n    /**\r\n     * @dev Returns the current number of players enrolled in the mission.\r\n     * This function retrieves the length of the players array in the mission data.\r\n     */\r\n    function getPlayerCount()               public view returns (uint256) {\r\n        return _missionData.players.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the address is a player in the mission.\r\n     * This function checks if the address is present in the players array of the mission data.\r\n     */\r\n    function isPlayer(address addr)         public view returns (bool) {\r\n        require(addr != address(0), \"Invalid address\");                 // Ensure the address is not zero\r\n        return enrolled[addr];                                          // Check if the address is enrolled in the mission                                                                        \r\n    }\r\n\r\n    /**\r\n     * @dev Returns the player state for a given address.\r\n     * This function checks if the player is enrolled and if they have won in any round.\r\n     * @param player The address of the player to check.\r\n     * @return joined A boolean indicating if the player is enrolled in the mission.\r\n     * @return won A boolean indicating if the player has won in any round.\r\n     */\r\n    function playerState(address player)    external view returns (bool joined, bool won) {\r\n        return (enrolled[player], hasWon[player]);           // Return the enrollment and win status of the player\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of seconds until the next round starts.\r\n     * This function checks the current real-time status of the mission and calculates the time until the next round.\r\n     * @return The number of seconds until the next round starts, or 0 if the mission is not paused.\r\n     */\r\n    function secondsUntilNextRound()        external view returns (uint256) {\r\n        Status s = _getRealtimeStatus();                                        // Get the current real-time status of the mission\r\n        if (s != Status.Paused) {\r\n            return 0;                                                           // If the mission is not paused, return 0 seconds until next round\r\n        }\r\n        uint256 nowTs = block.timestamp;                                        // Get the current timestamp\r\n        uint256 cd = (_missionData.roundCount + 1 == _missionData.missionRounds)\r\n            ? 60 : 300;                                                         // Cooldown duration: 1 minute before final round, 5 minutes otherwise\r\n        return _missionData.pauseTimestamp + cd - nowTs;                        // Calculate seconds until next round based on pause timestamp and cooldown duration\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current progress percentage of the mission.\r\n     * This function calculates the progress based on the elapsed time since the mission started.\r\n     * @return The current progress percentage of the mission.\r\n     */\r\n    function currentProgressPct()           external view returns (uint256){\r\n        uint256 nowTs = block.timestamp;                                                                            // Get the current timestamp\r\n        if (nowTs < _missionData.missionStart) {\r\n            return 0;                                                                                               // If the mission has not started, return 0% progress\r\n        }\r\n        if (nowTs >= _missionData.missionEnd) {\r\n            return 100;                                                                                             // If the mission has ended, return 100% progress\r\n        }\r\n        return (nowTs - _missionData.missionStart) * 100 / (_missionData.missionEnd - _missionData.missionStart);   // Calculate progress percentage based on elapsed time\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the pending payout for a player based on their progress in the mission.\r\n     * This function calculates the pending payout based on the current progress percentage and the last payout amount.\r\n     * @param player The address of the player to check for pending payout.\r\n     * @return The pending payout amount for the player, or 0 if not applicable.\r\n     */\r\n    function pendingPayout(address player)  external view returns (uint256) {\r\n        uint256 nowTs = block.timestamp;                                        // Get the current timestamp\r\n        Status s = _getRealtimeStatus();                                        // Get the current real-time status of the mission\r\n        if (s != Status.Active && s != Status.Paused) {\r\n            return 0;                                                           // If the mission is not Active or Paused, return 0 pending payout\r\n        }\r\n        if (!enrolled[player]) {\r\n            return 0;                                                           // If the player is not enrolled, return 0 pending payout\r\n        }\r\n        if (hasWon[player]) {\r\n            return 0;                                                           // If the player has already won, return 0 pending payout\r\n        }\r\n        if (nowTs < _missionData.missionStart) {\r\n            return 0;                                                           // If the mission has not started, return 0 pending payout\r\n        }\r\n        if (nowTs >= _missionData.missionEnd) {\r\n            return 0;                                                           // If the mission has ended, return 0 pending payout\r\n        }\r\n        uint256 progress = (nowTs - _missionData.missionStart) * 100 / (_missionData.missionEnd - _missionData.missionStart);  // Calculate progress percentage based on elapsed time\r\n\r\n        uint256 lastAmt = _missionData.playersWon.length > 0                    // Get the last payout amount, or 0 if no payouts have been made\r\n            ? _missionData.playersWon[_missionData.playersWon.length-1].amountWon\r\n            : 0;\r\n        uint256 lastProg = (lastAmt * 100) / _missionData.croStart;             // Calculate the last progress percentage based on the last payout amount\r\n\r\n        return (progress - lastProg) * _missionData.croStart / 100;             // Calculate pending payout based on progress and last payout\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of remaining rounds in the mission.\r\n     * This function checks the current real-time status of the mission and returns the number of rounds left.\r\n     * @return The number of remaining rounds in the mission, or 0 if the mission is not in Active or Paused status.\r\n     */\r\n    function remainingRounds()              external view returns (uint8) {\r\n        Status s = _getRealtimeStatus();                                        // Get the current real-time status of the mission\r\n        if (s == Status.Active || s == Status.Paused) {\r\n            return _missionData.missionRounds - _missionData.roundCount;        // If the mission is Active or Paused, return remaining rounds\r\n        }\r\n        return 0;                                                               // If the mission is not in Active or Paused status, return 0 remaining rounds\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the MissionData structure.\r\n     */\r\n    function getMissionData()               external view returns (MissionData memory) {\r\n        return _missionData;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current real-time status of the mission.\r\n     * This function checks the current time and mission data to determine the status.\r\n     * @return The current status of the mission.\r\n     */\r\n    function getRealtimeStatus()            external view returns (Status) {\r\n        return _getRealtimeStatus();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether the mission is in the arming phase.\r\n     * This function checks if the current time is between the enrollment end and mission start times.\r\n     * @return A boolean indicating if the mission is in the arming phase.\r\n     */\r\n    function isArming()                     public view returns (bool) {\r\n        uint256 nowTs = block.timestamp;\r\n        return (nowTs > _missionData.enrollmentEnd && nowTs < _missionData.missionStart);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether the mission is finalized by realtime status, \r\n            not the status set in the factory which can lag behind.\r\n     * This function checks if the mission is in Success or Failed status.\r\n     * @return A boolean indicating if the mission is finalized.\r\n     */ \r\n    function isFinalized()                  public view returns (bool) {\r\n        Status s = _getRealtimeStatus();\r\n        return (s == Status.Success || s == Status.Failed);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addresses of players who have failed refunds.\r\n     * This function iterates through all players and collects those with failed refund amounts.\r\n     * @return An array of player addresses who have failed refunds.\r\n     */\r\n    function getFailedRefundPlayers()       external view returns (address[] memory) {\r\n        require(_getRealtimeStatus() == Status.Failed, \"Mission is not in Failed status\");  // Ensure mission is in Failed status\r\n        uint256 count = 0;\r\n        for (uint256 i = 0; i < _missionData.players.length; i++) {                         // Iterate through all players\r\n            if (failedRefundAmounts[_missionData.players[i]] > 0) {                         // Check if the player has a failed refund amount   \r\n                count++;\r\n            }\r\n        }\r\n\r\n        address[] memory failedPlayers = new address[](count);                              // Create an array to hold failed refund players    \r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < _missionData.players.length; i++) {                         // Iterate through all players again\r\n            if (failedRefundAmounts[_missionData.players[i]] > 0) {                         // Check if the player has a failed refund amount\r\n                failedPlayers[index++] = _missionData.players[i];                           // Add the player to the failed refund players array    \r\n            }\r\n        }\r\n        return failedPlayers;                                                               // Return the array of failed refund players\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a player has been refunded.\r\n     * This function iterates through the refundedPlayers array to check if the address is present.\r\n     * @param addr The address of the player to check for refund status.\r\n     * @return A boolean indicating if the player has been refunded.\r\n     */ \r\n    function wasRefunded(address addr)      public view returns (bool) {\r\n        require(_getRealtimeStatus() == Status.Failed, \"Mission is not in Failed status\");  // Ensure mission is in Failed status\r\n        require(addr != address(0), \"Invalid address\");                                     // Ensure the address is not zero\r\n        require(enrolled[addr], \"Player not enrolled\");                                     // Ensure the address is enrolled\r\n        for (uint256 i = 0; i < _missionData.refundedPlayers.length; i++) {\r\n            if (_missionData.refundedPlayers[i] == addr) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the array of players who won in the mission.\r\n     * This function retrieves the playersWon array from the mission data.\r\n     */ \r\n    function getWinners()                   external view returns (PlayersWon[] memory) {\r\n        require(_getRealtimeStatus() == Status.Success || _getRealtimeStatus() == Status.PartlySuccess, \r\n                \"Mission is not in Success or PartlySuccess status\");                   // Ensure mission is in Success or PartlySuccess status\r\n        return _missionData.playersWon;                                                 // Return the array of players who won in the mission\r\n    }\r\n\r\n    // ──────────────── Internal Helpers ────────────────\r\n    /**\r\n     * @dev Returns the current status of the mission based on the current time and mission data.\r\n     * This function checks various conditions to determine the real-time status of the mission.\r\n     * @return status The current status of the mission.\r\n     */ \r\n    function _getRealtimeStatus()           internal view returns (Status status) {\r\n\r\n        // 1. Absolute states never change\r\n        if (_previousStatus == Status.Success || _previousStatus == Status.Failed) {\r\n            return _previousStatus;                                         // mission is already in Success or Failed state, return it\r\n        }\r\n\r\n        uint256 nowTs = block.timestamp;\r\n\r\n        // 2. Before enrollment even opens\r\n        if (nowTs < _missionData.enrollmentStart) {\r\n            return Status.Pending;                                          // mission is not yet open for enrollment\r\n        }\r\n\r\n        // 3. Enrollment window open\r\n        if (nowTs <= _missionData.enrollmentEnd) {\r\n            return Status.Enrolling;                                        // mission is open for enrollment                        \r\n        }\r\n\r\n        // 4. Enrollment closed – decide if we *could* arm\r\n        if (_missionData.players.length < _missionData.enrollmentMinPlayers) {\r\n            return Status.Failed;                                           // not enough players, mission failed   \r\n        }\r\n\r\n        // 5. Waiting for missionStart timestamp\r\n        if (nowTs < _missionData.missionStart) {\r\n            return Status.Arming;                                            // mission is ready to be armed, but not yet started\r\n        }\r\n        \r\n        // 6. Mission active\r\n        if (nowTs < _missionData.missionEnd) {\r\n            if (_missionData.roundCount >= _missionData.missionRounds) {\r\n                return Status.Success;                                      // all rounds completed, mission is successful\r\n            }\r\n            if (_missionData.pauseTimestamp == 0) {\r\n                return Status.Active;                                       // mission is active, no pause in progress\r\n            } else if (nowTs < _missionData.pauseTimestamp +\r\n                ((_missionData.roundCount + 1 == _missionData.missionRounds)\r\n                    ? 1 minutes\r\n                    : 5 minutes))                                           // if pause time is set, check if we are still in the pause window\r\n            {\r\n                return Status.Paused;                                       // in pause window, waiting for next round\r\n            } else {\r\n                return Status.Active;                                       // mission is active, no pause in progress                   \r\n            }           \r\n        }\r\n        else\r\n        {\r\n            if (_missionData.roundCount == 0) {\r\n                return Status.Failed;                                       // nobody ever called a round → full refund path\r\n            }\r\n            if (_missionData.roundCount < _missionData.missionRounds) {\r\n                return Status.PartlySuccess;                                // some rounds claimed; leftovers need finalization\r\n            }\r\n            return Status.Success;                                          // all rounds claimed\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the status of the mission.\r\n     * @param newStatus The new status to set for the mission.\r\n     */\r\n    function _setStatus(Status newStatus)   internal {\r\n        uint256 nowTs = block.timestamp;                                // Get the current timestamp\r\n        if (newStatus == Status.Enrolling       ||                      // If the new status is one of these, update the mission status in the MissionFactory\r\n            newStatus == Status.Arming          || \r\n            newStatus == Status.Success         ||\r\n            newStatus == Status.PartlySuccess   ||\r\n            newStatus == Status.Failed) \r\n        {  \r\n            missionFactory.setMissionStatus(newStatus);                 // Update the status in MissionFactory\r\n        }\r\n        if (newStatus == Status.Paused) {\r\n            _missionData.pauseTimestamp = nowTs;                        // Record the time when the mission was paused\r\n        }\r\n        else if (newStatus == Status.Active) {\r\n            _missionData.pauseTimestamp = 0;                            // Reset pause time when the mission is active\r\n        }\r\n        emit MissionStatusChanged(_previousStatus, newStatus, nowTs);   // Emit event for status change\r\n        _previousStatus = newStatus;                                    // Update the previous status to the new status\r\n    }\r\n\r\n    /**\r\n     * @notice Distributes remaining CRO after mission completion or failure.\r\n     * @dev Sends:\r\n     *      - 25% to factory owner\r\n     *      - 75% to MissionFactory (for future missions)\r\n     * @dev If `force = true`, also withdraws failed refund amounts.\r\n     */\r\n    function _withdrawFunds(bool force)     internal {\r\n        require(_getRealtimeStatus() == Status.Success || _getRealtimeStatus() == Status.Failed);   // Ensure mission is ended\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0,                                \"No funds to withdraw\");                // Ensure there are funds to withdraw\r\n\r\n        if (_missionData.players.length == 0) {                                                      \r\n            _setStatus(Status.Failed);                                                              // If no players, set status to Failed\r\n        }\r\n        uint256 distributable;\r\n        if (force) {\r\n            distributable = balance;                                                                // If force is true, all funds are distributable\r\n        } else {\r\n            uint256 unclaimable = _getTotalFailedRefunds();                                         // Get total failed refunds for all players  \r\n            if (unclaimable > balance) {                                                            // If unclaimable amount exceeds the balance      \r\n                unclaimable = balance;                                                              // safety check\r\n            }\r\n            distributable = balance - unclaimable;                                                  // Calculate distributable amount by subtracting unclaimable amounts\r\n        }\r\n\r\n        require(distributable > 0,                          \"No funds to withdraw\");                // Ensure there are funds to withdraw after deducting unclaimable amounts\r\n\r\n        uint256 _ownerShare = (distributable * 25) / 100;                                           // Calculate the owner's share (25% of distributable funds)     \r\n        uint256 _factoryShare = distributable - _ownerShare;                                        // Calculate the factory's share (75% of distributable funds)     \r\n\r\n        (bool ok, ) = payable(missionFactory.owner()).call{value: _ownerShare}(\"\");                 // Attempt to transfer the owner's share to the MissionFactory owner\r\n        require(ok,                                         \"Owner transfer failed\");               // Ensure the transfer was successful   \r\n\r\n        missionFactory.registerMissionFunds{ value: _factoryShare }(                                // Register the factory's share in the MissionFactory contract  \r\n            _missionData.missionType                                                                // Pass the mission type\r\n        );\r\n\r\n        emit FundsWithdrawn(_ownerShare, _factoryShare);                                            // Emit event for funds withdrawal\r\n        ownerShare = _ownerShare;                                                                   // Update the owner's share\r\n        factoryShare = _factoryShare;                                                               // Update the factory's share\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of failed refunds for all players.\r\n     * This function iterates through all players and sums their failed refund amounts.\r\n     * @return total The total amount of failed refunds for all players.\r\n     */\r\n    function _getTotalFailedRefunds()       internal view returns (uint256 total) {\r\n        for (uint256 i = 0; i < _missionData.players.length; i++) {                             // Iterate through all players\r\n            address player = _missionData.players[i];                                           // Get the player address\r\n            total += failedRefundAmounts[player];                                               // Add the player's failed refund amount to the total\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Refunds players if the mission fails.\r\n     * This function is internal and can only be called when the mission is in Failed status.\r\n     * It ensures that the mission has ended and that the enrollment period has passed.\r\n     * It refunds all enrolled players their enrollment amount.\r\n     */\r\n    function _refundPlayers()               internal {\r\n        require(_getRealtimeStatus() == Status.Failed,                  \"Mission not in Failed status\");        // Ensure mission is in Failed status\r\n        require(_missionData.players.length > 0,                         \"No players to refund\");               // Ensure there are players to refund\r\n        bool _force = true;\r\n        for (uint256 i = 0; i < _missionData.players.length; i++) {\r\n            address player = _missionData.players[i];                                                           // Get the player address\r\n            if (!refunded[player]) {                                                                            // Check if player has not been refunded\r\n                (bool ok, ) = payable(player).call{ value: _missionData.enrollmentAmount }(\"\");                 // Attempt to transfer the refund amount to the player\r\n                if (ok) {\r\n                    refunded[player] = true;                                                                    // If transfer successful, mark player as refunded\r\n                    _missionData.refundedPlayers.push(player);                                                  // If transfer successful, track refunded player\r\n                    emit PlayerRefunded(player, _missionData.enrollmentAmount);                                 // Emit PlayerRefunded event with player address and amount\r\n                } else {\r\n                    failedRefundAmounts[player] += _missionData.enrollmentAmount;                               // Track failed refund amounts for players\r\n                    emit RefundFailed(player, _missionData.enrollmentAmount);                                   // Log the failure, but don’t revert\r\n                    _force = false;                                                                             // Set force to false if any refund fails     \r\n                }\r\n            }\r\n        }\r\n        _setStatus(Status.Failed);                                                                              // Set the mission status to Failed\r\n        if (address(this).balance > 0) {                                                                        // If there are still funds left in the contract\r\n            _withdrawFunds(_force);                                                                             // Withdraw funds to MissionFactory contract \r\n        }\r\n        emit MissionRefunded(\r\n            _missionData.refundedPlayers.length,                                                                // Emit MissionRefunded event with number of players refunded\r\n            _missionData.enrollmentAmount,                                                                      // Emit MissionRefunded event with amount refunded to each player\r\n            _missionData.refundedPlayers,                                                                       // Emit MissionRefunded event with list of refunded players\r\n            block.timestamp                                                                                     // Emit MissionRefunded event with current timestamp\r\n        );\r\n    }\r\n\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[576],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":577,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,576],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[546],"Create2":[675],"Errors":[697]},"id":547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"../utils/Create2.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":676,"src":"126:45:1","symbolAliases":[{"foreign":{"id":150,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"134:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"../utils/Errors.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":698,"src":"172:43:1","symbolAliases":[{"foreign":{"id":152,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"180:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"217:599:1","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."},"fullyImplemented":true,"id":546,"linearizedBaseContracts":[546],"name":"Clones","nameLocation":"825:6:1","nodeType":"ContractDefinition","nodes":[{"errorSelector":"94289054","id":156,"name":"CloneArgumentsTooLong","nameLocation":"844:21:1","nodeType":"ErrorDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"865:2:1"},"src":"838:30:1"},{"body":{"id":169,"nodeType":"Block","src":"1480:48:1","statements":[{"expression":{"arguments":[{"id":165,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1503:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1519:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":164,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[170,215],"referencedDeclaration":215,"src":"1497:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) returns (address)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":163,"id":168,"nodeType":"Return","src":"1490:31:1"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"874:526:1","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":170,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1414:5:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"implementation","nameLocation":"1428:14:1","nodeType":"VariableDeclaration","scope":170,"src":"1420:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1419:24:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"instance","nameLocation":"1470:8:1","nodeType":"VariableDeclaration","scope":170,"src":"1462:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1461:18:1"},"scope":546,"src":"1405:123:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":214,"nodeType":"Block","src":"2345:820:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":182,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2367:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2359:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"2359:7:1","typeDescriptions":{}}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2373:7:1","memberName":"balance","nodeType":"MemberAccess","src":"2359:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2383:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2359:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":199,"nodeType":"IfStatement","src":"2355:123:1","trueBody":{"id":198,"nodeType":"Block","src":"2390:88:1","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":192,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2446:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2438:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:1","typeDescriptions":{}}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:7:1","memberName":"balance","nodeType":"MemberAccess","src":"2438:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2461:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":187,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2411:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2418:19:1","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":685,"src":"2411:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":197,"nodeType":"RevertStatement","src":"2404:63:1"}]}},{"AST":{"nativeSrc":"2512:553:1","nodeType":"YulBlock","src":"2512:553:1","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2717:4:1","nodeType":"YulLiteral","src":"2717:4:1","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2730:4:1","nodeType":"YulLiteral","src":"2730:4:1","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"2740:4:1","nodeType":"YulLiteral","src":"2740:4:1","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"2746:14:1","nodeType":"YulIdentifier","src":"2746:14:1"}],"functionName":{"name":"shl","nativeSrc":"2736:3:1","nodeType":"YulIdentifier","src":"2736:3:1"},"nativeSrc":"2736:25:1","nodeType":"YulFunctionCall","src":"2736:25:1"}],"functionName":{"name":"shr","nativeSrc":"2726:3:1","nodeType":"YulIdentifier","src":"2726:3:1"},"nativeSrc":"2726:36:1","nodeType":"YulFunctionCall","src":"2726:36:1"},{"kind":"number","nativeSrc":"2764:48:1","nodeType":"YulLiteral","src":"2764:48:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"2723:2:1","nodeType":"YulIdentifier","src":"2723:2:1"},"nativeSrc":"2723:90:1","nodeType":"YulFunctionCall","src":"2723:90:1"}],"functionName":{"name":"mstore","nativeSrc":"2710:6:1","nodeType":"YulIdentifier","src":"2710:6:1"},"nativeSrc":"2710:104:1","nodeType":"YulFunctionCall","src":"2710:104:1"},"nativeSrc":"2710:104:1","nodeType":"YulExpressionStatement","src":"2710:104:1"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2935:4:1","nodeType":"YulLiteral","src":"2935:4:1","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2948:4:1","nodeType":"YulLiteral","src":"2948:4:1","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"2954:14:1","nodeType":"YulIdentifier","src":"2954:14:1"}],"functionName":{"name":"shl","nativeSrc":"2944:3:1","nodeType":"YulIdentifier","src":"2944:3:1"},"nativeSrc":"2944:25:1","nodeType":"YulFunctionCall","src":"2944:25:1"},{"kind":"number","nativeSrc":"2971:32:1","nodeType":"YulLiteral","src":"2971:32:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"2941:2:1","nodeType":"YulIdentifier","src":"2941:2:1"},"nativeSrc":"2941:63:1","nodeType":"YulFunctionCall","src":"2941:63:1"}],"functionName":{"name":"mstore","nativeSrc":"2928:6:1","nodeType":"YulIdentifier","src":"2928:6:1"},"nativeSrc":"2928:77:1","nodeType":"YulFunctionCall","src":"2928:77:1"},"nativeSrc":"2928:77:1","nodeType":"YulExpressionStatement","src":"2928:77:1"},{"nativeSrc":"3018:37:1","nodeType":"YulAssignment","src":"3018:37:1","value":{"arguments":[{"name":"value","nativeSrc":"3037:5:1","nodeType":"YulIdentifier","src":"3037:5:1"},{"kind":"number","nativeSrc":"3044:4:1","nodeType":"YulLiteral","src":"3044:4:1","type":"","value":"0x09"},{"kind":"number","nativeSrc":"3050:4:1","nodeType":"YulLiteral","src":"3050:4:1","type":"","value":"0x37"}],"functionName":{"name":"create","nativeSrc":"3030:6:1","nodeType":"YulIdentifier","src":"3030:6:1"},"nativeSrc":"3030:25:1","nodeType":"YulFunctionCall","src":"3030:25:1"},"variableNames":[{"name":"instance","nativeSrc":"3018:8:1","nodeType":"YulIdentifier","src":"3018:8:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":173,"isOffset":false,"isSlot":false,"src":"2746:14:1","valueSize":1},{"declaration":173,"isOffset":false,"isSlot":false,"src":"2954:14:1","valueSize":1},{"declaration":178,"isOffset":false,"isSlot":false,"src":"3018:8:1","valueSize":1},{"declaration":175,"isOffset":false,"isSlot":false,"src":"3037:5:1","valueSize":1}],"flags":["memory-safe"],"id":200,"nodeType":"InlineAssembly","src":"2487:578:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":201,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"3078:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3098:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3090:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:1","typeDescriptions":{}}},"id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3090:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3078:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":213,"nodeType":"IfStatement","src":"3074:85:1","trueBody":{"id":212,"nodeType":"Block","src":"3102:57:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":207,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"3123:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3130:16:1","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":691,"src":"3123:23:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":211,"nodeType":"RevertStatement","src":"3116:32:1"}]}}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1534:716:1","text":" @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"2264:5:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"implementation","nameLocation":"2278:14:1","nodeType":"VariableDeclaration","scope":215,"src":"2270:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2270:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"value","nameLocation":"2302:5:1","nodeType":"VariableDeclaration","scope":215,"src":"2294:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2294:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:39:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"instance","nameLocation":"2335:8:1","nodeType":"VariableDeclaration","scope":215,"src":"2327:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2326:18:1"},"scope":546,"src":"2255:910:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"3977:67:1","statements":[{"expression":{"arguments":[{"id":226,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4013:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":227,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"4029:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4035:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":225,"name":"cloneDeterministic","nodeType":"Identifier","overloadedDeclarations":[232,279],"referencedDeclaration":279,"src":"3994:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes32,uint256) returns (address)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":224,"id":230,"nodeType":"Return","src":"3987:50:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3171:699:1","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":232,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"3884:18:1","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"implementation","nameLocation":"3911:14:1","nodeType":"VariableDeclaration","scope":232,"src":"3903:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"salt","nameLocation":"3935:4:1","nodeType":"VariableDeclaration","scope":232,"src":"3927:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3927:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3902:38:1"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"instance","nameLocation":"3967:8:1","nodeType":"VariableDeclaration","scope":232,"src":"3959:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3958:18:1"},"scope":546,"src":"3875:169:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"4952:827:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":246,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4974:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4966:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"4966:7:1","typeDescriptions":{}}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4980:7:1","memberName":"balance","nodeType":"MemberAccess","src":"4966:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4966:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":263,"nodeType":"IfStatement","src":"4962:123:1","trueBody":{"id":262,"nodeType":"Block","src":"4997:88:1","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":256,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5053:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5045:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"5045:7:1","typeDescriptions":{}}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5045:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5059:7:1","memberName":"balance","nodeType":"MemberAccess","src":"5045:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"5068:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":251,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5018:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5025:19:1","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":685,"src":"5018:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5018:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":261,"nodeType":"RevertStatement","src":"5011:63:1"}]}},{"AST":{"nativeSrc":"5119:560:1","nodeType":"YulBlock","src":"5119:560:1","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5324:4:1","nodeType":"YulLiteral","src":"5324:4:1","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5337:4:1","nodeType":"YulLiteral","src":"5337:4:1","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"5347:4:1","nodeType":"YulLiteral","src":"5347:4:1","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"5353:14:1","nodeType":"YulIdentifier","src":"5353:14:1"}],"functionName":{"name":"shl","nativeSrc":"5343:3:1","nodeType":"YulIdentifier","src":"5343:3:1"},"nativeSrc":"5343:25:1","nodeType":"YulFunctionCall","src":"5343:25:1"}],"functionName":{"name":"shr","nativeSrc":"5333:3:1","nodeType":"YulIdentifier","src":"5333:3:1"},"nativeSrc":"5333:36:1","nodeType":"YulFunctionCall","src":"5333:36:1"},{"kind":"number","nativeSrc":"5371:48:1","nodeType":"YulLiteral","src":"5371:48:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"5330:2:1","nodeType":"YulIdentifier","src":"5330:2:1"},"nativeSrc":"5330:90:1","nodeType":"YulFunctionCall","src":"5330:90:1"}],"functionName":{"name":"mstore","nativeSrc":"5317:6:1","nodeType":"YulIdentifier","src":"5317:6:1"},"nativeSrc":"5317:104:1","nodeType":"YulFunctionCall","src":"5317:104:1"},"nativeSrc":"5317:104:1","nodeType":"YulExpressionStatement","src":"5317:104:1"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5542:4:1","nodeType":"YulLiteral","src":"5542:4:1","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5555:4:1","nodeType":"YulLiteral","src":"5555:4:1","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"5561:14:1","nodeType":"YulIdentifier","src":"5561:14:1"}],"functionName":{"name":"shl","nativeSrc":"5551:3:1","nodeType":"YulIdentifier","src":"5551:3:1"},"nativeSrc":"5551:25:1","nodeType":"YulFunctionCall","src":"5551:25:1"},{"kind":"number","nativeSrc":"5578:32:1","nodeType":"YulLiteral","src":"5578:32:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"5548:2:1","nodeType":"YulIdentifier","src":"5548:2:1"},"nativeSrc":"5548:63:1","nodeType":"YulFunctionCall","src":"5548:63:1"}],"functionName":{"name":"mstore","nativeSrc":"5535:6:1","nodeType":"YulIdentifier","src":"5535:6:1"},"nativeSrc":"5535:77:1","nodeType":"YulFunctionCall","src":"5535:77:1"},"nativeSrc":"5535:77:1","nodeType":"YulExpressionStatement","src":"5535:77:1"},{"nativeSrc":"5625:44:1","nodeType":"YulAssignment","src":"5625:44:1","value":{"arguments":[{"name":"value","nativeSrc":"5645:5:1","nodeType":"YulIdentifier","src":"5645:5:1"},{"kind":"number","nativeSrc":"5652:4:1","nodeType":"YulLiteral","src":"5652:4:1","type":"","value":"0x09"},{"kind":"number","nativeSrc":"5658:4:1","nodeType":"YulLiteral","src":"5658:4:1","type":"","value":"0x37"},{"name":"salt","nativeSrc":"5664:4:1","nodeType":"YulIdentifier","src":"5664:4:1"}],"functionName":{"name":"create2","nativeSrc":"5637:7:1","nodeType":"YulIdentifier","src":"5637:7:1"},"nativeSrc":"5637:32:1","nodeType":"YulFunctionCall","src":"5637:32:1"},"variableNames":[{"name":"instance","nativeSrc":"5625:8:1","nodeType":"YulIdentifier","src":"5625:8:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":235,"isOffset":false,"isSlot":false,"src":"5353:14:1","valueSize":1},{"declaration":235,"isOffset":false,"isSlot":false,"src":"5561:14:1","valueSize":1},{"declaration":242,"isOffset":false,"isSlot":false,"src":"5625:8:1","valueSize":1},{"declaration":237,"isOffset":false,"isSlot":false,"src":"5664:4:1","valueSize":1},{"declaration":239,"isOffset":false,"isSlot":false,"src":"5645:5:1","valueSize":1}],"flags":["memory-safe"],"id":264,"nodeType":"InlineAssembly","src":"5094:585:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":265,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"5692:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5712:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5704:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"5704:7:1","typeDescriptions":{}}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5704:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5692:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":277,"nodeType":"IfStatement","src":"5688:85:1","trueBody":{"id":276,"nodeType":"Block","src":"5716:57:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":271,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5737:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5744:16:1","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":691,"src":"5737:23:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":275,"nodeType":"RevertStatement","src":"5730:32:1"}]}}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"4050:750:1","text":" @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"4814:18:1","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"implementation","nameLocation":"4850:14:1","nodeType":"VariableDeclaration","scope":279,"src":"4842:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"salt","nameLocation":"4882:4:1","nodeType":"VariableDeclaration","scope":279,"src":"4874:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4874:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"value","nameLocation":"4904:5:1","nodeType":"VariableDeclaration","scope":279,"src":"4896:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"4896:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4832:83:1"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"instance","nameLocation":"4942:8:1","nodeType":"VariableDeclaration","scope":279,"src":"4934:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"4934:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4933:18:1"},"scope":546,"src":"4805:974:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"6054:537:1","statements":[{"AST":{"nativeSrc":"6089:496:1","nodeType":"YulBlock","src":"6089:496:1","statements":[{"nativeSrc":"6103:22:1","nodeType":"YulVariableDeclaration","src":"6103:22:1","value":{"arguments":[{"kind":"number","nativeSrc":"6120:4:1","nodeType":"YulLiteral","src":"6120:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"6114:5:1","nodeType":"YulIdentifier","src":"6114:5:1"},"nativeSrc":"6114:11:1","nodeType":"YulFunctionCall","src":"6114:11:1"},"variables":[{"name":"ptr","nativeSrc":"6107:3:1","nodeType":"YulTypedName","src":"6107:3:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6149:3:1","nodeType":"YulIdentifier","src":"6149:3:1"},{"kind":"number","nativeSrc":"6154:4:1","nodeType":"YulLiteral","src":"6154:4:1","type":"","value":"0x38"}],"functionName":{"name":"add","nativeSrc":"6145:3:1","nodeType":"YulIdentifier","src":"6145:3:1"},"nativeSrc":"6145:14:1","nodeType":"YulFunctionCall","src":"6145:14:1"},{"name":"deployer","nativeSrc":"6161:8:1","nodeType":"YulIdentifier","src":"6161:8:1"}],"functionName":{"name":"mstore","nativeSrc":"6138:6:1","nodeType":"YulIdentifier","src":"6138:6:1"},"nativeSrc":"6138:32:1","nodeType":"YulFunctionCall","src":"6138:32:1"},"nativeSrc":"6138:32:1","nodeType":"YulExpressionStatement","src":"6138:32:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6194:3:1","nodeType":"YulIdentifier","src":"6194:3:1"},{"kind":"number","nativeSrc":"6199:4:1","nodeType":"YulLiteral","src":"6199:4:1","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"6190:3:1","nodeType":"YulIdentifier","src":"6190:3:1"},"nativeSrc":"6190:14:1","nodeType":"YulFunctionCall","src":"6190:14:1"},{"kind":"number","nativeSrc":"6206:34:1","nodeType":"YulLiteral","src":"6206:34:1","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nativeSrc":"6183:6:1","nodeType":"YulIdentifier","src":"6183:6:1"},"nativeSrc":"6183:58:1","nodeType":"YulFunctionCall","src":"6183:58:1"},"nativeSrc":"6183:58:1","nodeType":"YulExpressionStatement","src":"6183:58:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6265:3:1","nodeType":"YulIdentifier","src":"6265:3:1"},{"kind":"number","nativeSrc":"6270:4:1","nodeType":"YulLiteral","src":"6270:4:1","type":"","value":"0x14"}],"functionName":{"name":"add","nativeSrc":"6261:3:1","nodeType":"YulIdentifier","src":"6261:3:1"},"nativeSrc":"6261:14:1","nodeType":"YulFunctionCall","src":"6261:14:1"},{"name":"implementation","nativeSrc":"6277:14:1","nodeType":"YulIdentifier","src":"6277:14:1"}],"functionName":{"name":"mstore","nativeSrc":"6254:6:1","nodeType":"YulIdentifier","src":"6254:6:1"},"nativeSrc":"6254:38:1","nodeType":"YulFunctionCall","src":"6254:38:1"},"nativeSrc":"6254:38:1","nodeType":"YulExpressionStatement","src":"6254:38:1"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"6312:3:1","nodeType":"YulIdentifier","src":"6312:3:1"},{"kind":"number","nativeSrc":"6317:42:1","nodeType":"YulLiteral","src":"6317:42:1","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nativeSrc":"6305:6:1","nodeType":"YulIdentifier","src":"6305:6:1"},"nativeSrc":"6305:55:1","nodeType":"YulFunctionCall","src":"6305:55:1"},"nativeSrc":"6305:55:1","nodeType":"YulExpressionStatement","src":"6305:55:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6384:3:1","nodeType":"YulIdentifier","src":"6384:3:1"},{"kind":"number","nativeSrc":"6389:4:1","nodeType":"YulLiteral","src":"6389:4:1","type":"","value":"0x58"}],"functionName":{"name":"add","nativeSrc":"6380:3:1","nodeType":"YulIdentifier","src":"6380:3:1"},"nativeSrc":"6380:14:1","nodeType":"YulFunctionCall","src":"6380:14:1"},{"name":"salt","nativeSrc":"6396:4:1","nodeType":"YulIdentifier","src":"6396:4:1"}],"functionName":{"name":"mstore","nativeSrc":"6373:6:1","nodeType":"YulIdentifier","src":"6373:6:1"},"nativeSrc":"6373:28:1","nodeType":"YulFunctionCall","src":"6373:28:1"},"nativeSrc":"6373:28:1","nodeType":"YulExpressionStatement","src":"6373:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6425:3:1","nodeType":"YulIdentifier","src":"6425:3:1"},{"kind":"number","nativeSrc":"6430:4:1","nodeType":"YulLiteral","src":"6430:4:1","type":"","value":"0x78"}],"functionName":{"name":"add","nativeSrc":"6421:3:1","nodeType":"YulIdentifier","src":"6421:3:1"},"nativeSrc":"6421:14:1","nodeType":"YulFunctionCall","src":"6421:14:1"},{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6451:3:1","nodeType":"YulIdentifier","src":"6451:3:1"},{"kind":"number","nativeSrc":"6456:4:1","nodeType":"YulLiteral","src":"6456:4:1","type":"","value":"0x0c"}],"functionName":{"name":"add","nativeSrc":"6447:3:1","nodeType":"YulIdentifier","src":"6447:3:1"},"nativeSrc":"6447:14:1","nodeType":"YulFunctionCall","src":"6447:14:1"},{"kind":"number","nativeSrc":"6463:4:1","nodeType":"YulLiteral","src":"6463:4:1","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nativeSrc":"6437:9:1","nodeType":"YulIdentifier","src":"6437:9:1"},"nativeSrc":"6437:31:1","nodeType":"YulFunctionCall","src":"6437:31:1"}],"functionName":{"name":"mstore","nativeSrc":"6414:6:1","nodeType":"YulIdentifier","src":"6414:6:1"},"nativeSrc":"6414:55:1","nodeType":"YulFunctionCall","src":"6414:55:1"},"nativeSrc":"6414:55:1","nodeType":"YulExpressionStatement","src":"6414:55:1"},{"nativeSrc":"6482:93:1","nodeType":"YulAssignment","src":"6482:93:1","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6513:3:1","nodeType":"YulIdentifier","src":"6513:3:1"},{"kind":"number","nativeSrc":"6518:4:1","nodeType":"YulLiteral","src":"6518:4:1","type":"","value":"0x43"}],"functionName":{"name":"add","nativeSrc":"6509:3:1","nodeType":"YulIdentifier","src":"6509:3:1"},"nativeSrc":"6509:14:1","nodeType":"YulFunctionCall","src":"6509:14:1"},{"kind":"number","nativeSrc":"6525:4:1","nodeType":"YulLiteral","src":"6525:4:1","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nativeSrc":"6499:9:1","nodeType":"YulIdentifier","src":"6499:9:1"},"nativeSrc":"6499:31:1","nodeType":"YulFunctionCall","src":"6499:31:1"},{"kind":"number","nativeSrc":"6532:42:1","nodeType":"YulLiteral","src":"6532:42:1","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6495:3:1","nodeType":"YulIdentifier","src":"6495:3:1"},"nativeSrc":"6495:80:1","nodeType":"YulFunctionCall","src":"6495:80:1"},"variableNames":[{"name":"predicted","nativeSrc":"6482:9:1","nodeType":"YulIdentifier","src":"6482:9:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":286,"isOffset":false,"isSlot":false,"src":"6161:8:1","valueSize":1},{"declaration":282,"isOffset":false,"isSlot":false,"src":"6277:14:1","valueSize":1},{"declaration":289,"isOffset":false,"isSlot":false,"src":"6482:9:1","valueSize":1},{"declaration":284,"isOffset":false,"isSlot":false,"src":"6396:4:1","valueSize":1}],"flags":["memory-safe"],"id":291,"nodeType":"InlineAssembly","src":"6064:521:1"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5785:99:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":293,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"5898:27:1","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"implementation","nameLocation":"5943:14:1","nodeType":"VariableDeclaration","scope":293,"src":"5935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"salt","nameLocation":"5975:4:1","nodeType":"VariableDeclaration","scope":293,"src":"5967:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"deployer","nameLocation":"5997:8:1","nodeType":"VariableDeclaration","scope":293,"src":"5989:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"5989:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5925:86:1"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"predicted","nameLocation":"6043:9:1","nodeType":"VariableDeclaration","scope":293,"src":"6035:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"6035:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6034:19:1"},"scope":546,"src":"5889:702:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":312,"nodeType":"Block","src":"6840:88:1","statements":[{"expression":{"arguments":[{"id":304,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"6885:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6901:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":308,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6915:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6907:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"6907:7:1","typeDescriptions":{}}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6907:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":303,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[293,313],"referencedDeclaration":293,"src":"6857:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":302,"id":311,"nodeType":"Return","src":"6850:71:1"}]},"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"6597:99:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":313,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"6710:27:1","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"implementation","nameLocation":"6755:14:1","nodeType":"VariableDeclaration","scope":313,"src":"6747:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"salt","nameLocation":"6787:4:1","nodeType":"VariableDeclaration","scope":313,"src":"6779:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6779:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6737:60:1"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"predicted","nameLocation":"6829:9:1","nodeType":"VariableDeclaration","scope":313,"src":"6821:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"6821:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6820:19:1"},"scope":546,"src":"6701:227:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":329,"nodeType":"Block","src":"7769:71:1","statements":[{"expression":{"arguments":[{"id":324,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"7809:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":325,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7825:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7831:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":323,"name":"cloneWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[330,384],"referencedDeclaration":384,"src":"7786:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,uint256) returns (address)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7786:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":322,"id":328,"nodeType":"Return","src":"7779:54:1"}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"6934:719:1","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"7667:22:1","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"implementation","nameLocation":"7698:14:1","nodeType":"VariableDeclaration","scope":330,"src":"7690:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"7690:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"args","nameLocation":"7727:4:1","nodeType":"VariableDeclaration","scope":330,"src":"7714:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"7714:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7689:43:1"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"instance","nameLocation":"7759:8:1","nodeType":"VariableDeclaration","scope":330,"src":"7751:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"7751:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7750:18:1"},"scope":546,"src":"7658:182:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":383,"nodeType":"Block","src":"8763:437:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8785:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8777:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"8777:7:1","typeDescriptions":{}}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8777:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8791:7:1","memberName":"balance","nodeType":"MemberAccess","src":"8777:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8801:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8777:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":361,"nodeType":"IfStatement","src":"8773:123:1","trueBody":{"id":360,"nodeType":"Block","src":"8808:88:1","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":354,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8864:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:1","typeDescriptions":{}}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8856:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8870:7:1","memberName":"balance","nodeType":"MemberAccess","src":"8856:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8879:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":349,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"8829:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8836:19:1","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":685,"src":"8829:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8829:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":359,"nodeType":"RevertStatement","src":"8822:63:1"}]}},{"assignments":[363],"declarations":[{"constant":false,"id":363,"mutability":"mutable","name":"bytecode","nameLocation":"8918:8:1","nodeType":"VariableDeclaration","scope":383,"src":"8905:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":362,"name":"bytes","nodeType":"ElementaryTypeName","src":"8905:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":368,"initialValue":{"arguments":[{"id":365,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8957:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":366,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"8973:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":364,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"8929:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8929:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8905:73:1"},{"AST":{"nativeSrc":"9013:87:1","nodeType":"YulBlock","src":"9013:87:1","statements":[{"nativeSrc":"9027:63:1","nodeType":"YulAssignment","src":"9027:63:1","value":{"arguments":[{"name":"value","nativeSrc":"9046:5:1","nodeType":"YulIdentifier","src":"9046:5:1"},{"arguments":[{"name":"bytecode","nativeSrc":"9057:8:1","nodeType":"YulIdentifier","src":"9057:8:1"},{"kind":"number","nativeSrc":"9067:4:1","nodeType":"YulLiteral","src":"9067:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9053:3:1","nodeType":"YulIdentifier","src":"9053:3:1"},"nativeSrc":"9053:19:1","nodeType":"YulFunctionCall","src":"9053:19:1"},{"arguments":[{"name":"bytecode","nativeSrc":"9080:8:1","nodeType":"YulIdentifier","src":"9080:8:1"}],"functionName":{"name":"mload","nativeSrc":"9074:5:1","nodeType":"YulIdentifier","src":"9074:5:1"},"nativeSrc":"9074:15:1","nodeType":"YulFunctionCall","src":"9074:15:1"}],"functionName":{"name":"create","nativeSrc":"9039:6:1","nodeType":"YulIdentifier","src":"9039:6:1"},"nativeSrc":"9039:51:1","nodeType":"YulFunctionCall","src":"9039:51:1"},"variableNames":[{"name":"instance","nativeSrc":"9027:8:1","nodeType":"YulIdentifier","src":"9027:8:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":363,"isOffset":false,"isSlot":false,"src":"9057:8:1","valueSize":1},{"declaration":363,"isOffset":false,"isSlot":false,"src":"9080:8:1","valueSize":1},{"declaration":340,"isOffset":false,"isSlot":false,"src":"9027:8:1","valueSize":1},{"declaration":337,"isOffset":false,"isSlot":false,"src":"9046:5:1","valueSize":1}],"flags":["memory-safe"],"id":369,"nodeType":"InlineAssembly","src":"8988:112:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"9113:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9133:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9125:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"9125:7:1","typeDescriptions":{}}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9125:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9113:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":382,"nodeType":"IfStatement","src":"9109:85:1","trueBody":{"id":381,"nodeType":"Block","src":"9137:57:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":376,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"9158:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:16:1","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":691,"src":"9158:23:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9158:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":380,"nodeType":"RevertStatement","src":"9151:32:1"}]}}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"7846:756:1","text":" @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":384,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"8616:22:1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"implementation","nameLocation":"8656:14:1","nodeType":"VariableDeclaration","scope":384,"src":"8648:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"args","nameLocation":"8693:4:1","nodeType":"VariableDeclaration","scope":384,"src":"8680:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":334,"name":"bytes","nodeType":"ElementaryTypeName","src":"8680:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"value","nameLocation":"8715:5:1","nodeType":"VariableDeclaration","scope":384,"src":"8707:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"8707:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8638:88:1"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"instance","nameLocation":"8753:8:1","nodeType":"VariableDeclaration","scope":384,"src":"8745:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"8745:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8744:18:1"},"scope":546,"src":"8607:593:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":403,"nodeType":"Block","src":"10279:90:1","statements":[{"expression":{"arguments":[{"id":397,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"10332:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"10348:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":399,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"10354:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":396,"name":"cloneDeterministicWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[404,433],"referencedDeclaration":433,"src":"10296:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,uint256) returns (address)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":395,"id":402,"nodeType":"Return","src":"10289:73:1"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"9206:900:1","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":404,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"10120:35:1","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"implementation","nameLocation":"10173:14:1","nodeType":"VariableDeclaration","scope":404,"src":"10165:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"10165:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"args","nameLocation":"10210:4:1","nodeType":"VariableDeclaration","scope":404,"src":"10197:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":388,"name":"bytes","nodeType":"ElementaryTypeName","src":"10197:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"salt","nameLocation":"10232:4:1","nodeType":"VariableDeclaration","scope":404,"src":"10224:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10224:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10155:87:1"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"instance","nameLocation":"10269:8:1","nodeType":"VariableDeclaration","scope":404,"src":"10261:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"10261:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10260:18:1"},"scope":546,"src":"10111:258:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":432,"nodeType":"Block","src":"11361:144:1","statements":[{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"bytecode","nameLocation":"11384:8:1","nodeType":"VariableDeclaration","scope":432,"src":"11371:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":418,"name":"bytes","nodeType":"ElementaryTypeName","src":"11371:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[{"id":421,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"11423:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":422,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"11439:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":420,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"11395:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11395:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11371:73:1"},{"expression":{"arguments":[{"id":427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"11476:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":428,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"11483:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":429,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"11489:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":425,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"11461:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$675_$","typeString":"type(library Create2)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11469:6:1","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":640,"src":"11461:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11461:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":417,"id":431,"nodeType":"Return","src":"11454:44:1"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"10375:790:1","text":" @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":433,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"11179:35:1","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"implementation","nameLocation":"11232:14:1","nodeType":"VariableDeclaration","scope":433,"src":"11224:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"11224:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"args","nameLocation":"11269:4:1","nodeType":"VariableDeclaration","scope":433,"src":"11256:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":408,"name":"bytes","nodeType":"ElementaryTypeName","src":"11256:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"salt","nameLocation":"11291:4:1","nodeType":"VariableDeclaration","scope":433,"src":"11283:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11283:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"value","nameLocation":"11313:5:1","nodeType":"VariableDeclaration","scope":433,"src":"11305:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"11305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11214:110:1"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"instance","nameLocation":"11351:8:1","nodeType":"VariableDeclaration","scope":433,"src":"11343:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"11343:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11342:18:1"},"scope":546,"src":"11170:335:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":463,"nodeType":"Block","src":"11841:166:1","statements":[{"assignments":[448],"declarations":[{"constant":false,"id":448,"mutability":"mutable","name":"bytecode","nameLocation":"11864:8:1","nodeType":"VariableDeclaration","scope":463,"src":"11851:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":447,"name":"bytes","nodeType":"ElementaryTypeName","src":"11851:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":453,"initialValue":{"arguments":[{"id":450,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"11903:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":451,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"11919:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":449,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"11875:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11875:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11851:73:1"},{"expression":{"arguments":[{"id":456,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"11964:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":458,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"11980:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":457,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11970:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11970:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":460,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"11991:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":454,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"11941:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$675_$","typeString":"type(library Create2)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11949:14:1","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":674,"src":"11941:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11941:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":446,"id":462,"nodeType":"Return","src":"11934:66:1"}]},"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"11511:116:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"11641:44:1","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"implementation","nameLocation":"11703:14:1","nodeType":"VariableDeclaration","scope":464,"src":"11695:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"11695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"args","nameLocation":"11740:4:1","nodeType":"VariableDeclaration","scope":464,"src":"11727:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":437,"name":"bytes","nodeType":"ElementaryTypeName","src":"11727:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"salt","nameLocation":"11762:4:1","nodeType":"VariableDeclaration","scope":464,"src":"11754:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11754:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"deployer","nameLocation":"11784:8:1","nodeType":"VariableDeclaration","scope":464,"src":"11776:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"11776:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11685:113:1"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"predicted","nameLocation":"11830:9:1","nodeType":"VariableDeclaration","scope":464,"src":"11822:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"11822:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11821:19:1"},"scope":546,"src":"11632:375:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":486,"nodeType":"Block","src":"12317:111:1","statements":[{"expression":{"arguments":[{"id":477,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"12379:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"12395:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":479,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"12401:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":482,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12415:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$546","typeString":"library Clones"}],"id":481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12407:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"12407:7:1","typeDescriptions":{}}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12407:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"predictDeterministicAddressWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[464,487],"referencedDeclaration":464,"src":"12334:44:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,address) pure returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12334:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":475,"id":485,"nodeType":"Return","src":"12327:94:1"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"12013:116:1","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":487,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"12143:44:1","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"implementation","nameLocation":"12205:14:1","nodeType":"VariableDeclaration","scope":487,"src":"12197:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"12197:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"args","nameLocation":"12242:4:1","nodeType":"VariableDeclaration","scope":487,"src":"12229:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":468,"name":"bytes","nodeType":"ElementaryTypeName","src":"12229:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"salt","nameLocation":"12264:4:1","nodeType":"VariableDeclaration","scope":487,"src":"12256:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12256:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12187:87:1"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"predicted","nameLocation":"12306:9:1","nodeType":"VariableDeclaration","scope":487,"src":"12298:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"12298:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12297:19:1"},"scope":546,"src":"12134:294:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"13121:246:1","statements":[{"assignments":[496],"declarations":[{"constant":false,"id":496,"mutability":"mutable","name":"result","nameLocation":"13144:6:1","nodeType":"VariableDeclaration","scope":509,"src":"13131:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":495,"name":"bytes","nodeType":"ElementaryTypeName","src":"13131:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":505,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":499,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"13163:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13172:4:1","memberName":"code","nodeType":"MemberAccess","src":"13163:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13177:6:1","memberName":"length","nodeType":"MemberAccess","src":"13163:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3435","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13186:2:1","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"13163:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13153:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":497,"name":"bytes","nodeType":"ElementaryTypeName","src":"13157:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13153:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13131:58:1"},{"AST":{"nativeSrc":"13257:81:1","nodeType":"YulBlock","src":"13257:81:1","statements":[{"expression":{"arguments":[{"name":"instance","nativeSrc":"13283:8:1","nodeType":"YulIdentifier","src":"13283:8:1"},{"arguments":[{"name":"result","nativeSrc":"13297:6:1","nodeType":"YulIdentifier","src":"13297:6:1"},{"kind":"number","nativeSrc":"13305:2:1","nodeType":"YulLiteral","src":"13305:2:1","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13293:3:1","nodeType":"YulIdentifier","src":"13293:3:1"},"nativeSrc":"13293:15:1","nodeType":"YulFunctionCall","src":"13293:15:1"},{"kind":"number","nativeSrc":"13310:2:1","nodeType":"YulLiteral","src":"13310:2:1","type":"","value":"45"},{"arguments":[{"name":"result","nativeSrc":"13320:6:1","nodeType":"YulIdentifier","src":"13320:6:1"}],"functionName":{"name":"mload","nativeSrc":"13314:5:1","nodeType":"YulIdentifier","src":"13314:5:1"},"nativeSrc":"13314:13:1","nodeType":"YulFunctionCall","src":"13314:13:1"}],"functionName":{"name":"extcodecopy","nativeSrc":"13271:11:1","nodeType":"YulIdentifier","src":"13271:11:1"},"nativeSrc":"13271:57:1","nodeType":"YulFunctionCall","src":"13271:57:1"},"nativeSrc":"13271:57:1","nodeType":"YulExpressionStatement","src":"13271:57:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":490,"isOffset":false,"isSlot":false,"src":"13283:8:1","valueSize":1},{"declaration":496,"isOffset":false,"isSlot":false,"src":"13297:6:1","valueSize":1},{"declaration":496,"isOffset":false,"isSlot":false,"src":"13320:6:1","valueSize":1}],"flags":["memory-safe"],"id":506,"nodeType":"InlineAssembly","src":"13232:106:1"},{"expression":{"id":507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"13354:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":494,"id":508,"nodeType":"Return","src":"13347:13:1"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"12434:603:1","text":" @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"fetchCloneArgs","nameLocation":"13051:14:1","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"instance","nameLocation":"13074:8:1","nodeType":"VariableDeclaration","scope":510,"src":"13066:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"13066:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13065:18:1"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":510,"src":"13107:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":492,"name":"bytes","nodeType":"ElementaryTypeName","src":"13107:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13106:14:1"},"scope":546,"src":"13042:325:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":544,"nodeType":"Block","src":"14156:362:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":520,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"14170:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14175:6:1","memberName":"length","nodeType":"MemberAccess","src":"14170:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3234353331","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14184:5:1","typeDescriptions":{"typeIdentifier":"t_rational_24531_by_1","typeString":"int_const 24531"},"value":"24531"},"src":"14170:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":527,"nodeType":"IfStatement","src":"14166:55:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":524,"name":"CloneArgumentsTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"14198:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14198:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":526,"nodeType":"RevertStatement","src":"14191:30:1"}},{"expression":{"arguments":[{"hexValue":"61","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14284:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},"value":"a"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":533,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"14316:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14321:6:1","memberName":"length","nodeType":"MemberAccess","src":"14316:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3435","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14330:2:1","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"14316:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14309:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":531,"name":"uint16","nodeType":"ElementaryTypeName","src":"14309:6:1","typeDescriptions":{}}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14309:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"3d81600a3d39f3363d3d373d3d3d363d73","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14351:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""}},{"id":539,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"14408:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"5af43d82803e903d91602b57fd5bf3","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14440:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""}},{"id":541,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"14493:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":528,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14250:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14254:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"14250:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14250:261:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":519,"id":543,"nodeType":"Return","src":"14231:280:1"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"13373:640:1","text":" @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"_cloneCodeWithImmutableArgs","nameLocation":"14027:27:1","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"implementation","nameLocation":"14072:14:1","nodeType":"VariableDeclaration","scope":545,"src":"14064:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"14064:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"args","nameLocation":"14109:4:1","nodeType":"VariableDeclaration","scope":545,"src":"14096:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":514,"name":"bytes","nodeType":"ElementaryTypeName","src":"14096:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14054:65:1"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"14142:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"14142:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14141:14:1"},"scope":546,"src":"14018:500:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":547,"src":"817:13703:1","usedErrors":[156],"usedEvents":[]}],"src":"100:14421:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[576]},"id":577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":548,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":576,"linearizedBaseContracts":[576],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":557,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":554,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":553,"id":556,"nodeType":"Return","src":"728:17:2"}]},"id":558,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":576,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":566,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":562,"id":565,"nodeType":"Return","src":"835:15:2"}]},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":560,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":576,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":574,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":571,"id":573,"nodeType":"Return","src":"945:8:2"}]},"id":575,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":575,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":576,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":577,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[675],"Errors":[697]},"id":676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":578,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":676,"sourceUnit":698,"src":"127:36:3","symbolAliases":[{"foreign":{"id":579,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"135:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"165:367:3","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":675,"linearizedBaseContracts":[675],"name":"Create2","nameLocation":"541:7:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"555:50:3","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":584,"name":"Create2EmptyBytecode","nameLocation":"616:20:3","nodeType":"ErrorDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"636:2:3"},"src":"610:29:3"},{"body":{"id":639,"nodeType":"Block","src":"1311:746:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":598,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1333:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$675","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$675","typeString":"library Create2"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1325:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:3","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1339:7:3","memberName":"balance","nodeType":"MemberAccess","src":"1325:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"1349:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1325:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":615,"nodeType":"IfStatement","src":"1321:125:3","trueBody":{"id":614,"nodeType":"Block","src":"1357:89:3","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":608,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1413:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$675","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$675","typeString":"library Create2"}],"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1405:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:3","typeDescriptions":{}}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1405:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1419:7:3","memberName":"balance","nodeType":"MemberAccess","src":"1405:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"1428:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":603,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"1378:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1385:19:3","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":685,"src":"1378:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":613,"nodeType":"RevertStatement","src":"1371:64:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":616,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1459:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:6:3","memberName":"length","nodeType":"MemberAccess","src":"1459:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1478:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1459:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"1455:80:3","trueBody":{"id":623,"nodeType":"Block","src":"1481:54:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":620,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"1502:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":622,"nodeType":"RevertStatement","src":"1495:29:3"}]}},{"AST":{"nativeSrc":"1569:392:3","nodeType":"YulBlock","src":"1569:392:3","statements":[{"nativeSrc":"1583:67:3","nodeType":"YulAssignment","src":"1583:67:3","value":{"arguments":[{"name":"amount","nativeSrc":"1599:6:3","nodeType":"YulIdentifier","src":"1599:6:3"},{"arguments":[{"name":"bytecode","nativeSrc":"1611:8:3","nodeType":"YulIdentifier","src":"1611:8:3"},{"kind":"number","nativeSrc":"1621:4:3","nodeType":"YulLiteral","src":"1621:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1607:3:3","nodeType":"YulIdentifier","src":"1607:3:3"},"nativeSrc":"1607:19:3","nodeType":"YulFunctionCall","src":"1607:19:3"},{"arguments":[{"name":"bytecode","nativeSrc":"1634:8:3","nodeType":"YulIdentifier","src":"1634:8:3"}],"functionName":{"name":"mload","nativeSrc":"1628:5:3","nodeType":"YulIdentifier","src":"1628:5:3"},"nativeSrc":"1628:15:3","nodeType":"YulFunctionCall","src":"1628:15:3"},{"name":"salt","nativeSrc":"1645:4:3","nodeType":"YulIdentifier","src":"1645:4:3"}],"functionName":{"name":"create2","nativeSrc":"1591:7:3","nodeType":"YulIdentifier","src":"1591:7:3"},"nativeSrc":"1591:59:3","nodeType":"YulFunctionCall","src":"1591:59:3"},"variableNames":[{"name":"addr","nativeSrc":"1583:4:3","nodeType":"YulIdentifier","src":"1583:4:3"}]},{"body":{"nativeSrc":"1800:151:3","nodeType":"YulBlock","src":"1800:151:3","statements":[{"nativeSrc":"1818:20:3","nodeType":"YulVariableDeclaration","src":"1818:20:3","value":{"arguments":[{"kind":"number","nativeSrc":"1833:4:3","nodeType":"YulLiteral","src":"1833:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1827:5:3","nodeType":"YulIdentifier","src":"1827:5:3"},"nativeSrc":"1827:11:3","nodeType":"YulFunctionCall","src":"1827:11:3"},"variables":[{"name":"p","nativeSrc":"1822:1:3","nodeType":"YulTypedName","src":"1822:1:3","type":""}]},{"expression":{"arguments":[{"name":"p","nativeSrc":"1870:1:3","nodeType":"YulIdentifier","src":"1870:1:3"},{"kind":"number","nativeSrc":"1873:1:3","nodeType":"YulLiteral","src":"1873:1:3","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1876:14:3","nodeType":"YulIdentifier","src":"1876:14:3"},"nativeSrc":"1876:16:3","nodeType":"YulFunctionCall","src":"1876:16:3"}],"functionName":{"name":"returndatacopy","nativeSrc":"1855:14:3","nodeType":"YulIdentifier","src":"1855:14:3"},"nativeSrc":"1855:38:3","nodeType":"YulFunctionCall","src":"1855:38:3"},"nativeSrc":"1855:38:3","nodeType":"YulExpressionStatement","src":"1855:38:3"},{"expression":{"arguments":[{"name":"p","nativeSrc":"1917:1:3","nodeType":"YulIdentifier","src":"1917:1:3"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1920:14:3","nodeType":"YulIdentifier","src":"1920:14:3"},"nativeSrc":"1920:16:3","nodeType":"YulFunctionCall","src":"1920:16:3"}],"functionName":{"name":"revert","nativeSrc":"1910:6:3","nodeType":"YulIdentifier","src":"1910:6:3"},"nativeSrc":"1910:27:3","nodeType":"YulFunctionCall","src":"1910:27:3"},"nativeSrc":"1910:27:3","nodeType":"YulExpressionStatement","src":"1910:27:3"}]},"condition":{"arguments":[{"arguments":[{"name":"addr","nativeSrc":"1762:4:3","nodeType":"YulIdentifier","src":"1762:4:3"}],"functionName":{"name":"iszero","nativeSrc":"1755:6:3","nodeType":"YulIdentifier","src":"1755:6:3"},"nativeSrc":"1755:12:3","nodeType":"YulFunctionCall","src":"1755:12:3"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1780:14:3","nodeType":"YulIdentifier","src":"1780:14:3"},"nativeSrc":"1780:16:3","nodeType":"YulFunctionCall","src":"1780:16:3"}],"functionName":{"name":"iszero","nativeSrc":"1773:6:3","nodeType":"YulIdentifier","src":"1773:6:3"},"nativeSrc":"1773:24:3","nodeType":"YulFunctionCall","src":"1773:24:3"}],"functionName":{"name":"not","nativeSrc":"1769:3:3","nodeType":"YulIdentifier","src":"1769:3:3"},"nativeSrc":"1769:29:3","nodeType":"YulFunctionCall","src":"1769:29:3"}],"functionName":{"name":"and","nativeSrc":"1751:3:3","nodeType":"YulIdentifier","src":"1751:3:3"},"nativeSrc":"1751:48:3","nodeType":"YulFunctionCall","src":"1751:48:3"},"nativeSrc":"1748:203:3","nodeType":"YulIf","src":"1748:203:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":594,"isOffset":false,"isSlot":false,"src":"1583:4:3","valueSize":1},{"declaration":594,"isOffset":false,"isSlot":false,"src":"1762:4:3","valueSize":1},{"declaration":587,"isOffset":false,"isSlot":false,"src":"1599:6:3","valueSize":1},{"declaration":591,"isOffset":false,"isSlot":false,"src":"1611:8:3","valueSize":1},{"declaration":591,"isOffset":false,"isSlot":false,"src":"1634:8:3","valueSize":1},{"declaration":589,"isOffset":false,"isSlot":false,"src":"1645:4:3","valueSize":1}],"flags":["memory-safe"],"id":625,"nodeType":"InlineAssembly","src":"1544:417:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"1974:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1982:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:3","typeDescriptions":{}}},"id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1974:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":638,"nodeType":"IfStatement","src":"1970:81:3","trueBody":{"id":637,"nodeType":"Block","src":"1994:57:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":632,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2015:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$697_$","typeString":"type(library Errors)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2022:16:3","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":691,"src":"2015:23:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":636,"nodeType":"RevertStatement","src":"2008:32:3"}]}}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"645:560:3","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":640,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1219:6:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"amount","nameLocation":"1234:6:3","nodeType":"VariableDeclaration","scope":640,"src":"1226:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"salt","nameLocation":"1250:4:3","nodeType":"VariableDeclaration","scope":640,"src":"1242:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"bytecode","nameLocation":"1269:8:3","nodeType":"VariableDeclaration","scope":640,"src":"1256:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1256:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1225:53:3"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"addr","nameLocation":"1305:4:3","nodeType":"VariableDeclaration","scope":640,"src":"1297:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1296:14:3"},"scope":675,"src":"1210:847:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":659,"nodeType":"Block","src":"2353:73:3","statements":[{"expression":{"arguments":[{"id":651,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2385:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":652,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2391:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":655,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2413:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$675","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$675","typeString":"library Create2"}],"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:3","typeDescriptions":{}}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":650,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[660,674],"referencedDeclaration":674,"src":"2370:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":649,"id":658,"nodeType":"Return","src":"2363:56:3"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"2063:193:3","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2270:14:3","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"salt","nameLocation":"2293:4:3","nodeType":"VariableDeclaration","scope":660,"src":"2285:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2307:12:3","nodeType":"VariableDeclaration","scope":660,"src":"2299:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2284:36:3"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"2344:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2343:9:3"},"scope":675,"src":"2261:165:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":673,"nodeType":"Block","src":"2784:1679:3","statements":[{"AST":{"nativeSrc":"2819:1638:3","nodeType":"YulBlock","src":"2819:1638:3","statements":[{"nativeSrc":"2833:22:3","nodeType":"YulVariableDeclaration","src":"2833:22:3","value":{"arguments":[{"kind":"number","nativeSrc":"2850:4:3","nodeType":"YulLiteral","src":"2850:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2844:5:3","nodeType":"YulIdentifier","src":"2844:5:3"},"nativeSrc":"2844:11:3","nodeType":"YulFunctionCall","src":"2844:11:3"},"variables":[{"name":"ptr","nativeSrc":"2837:3:3","nodeType":"YulTypedName","src":"2837:3:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4057:3:3","nodeType":"YulIdentifier","src":"4057:3:3"},{"kind":"number","nativeSrc":"4062:4:3","nodeType":"YulLiteral","src":"4062:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4053:3:3","nodeType":"YulIdentifier","src":"4053:3:3"},"nativeSrc":"4053:14:3","nodeType":"YulFunctionCall","src":"4053:14:3"},{"name":"bytecodeHash","nativeSrc":"4069:12:3","nodeType":"YulIdentifier","src":"4069:12:3"}],"functionName":{"name":"mstore","nativeSrc":"4046:6:3","nodeType":"YulIdentifier","src":"4046:6:3"},"nativeSrc":"4046:36:3","nodeType":"YulFunctionCall","src":"4046:36:3"},"nativeSrc":"4046:36:3","nodeType":"YulExpressionStatement","src":"4046:36:3"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4106:3:3","nodeType":"YulIdentifier","src":"4106:3:3"},{"kind":"number","nativeSrc":"4111:4:3","nodeType":"YulLiteral","src":"4111:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4102:3:3","nodeType":"YulIdentifier","src":"4102:3:3"},"nativeSrc":"4102:14:3","nodeType":"YulFunctionCall","src":"4102:14:3"},{"name":"salt","nativeSrc":"4118:4:3","nodeType":"YulIdentifier","src":"4118:4:3"}],"functionName":{"name":"mstore","nativeSrc":"4095:6:3","nodeType":"YulIdentifier","src":"4095:6:3"},"nativeSrc":"4095:28:3","nodeType":"YulFunctionCall","src":"4095:28:3"},"nativeSrc":"4095:28:3","nodeType":"YulExpressionStatement","src":"4095:28:3"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4143:3:3","nodeType":"YulIdentifier","src":"4143:3:3"},{"name":"deployer","nativeSrc":"4148:8:3","nodeType":"YulIdentifier","src":"4148:8:3"}],"functionName":{"name":"mstore","nativeSrc":"4136:6:3","nodeType":"YulIdentifier","src":"4136:6:3"},"nativeSrc":"4136:21:3","nodeType":"YulFunctionCall","src":"4136:21:3"},"nativeSrc":"4136:21:3","nodeType":"YulExpressionStatement","src":"4136:21:3"},{"nativeSrc":"4219:27:3","nodeType":"YulVariableDeclaration","src":"4219:27:3","value":{"arguments":[{"name":"ptr","nativeSrc":"4236:3:3","nodeType":"YulIdentifier","src":"4236:3:3"},{"kind":"number","nativeSrc":"4241:4:3","nodeType":"YulLiteral","src":"4241:4:3","type":"","value":"0x0b"}],"functionName":{"name":"add","nativeSrc":"4232:3:3","nodeType":"YulIdentifier","src":"4232:3:3"},"nativeSrc":"4232:14:3","nodeType":"YulFunctionCall","src":"4232:14:3"},"variables":[{"name":"start","nativeSrc":"4223:5:3","nodeType":"YulTypedName","src":"4223:5:3","type":""}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"4345:5:3","nodeType":"YulIdentifier","src":"4345:5:3"},{"kind":"number","nativeSrc":"4352:4:3","nodeType":"YulLiteral","src":"4352:4:3","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nativeSrc":"4337:7:3","nodeType":"YulIdentifier","src":"4337:7:3"},"nativeSrc":"4337:20:3","nodeType":"YulFunctionCall","src":"4337:20:3"},"nativeSrc":"4337:20:3","nodeType":"YulExpressionStatement","src":"4337:20:3"},{"nativeSrc":"4370:77:3","nodeType":"YulAssignment","src":"4370:77:3","value":{"arguments":[{"arguments":[{"name":"start","nativeSrc":"4392:5:3","nodeType":"YulIdentifier","src":"4392:5:3"},{"kind":"number","nativeSrc":"4399:2:3","nodeType":"YulLiteral","src":"4399:2:3","type":"","value":"85"}],"functionName":{"name":"keccak256","nativeSrc":"4382:9:3","nodeType":"YulIdentifier","src":"4382:9:3"},"nativeSrc":"4382:20:3","nodeType":"YulFunctionCall","src":"4382:20:3"},{"kind":"number","nativeSrc":"4404:42:3","nodeType":"YulLiteral","src":"4404:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4378:3:3","nodeType":"YulIdentifier","src":"4378:3:3"},"nativeSrc":"4378:69:3","nodeType":"YulFunctionCall","src":"4378:69:3"},"variableNames":[{"name":"addr","nativeSrc":"4370:4:3","nodeType":"YulIdentifier","src":"4370:4:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":670,"isOffset":false,"isSlot":false,"src":"4370:4:3","valueSize":1},{"declaration":665,"isOffset":false,"isSlot":false,"src":"4069:12:3","valueSize":1},{"declaration":667,"isOffset":false,"isSlot":false,"src":"4148:8:3","valueSize":1},{"declaration":663,"isOffset":false,"isSlot":false,"src":"4118:4:3","valueSize":1}],"flags":["memory-safe"],"id":672,"nodeType":"InlineAssembly","src":"2794:1663:3"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"2432:232:3","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":674,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2678:14:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"salt","nameLocation":"2701:4:3","nodeType":"VariableDeclaration","scope":674,"src":"2693:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2693:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2715:12:3","nodeType":"VariableDeclaration","scope":674,"src":"2707:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2707:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"deployer","nameLocation":"2737:8:3","nodeType":"VariableDeclaration","scope":674,"src":"2729:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"2729:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2692:54:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"addr","nameLocation":"2778:4:3","nodeType":"VariableDeclaration","scope":674,"src":"2770:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2769:14:3"},"scope":675,"src":"2669:1794:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":676,"src":"533:3932:3","usedErrors":[584],"usedEvents":[]}],"src":"101:4365:3"},"id":3},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[697]},"id":698,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":677,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"126:284:4","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":697,"linearizedBaseContracts":[697],"name":"Errors","nameLocation":"419:6:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"432:94:4","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":685,"name":"InsufficientBalance","nameLocation":"537:19:4","nodeType":"ErrorDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"balance","nameLocation":"565:7:4","nodeType":"VariableDeclaration","scope":685,"src":"557:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"needed","nameLocation":"582:6:4","nodeType":"VariableDeclaration","scope":685,"src":"574:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:4"},"src":"531:59:4"},{"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"596:89:4","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":688,"name":"FailedCall","nameLocation":"696:10:4","nodeType":"ErrorDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"706:2:4"},"src":"690:19:4"},{"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"715:46:4","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":691,"name":"FailedDeployment","nameLocation":"772:16:4","nodeType":"ErrorDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"788:2:4"},"src":"766:25:4"},{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"797:58:4","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":696,"name":"MissingPrecompile","nameLocation":"866:17:4","nodeType":"ErrorDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"884:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:4"},"src":"860:33:4"}],"scope":698,"src":"411:484:4","usedErrors":[685,688,691,696],"usedEvents":[]}],"src":"100:796:4"},"id":4},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[749]},"id":750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":699,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"125:489:5","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":749,"linearizedBaseContracts":[749],"name":"Panic","nameLocation":"665:5:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":701,"nodeType":"StructuredDocumentation","src":"677:36:5","text":"@dev generic / unspecified error"},"id":704,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:5","nodeType":"VariableDeclaration","scope":749,"src":"718:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"764:37:5","text":"@dev used by the assert() builtin"},"id":708,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:5","nodeType":"VariableDeclaration","scope":749,"src":"806:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"851:41:5","text":"@dev arithmetic underflow or overflow"},"id":712,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:5","nodeType":"VariableDeclaration","scope":749,"src":"897:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:5","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"950:35:5","text":"@dev division or modulo by zero"},"id":716,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:5","nodeType":"VariableDeclaration","scope":749,"src":"990:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"1045:30:5","text":"@dev enum conversion error"},"id":720,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:5","nodeType":"VariableDeclaration","scope":749,"src":"1080:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:5","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"1140:36:5","text":"@dev invalid encoding in storage"},"id":724,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:5","nodeType":"VariableDeclaration","scope":749,"src":"1181:55:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"1242:24:5","text":"@dev empty array pop"},"id":728,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:5","nodeType":"VariableDeclaration","scope":749,"src":"1271:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"1325:35:5","text":"@dev array out of bounds access"},"id":732,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:5","nodeType":"VariableDeclaration","scope":749,"src":"1365:52:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"1423:65:5","text":"@dev resource error (too large allocation or too large array)"},"id":736,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:5","nodeType":"VariableDeclaration","scope":749,"src":"1493:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:5","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"1546:42:5","text":"@dev calling invalid internal function"},"id":740,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:5","nodeType":"VariableDeclaration","scope":749,"src":"1593:58:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:5","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"1819:151:5","statements":[{"AST":{"nativeSrc":"1854:110:5","nodeType":"YulBlock","src":"1854:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:5","nodeType":"YulLiteral","src":"1875:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:5","nodeType":"YulLiteral","src":"1881:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:5","nodeType":"YulIdentifier","src":"1868:6:5"},"nativeSrc":"1868:24:5","nodeType":"YulFunctionCall","src":"1868:24:5"},"nativeSrc":"1868:24:5","nodeType":"YulExpressionStatement","src":"1868:24:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:5","nodeType":"YulLiteral","src":"1912:4:5","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:5","nodeType":"YulIdentifier","src":"1918:4:5"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:5","nodeType":"YulIdentifier","src":"1905:6:5"},"nativeSrc":"1905:18:5","nodeType":"YulFunctionCall","src":"1905:18:5"},"nativeSrc":"1905:18:5","nodeType":"YulExpressionStatement","src":"1905:18:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:5","nodeType":"YulLiteral","src":"1943:4:5","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:5","nodeType":"YulLiteral","src":"1949:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:5","nodeType":"YulIdentifier","src":"1936:6:5"},"nativeSrc":"1936:18:5","nodeType":"YulFunctionCall","src":"1936:18:5"},"nativeSrc":"1936:18:5","nodeType":"YulExpressionStatement","src":"1936:18:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":743,"isOffset":false,"isSlot":false,"src":"1918:4:5","valueSize":1}],"flags":["memory-safe"],"id":746,"nodeType":"InlineAssembly","src":"1829:135:5"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"1658:113:5","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"code","nameLocation":"1799:4:5","nodeType":"VariableDeclaration","scope":748,"src":"1791:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:5"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[],"src":"1819:0:5"},"scope":749,"src":"1776:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":750,"src":"657:1315:5","usedErrors":[],"usedEvents":[]}],"src":"99:1874:5"},"id":5},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[818]},"id":819,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":751,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"135:894:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":818,"linearizedBaseContracts":[818],"name":"ReentrancyGuard","nameLocation":"1048:15:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":755,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:6","nodeType":"VariableDeclaration","scope":818,"src":"1818:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":758,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:6","nodeType":"VariableDeclaration","scope":818,"src":"1864:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":760,"mutability":"mutable","name":"_status","nameLocation":"1923:7:6","nodeType":"VariableDeclaration","scope":818,"src":"1907:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"1937:52:6","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":763,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:6","nodeType":"ErrorDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"2028:2:6"},"src":"1994:37:6"},{"body":{"id":770,"nodeType":"Block","src":"2051:38:6","statements":[{"expression":{"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":766,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"2061:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":767,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"2071:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"nodeType":"ExpressionStatement","src":"2061:21:6"}]},"id":771,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"2048:2:6"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"2051:0:6"},"scope":818,"src":"2037:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"2490:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":774,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"2500:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"ExpressionStatement","src":"2500:21:6"},{"id":777,"nodeType":"PlaceholderStatement","src":"2531:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":778,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2542:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"2542:20:6"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"2095:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":782,"name":"nonReentrant","nameLocation":"2475:12:6","nodeType":"ModifierDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"2487:2:6"},"src":"2466:103:6","virtual":false,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"2614:268:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":785,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"2702:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":786,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2713:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":792,"nodeType":"IfStatement","src":"2698:86:6","trueBody":{"id":791,"nodeType":"Block","src":"2722:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":788,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"2743:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":790,"nodeType":"RevertStatement","src":"2736:37:6"}]}},{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":793,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"2858:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":794,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"nodeType":"ExpressionStatement","src":"2858:17:6"}]},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:6","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"2603:2:6"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"2614:0:6"},"scope":818,"src":"2575:307:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":805,"nodeType":"Block","src":"2926:170:6","statements":[{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":801,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3068:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":802,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"3078:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"3068:21:6"}]},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:6","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"2915:2:6"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[],"src":"2926:0:6"},"scope":818,"src":"2888:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":816,"nodeType":"Block","src":"3339:42:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3356:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":813,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"3367:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":811,"id":815,"nodeType":"Return","src":"3349:25:6"}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"3102:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:6","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"3307:2:6"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":817,"src":"3333:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":809,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:6"},"scope":818,"src":"3275:106:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":819,"src":"1030:2353:6","usedErrors":[763],"usedEvents":[]}],"src":"109:3275:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3841],"SafeCast":[5606],"SignedMath":[5750],"Strings":[2220]},"id":2221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":820,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2221,"sourceUnit":3842,"src":"127:37:7","symbolAliases":[{"foreign":{"id":821,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"135:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2221,"sourceUnit":5607,"src":"165:45:7","symbolAliases":[{"foreign":{"id":823,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"173:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2221,"sourceUnit":5751,"src":"211:49:7","symbolAliases":[{"foreign":{"id":825,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"219:10:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"262:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":2220,"linearizedBaseContracts":[2220],"name":"Strings","nameLocation":"305:7:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":829,"libraryName":{"id":828,"name":"SafeCast","nameLocations":["325:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":5606,"src":"325:8:7"},"nodeType":"UsingForDirective","src":"319:21:7"},{"constant":true,"id":832,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:7","nodeType":"VariableDeclaration","scope":2220,"src":"346:56:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":830,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":835,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:7","nodeType":"VariableDeclaration","scope":2220,"src":"408:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":833,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":871,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:7","nodeType":"VariableDeclaration","scope":2220,"src":"456:302:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:7","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:7","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:7","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:7","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:7","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:7","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:7","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:7","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:7","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:7","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:7","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:7","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:7","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:7","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:7","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:7","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:7","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:7","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:7","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"778:81:7","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":878,"name":"StringsInsufficientHexLength","nameLocation":"870:28:7","nodeType":"ErrorDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"value","nameLocation":"907:5:7","nodeType":"VariableDeclaration","scope":878,"src":"899:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"length","nameLocation":"922:6:7","nodeType":"VariableDeclaration","scope":878,"src":"914:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:7"},"src":"864:66:7"},{"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"936:108:7","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":881,"name":"StringsInvalidChar","nameLocation":"1055:18:7","nodeType":"ErrorDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"1073:2:7"},"src":"1049:27:7"},{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"1082:84:7","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":884,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:7","nodeType":"ErrorDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"1204:2:7"},"src":"1171:36:7"},{"body":{"id":931,"nodeType":"Block","src":"1379:563:7","statements":[{"id":930,"nodeType":"UncheckedBlock","src":"1389:547:7","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"length","nameLocation":"1421:6:7","nodeType":"VariableDeclaration","scope":930,"src":"1413:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":900,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"1441:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":894,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"1430:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3841_$","typeString":"type(library Math)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"1430:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:7"},{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:7","nodeType":"VariableDeclaration","scope":930,"src":"1465:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":901,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":907,"initialValue":{"arguments":[{"id":905,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"1499:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":903,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:7"},{"assignments":[909],"declarations":[{"constant":false,"id":909,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:7","nodeType":"VariableDeclaration","scope":930,"src":"1520:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":910,"nodeType":"VariableDeclarationStatement","src":"1520:11:7"},{"AST":{"nativeSrc":"1570:69:7","nodeType":"YulBlock","src":"1570:69:7","statements":[{"nativeSrc":"1588:37:7","nodeType":"YulAssignment","src":"1588:37:7","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:7","nodeType":"YulIdentifier","src":"1603:6:7"},{"kind":"number","nativeSrc":"1611:4:7","nodeType":"YulLiteral","src":"1611:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:7","nodeType":"YulIdentifier","src":"1599:3:7"},"nativeSrc":"1599:17:7","nodeType":"YulFunctionCall","src":"1599:17:7"},{"name":"length","nativeSrc":"1618:6:7","nodeType":"YulIdentifier","src":"1618:6:7"}],"functionName":{"name":"add","nativeSrc":"1595:3:7","nodeType":"YulIdentifier","src":"1595:3:7"},"nativeSrc":"1595:30:7","nodeType":"YulFunctionCall","src":"1595:30:7"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:7","nodeType":"YulIdentifier","src":"1588:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":902,"isOffset":false,"isSlot":false,"src":"1603:6:7","valueSize":1},{"declaration":893,"isOffset":false,"isSlot":false,"src":"1618:6:7","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"1588:3:7","valueSize":1}],"flags":["memory-safe"],"id":911,"nodeType":"InlineAssembly","src":"1545:94:7"},{"body":{"id":926,"nodeType":"Block","src":"1665:234:7","statements":[{"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:7","subExpression":{"id":913,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"1683:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"nodeType":"ExpressionStatement","src":"1683:5:7"},{"AST":{"nativeSrc":"1731:86:7","nodeType":"YulBlock","src":"1731:86:7","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:7","nodeType":"YulIdentifier","src":"1761:3:7"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:7","nodeType":"YulIdentifier","src":"1775:5:7"},{"kind":"number","nativeSrc":"1782:2:7","nodeType":"YulLiteral","src":"1782:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:7","nodeType":"YulIdentifier","src":"1771:3:7"},"nativeSrc":"1771:14:7","nodeType":"YulFunctionCall","src":"1771:14:7"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:7","nodeType":"YulIdentifier","src":"1787:10:7"}],"functionName":{"name":"byte","nativeSrc":"1766:4:7","nodeType":"YulIdentifier","src":"1766:4:7"},"nativeSrc":"1766:32:7","nodeType":"YulFunctionCall","src":"1766:32:7"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:7","nodeType":"YulIdentifier","src":"1753:7:7"},"nativeSrc":"1753:46:7","nodeType":"YulFunctionCall","src":"1753:46:7"},"nativeSrc":"1753:46:7","nodeType":"YulExpressionStatement","src":"1753:46:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":832,"isOffset":false,"isSlot":false,"src":"1787:10:7","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"1761:3:7","valueSize":1},{"declaration":887,"isOffset":false,"isSlot":false,"src":"1775:5:7","valueSize":1}],"flags":["memory-safe"],"id":916,"nodeType":"InlineAssembly","src":"1706:111:7"},{"expression":{"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"1834:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":920,"nodeType":"ExpressionStatement","src":"1834:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"1867:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":925,"nodeType":"IfStatement","src":"1863:21:7","trueBody":{"id":924,"nodeType":"Break","src":"1879:5:7"}}]},"condition":{"hexValue":"74727565","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":927,"nodeType":"WhileStatement","src":"1652:247:7"},{"expression":{"id":928,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1919:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":891,"id":929,"nodeType":"Return","src":"1912:13:7"}]}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"1213:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:7","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"value","nameLocation":"1334:5:7","nodeType":"VariableDeclaration","scope":932,"src":"1326:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:7"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"1364:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":889,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:7"},"scope":2220,"src":"1308:634:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":957,"nodeType":"Block","src":"2118:92:7","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"2149:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:7","trueExpression":{"hexValue":"2d","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"2195:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":950,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"2180:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5750_$","typeString":"type(library SignedMath)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5749,"src":"2180:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":949,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2171:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":940,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:7","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":939,"id":956,"nodeType":"Return","src":"2128:75:7"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"1948:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:7","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"value","nameLocation":"2073:5:7","nodeType":"VariableDeclaration","scope":958,"src":"2066:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":934,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:7"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":958,"src":"2103:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":937,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:7"},"scope":2220,"src":"2042:168:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"2389:100:7","statements":[{"id":976,"nodeType":"UncheckedBlock","src":"2399:84:7","statements":[{"expression":{"arguments":[{"id":967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2442:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2461:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":968,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"2449:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3841_$","typeString":"type(library Math)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3784,"src":"2449:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":966,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[978,1061,1081],"referencedDeclaration":1061,"src":"2430:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":965,"id":975,"nodeType":"Return","src":"2423:49:7"}]}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"2216:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:7","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"2344:5:7","nodeType":"VariableDeclaration","scope":978,"src":"2336:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:7"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"2374:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":963,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:7"},"scope":2220,"src":"2315:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1060,"nodeType":"Block","src":"2702:435:7","statements":[{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:7","nodeType":"VariableDeclaration","scope":1060,"src":"2712:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":991,"initialValue":{"id":990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"2733:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:7"},{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:7","nodeType":"VariableDeclaration","scope":1060,"src":"2748:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1002,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":997,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2784:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":994,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:7"},{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1003,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2805:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1005,"indexExpression":{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1008,"nodeType":"ExpressionStatement","src":"2805:15:7"},{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1009,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2830:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1011,"indexExpression":{"hexValue":"31","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1014,"nodeType":"ExpressionStatement","src":"2830:15:7"},{"body":{"id":1043,"nodeType":"Block","src":"2900:95:7","statements":[{"expression":{"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1029,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2914:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1031,"indexExpression":{"id":1030,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2921:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1032,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2926:10:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1036,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2937:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1038,"nodeType":"ExpressionStatement","src":"2914:40:7"},{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1039,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2968:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ExpressionStatement","src":"2968:16:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2888:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1044,"initializationExpression":{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"i","nameLocation":"2868:1:7","nodeType":"VariableDeclaration","scope":1044,"src":"2860:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1022,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1018,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2876:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:7"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:7","subExpression":{"id":1026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2897:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1028,"nodeType":"ExpressionStatement","src":"2895:3:7"},"nodeType":"ForStatement","src":"2855:140:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1045,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"3008:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1054,"nodeType":"IfStatement","src":"3004:96:7","trueBody":{"id":1053,"nodeType":"Block","src":"3025:75:7","statements":[{"errorCall":{"arguments":[{"id":1049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"3075:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1050,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3082:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1048,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"3046:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1052,"nodeType":"RevertStatement","src":"3039:50:7"}]}},{"expression":{"arguments":[{"id":1057,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"3123:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1055,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:7","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":987,"id":1059,"nodeType":"Return","src":"3109:21:7"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"2495:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:7","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"value","nameLocation":"2641:5:7","nodeType":"VariableDeclaration","scope":1061,"src":"2633:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"length","nameLocation":"2656:6:7","nodeType":"VariableDeclaration","scope":1061,"src":"2648:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:7"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1061,"src":"2687:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":985,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:7"},"scope":2220,"src":"2612:525:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1080,"nodeType":"Block","src":"3369:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1074,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"3414:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1072,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:7","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:7","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1077,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"3422:14:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1069,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[978,1061,1081],"referencedDeclaration":1061,"src":"3386:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1068,"id":1079,"nodeType":"Return","src":"3379:58:7"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"3143:148:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:7","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"addr","nameLocation":"3325:4:7","nodeType":"VariableDeclaration","scope":1081,"src":"3317:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"3354:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1066,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:7"},"scope":2220,"src":"3296:148:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1145,"nodeType":"Block","src":"3701:642:7","statements":[{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:7","nodeType":"VariableDeclaration","scope":1145,"src":"3711:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1097,"initialValue":{"arguments":[{"arguments":[{"id":1094,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3751:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1093,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[978,1061,1081],"referencedDeclaration":1081,"src":"3739:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:7","typeDescriptions":{}}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:7"},{"assignments":[1099],"declarations":[{"constant":false,"id":1099,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:7","nodeType":"VariableDeclaration","scope":1145,"src":"3842:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1100,"nodeType":"VariableDeclarationStatement","src":"3842:17:7"},{"AST":{"nativeSrc":"3894:78:7","nodeType":"YulBlock","src":"3894:78:7","statements":[{"nativeSrc":"3908:54:7","nodeType":"YulAssignment","src":"3908:54:7","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:7","nodeType":"YulLiteral","src":"3925:2:7","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:7","nodeType":"YulIdentifier","src":"3943:6:7"},{"kind":"number","nativeSrc":"3951:4:7","nodeType":"YulLiteral","src":"3951:4:7","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:7","nodeType":"YulIdentifier","src":"3939:3:7"},"nativeSrc":"3939:17:7","nodeType":"YulFunctionCall","src":"3939:17:7"},{"kind":"number","nativeSrc":"3958:2:7","nodeType":"YulLiteral","src":"3958:2:7","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:7","nodeType":"YulIdentifier","src":"3929:9:7"},"nativeSrc":"3929:32:7","nodeType":"YulFunctionCall","src":"3929:32:7"}],"functionName":{"name":"shr","nativeSrc":"3921:3:7","nodeType":"YulIdentifier","src":"3921:3:7"},"nativeSrc":"3921:41:7","nodeType":"YulFunctionCall","src":"3921:41:7"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:7","nodeType":"YulIdentifier","src":"3908:9:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1090,"isOffset":false,"isSlot":false,"src":"3943:6:7","valueSize":1},{"declaration":1099,"isOffset":false,"isSlot":false,"src":"3908:9:7","valueSize":1}],"flags":["memory-safe"],"id":1101,"nodeType":"InlineAssembly","src":"3869:103:7"},{"body":{"id":1138,"nodeType":"Block","src":"4015:291:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4121:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:7","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1119,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4150:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1121,"indexExpression":{"id":1120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4157:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1117,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:7","typeDescriptions":{}}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1133,"nodeType":"IfStatement","src":"4117:150:7","trueBody":{"id":1132,"nodeType":"Block","src":"4167:100:7","statements":[{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1126,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4235:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1128,"indexExpression":{"id":1127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4242:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1131,"nodeType":"ExpressionStatement","src":"4235:17:7"}]}},{"expression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1134,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4280:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ExpressionStatement","src":"4280:15:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4003:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1139,"initializationExpression":{"assignments":[1103],"declarations":[{"constant":false,"id":1103,"mutability":"mutable","name":"i","nameLocation":"3995:1:7","nodeType":"VariableDeclaration","scope":1139,"src":"3987:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1105,"initialValue":{"hexValue":"3431","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:7","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:7"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:7","subExpression":{"id":1109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4012:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"4010:3:7"},"nodeType":"ForStatement","src":"3982:324:7"},{"expression":{"arguments":[{"id":1142,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4329:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1140,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:7","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1088,"id":1144,"nodeType":"Return","src":"4315:21:7"}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"3450:165:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:7","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"addr","nameLocation":"3657:4:7","nodeType":"VariableDeclaration","scope":1146,"src":"3649:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:7"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1146,"src":"3686:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1086,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:7"},"scope":2220,"src":"3620:723:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"4498:104:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1158,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4521:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:7","typeDescriptions":{}}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:7","memberName":"length","nodeType":"MemberAccess","src":"4515:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4540:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1161,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:7","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:7","memberName":"length","nodeType":"MemberAccess","src":"4534:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4569:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1168,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:7","typeDescriptions":{}}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1167,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4592:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1174,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:7","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1173,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1155,"id":1181,"nodeType":"Return","src":"4508:87:7"}]},"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"4349:66:7","text":" @dev Returns true if the two strings are equal."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:7","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"a","nameLocation":"4449:1:7","nodeType":"VariableDeclaration","scope":1183,"src":"4435:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1148,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"b","nameLocation":"4466:1:7","nodeType":"VariableDeclaration","scope":1183,"src":"4452:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1150,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:7"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1183,"src":"4492:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1153,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:7"},"scope":2220,"src":"4420:182:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1201,"nodeType":"Block","src":"4899:64:7","statements":[{"expression":{"arguments":[{"id":1192,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4926:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1196,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4942:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1194,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:7","typeDescriptions":{}}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:7","memberName":"length","nodeType":"MemberAccess","src":"4936:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1191,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1202,1233],"referencedDeclaration":1233,"src":"4916:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1190,"id":1200,"nodeType":"Return","src":"4909:47:7"}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"4608:214:7","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:7","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"input","nameLocation":"4860:5:7","nodeType":"VariableDeclaration","scope":1202,"src":"4846:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1185,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:7"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"4890:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:7"},"scope":2220,"src":"4827:136:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1232,"nodeType":"Block","src":"5368:153:7","statements":[{"assignments":[1215,1217],"declarations":[{"constant":false,"id":1215,"mutability":"mutable","name":"success","nameLocation":"5384:7:7","nodeType":"VariableDeclaration","scope":1232,"src":"5379:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1214,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"value","nameLocation":"5401:5:7","nodeType":"VariableDeclaration","scope":1232,"src":"5393:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1223,"initialValue":{"arguments":[{"id":1219,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"5423:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1220,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"5430:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1221,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5437:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1218,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1254,1291],"referencedDeclaration":1291,"src":"5410:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:7"},{"condition":{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:7","subExpression":{"id":1224,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5456:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1229,"nodeType":"IfStatement","src":"5451:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1226,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"5472:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1228,"nodeType":"RevertStatement","src":"5465:27:7"}},{"expression":{"id":1230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"5509:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1213,"id":1231,"nodeType":"Return","src":"5502:12:7"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"4969:294:7","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1233,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:7","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"input","nameLocation":"5301:5:7","nodeType":"VariableDeclaration","scope":1233,"src":"5287:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1204,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"begin","nameLocation":"5316:5:7","nodeType":"VariableDeclaration","scope":1233,"src":"5308:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"end","nameLocation":"5331:3:7","nodeType":"VariableDeclaration","scope":1233,"src":"5323:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:7"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1233,"src":"5359:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:7"},"scope":2220,"src":"5268:253:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"5842:83:7","statements":[{"expression":{"arguments":[{"id":1244,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5888:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5904:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:7","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:7","memberName":"length","nodeType":"MemberAccess","src":"5898:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"5859:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1242,"id":1252,"nodeType":"Return","src":"5852:66:7"}]},"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"5527:215:7","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:7","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"input","nameLocation":"5783:5:7","nodeType":"VariableDeclaration","scope":1254,"src":"5769:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:7"},"returnParameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"success","nameLocation":"5818:7:7","nodeType":"VariableDeclaration","scope":1254,"src":"5813:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"value","nameLocation":"5835:5:7","nodeType":"VariableDeclaration","scope":1254,"src":"5827:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:7"},"scope":2220,"src":"5747:178:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"6327:144:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6341:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1271,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6353:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1269,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:7","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:7","memberName":"length","nodeType":"MemberAccess","src":"6347:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1275,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6370:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1276,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6378:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1283,"nodeType":"IfStatement","src":"6337:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1267,"id":1282,"nodeType":"Return","src":"6383:17:7"}},{"expression":{"arguments":[{"id":1285,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6446:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1286,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6453:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1287,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6460:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"6417:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1267,"id":1289,"nodeType":"Return","src":"6410:54:7"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"5931:238:7","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:7","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"input","nameLocation":"6219:5:7","nodeType":"VariableDeclaration","scope":1291,"src":"6205:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1256,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"begin","nameLocation":"6242:5:7","nodeType":"VariableDeclaration","scope":1291,"src":"6234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"end","nameLocation":"6265:3:7","nodeType":"VariableDeclaration","scope":1291,"src":"6257:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:7"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"success","nameLocation":"6303:7:7","nodeType":"VariableDeclaration","scope":1291,"src":"6298:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1263,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"value","nameLocation":"6320:5:7","nodeType":"VariableDeclaration","scope":1291,"src":"6312:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:7"},"scope":2220,"src":"6174:297:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"6874:347:7","statements":[{"assignments":[1306],"declarations":[{"constant":false,"id":1306,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:7","nodeType":"VariableDeclaration","scope":1360,"src":"6884:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1305,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[{"id":1309,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6912:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1307,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:7","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:7"},{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"result","nameLocation":"6937:6:7","nodeType":"VariableDeclaration","scope":1360,"src":"6929:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1315,"initialValue":{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:7"},{"body":{"id":1354,"nodeType":"Block","src":"6995:189:7","statements":[{"assignments":[1327],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"chr","nameLocation":"7015:3:7","nodeType":"VariableDeclaration","scope":1354,"src":"7009:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1326,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1337,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1332,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"7064:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"7072:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1331,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"7041:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1329,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:7","typeDescriptions":{}}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1328,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7021:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"7094:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:7","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1345,"nodeType":"IfStatement","src":"7090:30:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1304,"id":1344,"nodeType":"Return","src":"7103:17:7"}},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1346,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"7134:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ExpressionStatement","src":"7134:12:7"},{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"7160:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1351,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"7170:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"7160:13:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"6981:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1321,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6985:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1355,"initializationExpression":{"assignments":[1317],"declarations":[{"constant":false,"id":1317,"mutability":"mutable","name":"i","nameLocation":"6970:1:7","nodeType":"VariableDeclaration","scope":1355,"src":"6962:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1319,"initialValue":{"id":1318,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6974:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:7","subExpression":{"id":1323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"6992:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"6990:3:7"},"nodeType":"ForStatement","src":"6957:227:7"},{"expression":{"components":[{"hexValue":"74727565","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"7207:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1304,"id":1359,"nodeType":"Return","src":"7193:21:7"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"6477:224:7","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:7","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"input","nameLocation":"6767:5:7","nodeType":"VariableDeclaration","scope":1361,"src":"6753:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1293,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"begin","nameLocation":"6790:5:7","nodeType":"VariableDeclaration","scope":1361,"src":"6782:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"end","nameLocation":"6813:3:7","nodeType":"VariableDeclaration","scope":1361,"src":"6805:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:7"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"success","nameLocation":"6850:7:7","nodeType":"VariableDeclaration","scope":1361,"src":"6845:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1300,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"value","nameLocation":"6867:5:7","nodeType":"VariableDeclaration","scope":1361,"src":"6859:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:7"},"scope":2220,"src":"6706:515:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1379,"nodeType":"Block","src":"7518:63:7","statements":[{"expression":{"arguments":[{"id":1370,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7544:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1374,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"7560:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1372,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:7","typeDescriptions":{}}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:7","memberName":"length","nodeType":"MemberAccess","src":"7554:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1380,1411],"referencedDeclaration":1411,"src":"7535:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1368,"id":1378,"nodeType":"Return","src":"7528:46:7"}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"7227:216:7","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:7","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"input","nameLocation":"7480:5:7","nodeType":"VariableDeclaration","scope":1380,"src":"7466:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1363,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:7"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1380,"src":"7510:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1366,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:7"},"scope":2220,"src":"7448:133:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"7986:151:7","statements":[{"assignments":[1393,1395],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"success","nameLocation":"8002:7:7","nodeType":"VariableDeclaration","scope":1410,"src":"7997:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"value","nameLocation":"8018:5:7","nodeType":"VariableDeclaration","scope":1410,"src":"8011:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1394,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1401,"initialValue":{"arguments":[{"id":1397,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8039:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1398,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8046:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1399,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"8053:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1432,1474],"referencedDeclaration":1474,"src":"8027:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:7"},{"condition":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:7","subExpression":{"id":1402,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"8072:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"IfStatement","src":"8067:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1404,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8088:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1406,"nodeType":"RevertStatement","src":"8081:27:7"}},{"expression":{"id":1408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"8125:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1391,"id":1409,"nodeType":"Return","src":"8118:12:7"}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"7587:296:7","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:7","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"input","nameLocation":"7920:5:7","nodeType":"VariableDeclaration","scope":1411,"src":"7906:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1382,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"begin","nameLocation":"7935:5:7","nodeType":"VariableDeclaration","scope":1411,"src":"7927:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"end","nameLocation":"7950:3:7","nodeType":"VariableDeclaration","scope":1411,"src":"7942:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:7"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1411,"src":"7978:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1389,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:7"},"scope":2220,"src":"7888:249:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1431,"nodeType":"Block","src":"8528:82:7","statements":[{"expression":{"arguments":[{"id":1422,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"8573:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1426,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"8589:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1424,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:7","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:7","memberName":"length","nodeType":"MemberAccess","src":"8583:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"8545:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1420,"id":1430,"nodeType":"Return","src":"8538:65:7"}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"8143:287:7","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:7","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"input","nameLocation":"8470:5:7","nodeType":"VariableDeclaration","scope":1432,"src":"8456:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1413,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:7"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"success","nameLocation":"8505:7:7","nodeType":"VariableDeclaration","scope":1432,"src":"8500:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1416,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"value","nameLocation":"8521:5:7","nodeType":"VariableDeclaration","scope":1432,"src":"8514:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1418,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:7"},"scope":2220,"src":"8435:175:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1437,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:7","nodeType":"VariableDeclaration","scope":2220,"src":"8616:50:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:7","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1473,"nodeType":"Block","src":"9132:143:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"9146:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1454,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9158:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:7","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:7","memberName":"length","nodeType":"MemberAccess","src":"9152:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"9175:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1459,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"9183:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1466,"nodeType":"IfStatement","src":"9142:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1450,"id":1465,"nodeType":"Return","src":"9188:17:7"}},{"expression":{"arguments":[{"id":1468,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9250:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1469,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"9257:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1470,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"9264:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1467,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9222:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1450,"id":1472,"nodeType":"Return","src":"9215:53:7"}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"8673:303:7","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:7","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"input","nameLocation":"9025:5:7","nodeType":"VariableDeclaration","scope":1474,"src":"9011:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1439,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"begin","nameLocation":"9048:5:7","nodeType":"VariableDeclaration","scope":1474,"src":"9040:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"end","nameLocation":"9071:3:7","nodeType":"VariableDeclaration","scope":1474,"src":"9063:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:7"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"success","nameLocation":"9109:7:7","nodeType":"VariableDeclaration","scope":1474,"src":"9104:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1446,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"value","nameLocation":"9125:5:7","nodeType":"VariableDeclaration","scope":1474,"src":"9118:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1448,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:7"},"scope":2220,"src":"8981:294:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"9675:812:7","statements":[{"assignments":[1489],"declarations":[{"constant":false,"id":1489,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:7","nodeType":"VariableDeclaration","scope":1594,"src":"9685:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1488,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1494,"initialValue":{"arguments":[{"id":1492,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"9713:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1490,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:7","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:7"},{"assignments":[1496],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"sign","nameLocation":"9783:4:7","nodeType":"VariableDeclaration","scope":1594,"src":"9776:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1495,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1512,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"9790:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1498,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"9799:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1507,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9847:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1508,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"9855:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1506,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"9824:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1504,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:7","typeDescriptions":{}}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:7","trueExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1500,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:7","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:7"},{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:7","nodeType":"VariableDeclaration","scope":1594,"src":"9943:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1513,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1521,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1515,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"9963:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1516,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:7","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:7"},{"assignments":[1523],"declarations":[{"constant":false,"id":1523,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:7","nodeType":"VariableDeclaration","scope":1594,"src":"9992:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1522,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1530,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1524,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"10012:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1525,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:7","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:7"},{"assignments":[1532],"declarations":[{"constant":false,"id":1532,"mutability":"mutable","name":"offset","nameLocation":"10049:6:7","nodeType":"VariableDeclaration","scope":1594,"src":"10041:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1539,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"10059:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1534,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"10075:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"10058:37:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:7"},{"assignments":[1541,1543],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:7","nodeType":"VariableDeclaration","scope":1594,"src":"10109:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1540,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:7","nodeType":"VariableDeclaration","scope":1594,"src":"10126:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1551,"initialValue":{"arguments":[{"id":1545,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"10159:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"10166:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1547,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10174:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1549,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"10182:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1544,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1254,1291],"referencedDeclaration":1291,"src":"10146:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"10201:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"10215:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1554,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"10226:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1572,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"10343:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1573,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"10357:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"10373:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1576,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"10385:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1487,"id":1591,"nodeType":"Return","src":"10463:17:7"},"id":1592,"nodeType":"IfStatement","src":"10339:141:7","trueBody":{"id":1587,"nodeType":"Block","src":"10401:56:7","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1581,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:7","memberName":"min","nodeType":"MemberAccess","src":"10429:16:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1487,"id":1586,"nodeType":"Return","src":"10415:31:7"}]}},"id":1593,"nodeType":"IfStatement","src":"10197:283:7","trueBody":{"id":1571,"nodeType":"Block","src":"10242:91:7","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1558,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"10270:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1566,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"10312:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1564,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:7","typeDescriptions":{}}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:7","trueExpression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:7","subExpression":{"arguments":[{"id":1561,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"10293:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1559,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:7","typeDescriptions":{}}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1487,"id":1570,"nodeType":"Return","src":"10256:66:7"}]}}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"9281:223:7","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:7","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"input","nameLocation":"9569:5:7","nodeType":"VariableDeclaration","scope":1595,"src":"9555:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1476,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"begin","nameLocation":"9592:5:7","nodeType":"VariableDeclaration","scope":1595,"src":"9584:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"end","nameLocation":"9615:3:7","nodeType":"VariableDeclaration","scope":1595,"src":"9607:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:7"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"success","nameLocation":"9652:7:7","nodeType":"VariableDeclaration","scope":1595,"src":"9647:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1483,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"value","nameLocation":"9668:5:7","nodeType":"VariableDeclaration","scope":1595,"src":"9661:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1485,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:7"},"scope":2220,"src":"9509:978:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1613,"nodeType":"Block","src":"10832:67:7","statements":[{"expression":{"arguments":[{"id":1604,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"10862:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1608,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"10878:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:7","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:7","memberName":"length","nodeType":"MemberAccess","src":"10872:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1603,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1614,1645],"referencedDeclaration":1645,"src":"10849:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1602,"id":1612,"nodeType":"Return","src":"10842:50:7"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"10493:259:7","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:7","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"input","nameLocation":"10793:5:7","nodeType":"VariableDeclaration","scope":1614,"src":"10779:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:7"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"10823:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:7"},"scope":2220,"src":"10757:142:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1644,"nodeType":"Block","src":"11320:156:7","statements":[{"assignments":[1627,1629],"declarations":[{"constant":false,"id":1627,"mutability":"mutable","name":"success","nameLocation":"11336:7:7","nodeType":"VariableDeclaration","scope":1644,"src":"11331:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1626,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"11353:5:7","nodeType":"VariableDeclaration","scope":1644,"src":"11345:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1635,"initialValue":{"arguments":[{"id":1631,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"11378:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1632,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"11385:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1633,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"11392:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1630,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1666,1703],"referencedDeclaration":1703,"src":"11362:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:7"},{"condition":{"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:7","subExpression":{"id":1636,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"11411:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1641,"nodeType":"IfStatement","src":"11406:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1638,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"11427:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1640,"nodeType":"RevertStatement","src":"11420:27:7"}},{"expression":{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"11464:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1625,"id":1643,"nodeType":"Return","src":"11457:12:7"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"10905:307:7","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:7","nodeType":"FunctionDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"input","nameLocation":"11253:5:7","nodeType":"VariableDeclaration","scope":1645,"src":"11239:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1616,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"begin","nameLocation":"11268:5:7","nodeType":"VariableDeclaration","scope":1645,"src":"11260:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"end","nameLocation":"11283:3:7","nodeType":"VariableDeclaration","scope":1645,"src":"11275:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:7"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"11311:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:7"},"scope":2220,"src":"11217:259:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1665,"nodeType":"Block","src":"11803:86:7","statements":[{"expression":{"arguments":[{"id":1656,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11852:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1660,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11868:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1658,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:7","typeDescriptions":{}}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:7","memberName":"length","nodeType":"MemberAccess","src":"11862:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1655,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"11820:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1654,"id":1664,"nodeType":"Return","src":"11813:69:7"}]},"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"11482:218:7","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:7","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"input","nameLocation":"11744:5:7","nodeType":"VariableDeclaration","scope":1666,"src":"11730:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1647,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:7"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"success","nameLocation":"11779:7:7","nodeType":"VariableDeclaration","scope":1666,"src":"11774:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1650,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"value","nameLocation":"11796:5:7","nodeType":"VariableDeclaration","scope":1666,"src":"11788:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:7"},"scope":2220,"src":"11705:184:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1702,"nodeType":"Block","src":"12297:147:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"12311:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1683,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"12323:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1681,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:7","typeDescriptions":{}}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:7","memberName":"length","nodeType":"MemberAccess","src":"12317:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1687,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"12340:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1688,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"12348:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"IfStatement","src":"12307:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1679,"id":1694,"nodeType":"Return","src":"12353:17:7"}},{"expression":{"arguments":[{"id":1697,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"12419:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1698,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"12426:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1699,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"12433:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1696,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"12387:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1679,"id":1701,"nodeType":"Return","src":"12380:57:7"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"11895:241:7","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:7","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"input","nameLocation":"12189:5:7","nodeType":"VariableDeclaration","scope":1703,"src":"12175:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1668,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"begin","nameLocation":"12212:5:7","nodeType":"VariableDeclaration","scope":1703,"src":"12204:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"end","nameLocation":"12235:3:7","nodeType":"VariableDeclaration","scope":1703,"src":"12227:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:7"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"success","nameLocation":"12273:7:7","nodeType":"VariableDeclaration","scope":1703,"src":"12268:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1675,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"value","nameLocation":"12290:5:7","nodeType":"VariableDeclaration","scope":1703,"src":"12282:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:7"},"scope":2220,"src":"12141:303:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"12853:881:7","statements":[{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:7","nodeType":"VariableDeclaration","scope":1805,"src":"12863:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1723,"initialValue":{"arguments":[{"id":1721,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"12891:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:7","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:7"},{"assignments":[1725],"declarations":[{"constant":false,"id":1725,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:7","nodeType":"VariableDeclaration","scope":1805,"src":"12945:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1724,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1745,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"12963:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"12969:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1735,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"13013:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1736,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"13021:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1734,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"12990:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1732,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:7","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1739,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:7","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:7"},{"assignments":[1747],"declarations":[{"constant":false,"id":1747,"mutability":"mutable","name":"offset","nameLocation":"13133:6:7","nodeType":"VariableDeclaration","scope":1805,"src":"13125:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1753,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1748,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"13142:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"13142:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:7"},{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"result","nameLocation":"13183:6:7","nodeType":"VariableDeclaration","scope":1805,"src":"13175:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1757,"initialValue":{"hexValue":"30","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:7"},{"body":{"id":1799,"nodeType":"Block","src":"13250:447:7","statements":[{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"chr","nameLocation":"13270:3:7","nodeType":"VariableDeclaration","scope":1799,"src":"13264:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1770,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1781,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1776,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"13319:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13327:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1775,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13296:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1773,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:7","typeDescriptions":{}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1772,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"13276:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"13349:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"nodeType":"IfStatement","src":"13345:31:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1716,"id":1788,"nodeType":"Return","src":"13359:17:7"}},{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"13390:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1793,"nodeType":"ExpressionStatement","src":"13390:12:7"},{"id":1798,"nodeType":"UncheckedBlock","src":"13416:271:7","statements":[{"expression":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"13659:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1795,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"13669:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"13659:13:7"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13236:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1765,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"13240:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1800,"initializationExpression":{"assignments":[1759],"declarations":[{"constant":false,"id":1759,"mutability":"mutable","name":"i","nameLocation":"13216:1:7","nodeType":"VariableDeclaration","scope":1800,"src":"13208:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1763,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"13220:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1761,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"13228:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:7","subExpression":{"id":1767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13247:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1769,"nodeType":"ExpressionStatement","src":"13245:3:7"},"nodeType":"ForStatement","src":"13203:494:7"},{"expression":{"components":[{"hexValue":"74727565","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"13720:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1716,"id":1804,"nodeType":"Return","src":"13706:21:7"}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"12450:227:7","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:7","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"input","nameLocation":"12746:5:7","nodeType":"VariableDeclaration","scope":1806,"src":"12732:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1705,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"begin","nameLocation":"12769:5:7","nodeType":"VariableDeclaration","scope":1806,"src":"12761:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"end","nameLocation":"12792:3:7","nodeType":"VariableDeclaration","scope":1806,"src":"12784:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:7"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"success","nameLocation":"12829:7:7","nodeType":"VariableDeclaration","scope":1806,"src":"12824:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1712,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"value","nameLocation":"12846:5:7","nodeType":"VariableDeclaration","scope":1806,"src":"12838:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:7"},"scope":2220,"src":"12682:1052:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1824,"nodeType":"Block","src":"14032:67:7","statements":[{"expression":{"arguments":[{"id":1815,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"14062:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1819,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"14078:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1817,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:7","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:7","memberName":"length","nodeType":"MemberAccess","src":"14072:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1814,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1825,1856],"referencedDeclaration":1856,"src":"14049:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1813,"id":1823,"nodeType":"Return","src":"14042:50:7"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"13740:212:7","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:7","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"input","nameLocation":"13993:5:7","nodeType":"VariableDeclaration","scope":1825,"src":"13979:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1808,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:7"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1825,"src":"14023:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:7"},"scope":2220,"src":"13957:142:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1855,"nodeType":"Block","src":"14472:165:7","statements":[{"assignments":[1838,1840],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"success","nameLocation":"14488:7:7","nodeType":"VariableDeclaration","scope":1855,"src":"14483:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1837,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"value","nameLocation":"14505:5:7","nodeType":"VariableDeclaration","scope":1855,"src":"14497:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1846,"initialValue":{"arguments":[{"id":1842,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"14530:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1843,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"14537:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1844,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"14544:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1841,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1877,1981],"referencedDeclaration":1981,"src":"14514:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:7"},{"condition":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:7","subExpression":{"id":1847,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"14563:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1852,"nodeType":"IfStatement","src":"14558:50:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1849,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"14579:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1851,"nodeType":"RevertStatement","src":"14572:36:7"}},{"expression":{"id":1853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"14625:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1836,"id":1854,"nodeType":"Return","src":"14618:12:7"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"14105:259:7","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1856,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:7","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"input","nameLocation":"14405:5:7","nodeType":"VariableDeclaration","scope":1856,"src":"14391:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1827,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"begin","nameLocation":"14420:5:7","nodeType":"VariableDeclaration","scope":1856,"src":"14412:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"end","nameLocation":"14435:3:7","nodeType":"VariableDeclaration","scope":1856,"src":"14427:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:7"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1856,"src":"14463:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:7"},"scope":2220,"src":"14369:268:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"14944:70:7","statements":[{"expression":{"arguments":[{"id":1867,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"14977:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1871,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"14993:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1869,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:7","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:7","memberName":"length","nodeType":"MemberAccess","src":"14987:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1866,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1877,1981],"referencedDeclaration":1981,"src":"14961:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1865,"id":1875,"nodeType":"Return","src":"14954:53:7"}]},"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"14643:198:7","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:7","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"input","nameLocation":"14885:5:7","nodeType":"VariableDeclaration","scope":1877,"src":"14871:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1858,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:7"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"success","nameLocation":"14920:7:7","nodeType":"VariableDeclaration","scope":1877,"src":"14915:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1861,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"value","nameLocation":"14937:5:7","nodeType":"VariableDeclaration","scope":1877,"src":"14929:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:7"},"scope":2220,"src":"14846:168:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"15407:733:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"15421:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1894,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"15433:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1892,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:7","typeDescriptions":{}}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:7","memberName":"length","nodeType":"MemberAccess","src":"15427:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"15450:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1899,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"15458:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1909,"nodeType":"IfStatement","src":"15417:72:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:7","typeDescriptions":{}}},"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1890,"id":1908,"nodeType":"Return","src":"15463:26:7"}},{"assignments":[1911],"declarations":[{"constant":false,"id":1911,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:7","nodeType":"VariableDeclaration","scope":1980,"src":"15500:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1910,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1934,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1912,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"15518:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1913,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"15524:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1923,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"15574:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1921,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:7","typeDescriptions":{}}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1925,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"15582:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"15545:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1918,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:7","typeDescriptions":{}}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1928,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:7","typeDescriptions":{}}},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:7"},{"assignments":[1936],"declarations":[{"constant":false,"id":1936,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:7","nodeType":"VariableDeclaration","scope":1980,"src":"15686:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1944,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1938,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"15716:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"15716:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1945,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"15803:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1946,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"15809:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1948,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"15818:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1978,"nodeType":"Block","src":"16083:51:7","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:7","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1890,"id":1977,"nodeType":"Return","src":"16097:26:7"}]},"id":1979,"nodeType":"IfStatement","src":"15799:335:7","trueBody":{"id":1970,"nodeType":"Block","src":"15834:243:7","statements":[{"assignments":[1951,1953],"declarations":[{"constant":false,"id":1951,"mutability":"mutable","name":"s","nameLocation":"15955:1:7","nodeType":"VariableDeclaration","scope":1970,"src":"15950:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1950,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"v","nameLocation":"15966:1:7","nodeType":"VariableDeclaration","scope":1970,"src":"15958:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1959,"initialValue":{"arguments":[{"id":1955,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"16003:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1956,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"16010:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1957,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"16017:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1954,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"15971:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:7"},{"expression":{"components":[{"id":1960,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"16043:1:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1965,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"16062:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1963,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:7","typeDescriptions":{}}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:7","typeDescriptions":{}}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1890,"id":1969,"nodeType":"Return","src":"16035:31:7"}]}}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"15020:226:7","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:7","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"input","nameLocation":"15299:5:7","nodeType":"VariableDeclaration","scope":1981,"src":"15285:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1879,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"begin","nameLocation":"15322:5:7","nodeType":"VariableDeclaration","scope":1981,"src":"15314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"end","nameLocation":"15345:3:7","nodeType":"VariableDeclaration","scope":1981,"src":"15337:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:7"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"success","nameLocation":"15383:7:7","nodeType":"VariableDeclaration","scope":1981,"src":"15378:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1886,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"value","nameLocation":"15400:5:7","nodeType":"VariableDeclaration","scope":1981,"src":"15392:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:7"},"scope":2220,"src":"15251:889:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"16209:461:7","statements":[{"assignments":[1989],"declarations":[{"constant":false,"id":1989,"mutability":"mutable","name":"value","nameLocation":"16225:5:7","nodeType":"VariableDeclaration","scope":2040,"src":"16219:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1988,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1994,"initialValue":{"arguments":[{"id":1992,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"16239:3:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1990,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:7","typeDescriptions":{}}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:7"},{"id":2037,"nodeType":"UncheckedBlock","src":"16403:238:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16431:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:7","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16445:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:7","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16491:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16505:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:7","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16552:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16566:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:7","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2029,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:7","memberName":"max","nodeType":"MemberAccess","src":"16615:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1987,"id":2033,"nodeType":"Return","src":"16608:22:7"},"id":2034,"nodeType":"IfStatement","src":"16548:82:7","trueBody":{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16578:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:7","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2027,"nodeType":"ExpressionStatement","src":"16578:11:7"}},"id":2035,"nodeType":"IfStatement","src":"16487:143:7","trueBody":{"expression":{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16518:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:7","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2016,"nodeType":"ExpressionStatement","src":"16518:11:7"}},"id":2036,"nodeType":"IfStatement","src":"16427:203:7","trueBody":{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16457:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2005,"nodeType":"ExpressionStatement","src":"16457:11:7"}}]},{"expression":{"id":2038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"16658:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1987,"id":2039,"nodeType":"Return","src":"16651:12:7"}]},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:7","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"chr","nameLocation":"16175:3:7","nodeType":"VariableDeclaration","scope":2041,"src":"16168:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1982,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:7"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"16202:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1985,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:7"},"scope":2220,"src":"16146:524:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2206,"nodeType":"Block","src":"17336:1331:7","statements":[{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:7","nodeType":"VariableDeclaration","scope":2206,"src":"17346:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2049,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2053,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"17374:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2051,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:7","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:7"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"output","nameLocation":"17403:6:7","nodeType":"VariableDeclaration","scope":2206,"src":"17390:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2056,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2065,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2061,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"17426:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:7","memberName":"length","nodeType":"MemberAccess","src":"17426:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2058,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:7"},{"assignments":[2067],"declarations":[{"constant":false,"id":2067,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:7","nodeType":"VariableDeclaration","scope":2206,"src":"17473:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2069,"initialValue":{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:7"},{"body":{"id":2198,"nodeType":"Block","src":"17548:854:7","statements":[{"assignments":[2081],"declarations":[{"constant":false,"id":2081,"mutability":"mutable","name":"char","nameLocation":"17569:4:7","nodeType":"VariableDeclaration","scope":2198,"src":"17562:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2080,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2089,"initialValue":{"arguments":[{"arguments":[{"id":2085,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"17606:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"17614:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2084,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"17583:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2082,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:7","typeDescriptions":{}}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:7"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"17637:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2094,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"17672:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2092,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:7","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2196,"nodeType":"Block","src":"18330:62:7","statements":[{"expression":{"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2189,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"18348:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2192,"indexExpression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:7","subExpression":{"id":2190,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"18355:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2193,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"18373:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2195,"nodeType":"ExpressionStatement","src":"18348:29:7"}]},"id":2197,"nodeType":"IfStatement","src":"17631:761:7","trueBody":{"id":2188,"nodeType":"Block","src":"17687:637:7","statements":[{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2103,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"17705:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2106,"indexExpression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:7","subExpression":{"id":2104,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"17712:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2109,"nodeType":"ExpressionStatement","src":"17705:29:7"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2110,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"17756:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"17825:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"17894:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"17963:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:7","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"18032:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:7","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2160,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"18101:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:7","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"18171:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2181,"nodeType":"IfStatement","src":"18167:143:7","trueBody":{"id":2180,"nodeType":"Block","src":"18185:125:7","statements":[{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2173,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"18263:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2176,"indexExpression":{"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:7","subExpression":{"id":2174,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"18270:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2179,"nodeType":"ExpressionStatement","src":"18263:28:7"}]}},"id":2182,"nodeType":"IfStatement","src":"18097:213:7","trueBody":{"expression":{"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2163,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"18115:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2166,"indexExpression":{"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:7","subExpression":{"id":2164,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"18122:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2169,"nodeType":"ExpressionStatement","src":"18115:29:7"}},"id":2183,"nodeType":"IfStatement","src":"18028:282:7","trueBody":{"expression":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2153,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"18046:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2156,"indexExpression":{"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:7","subExpression":{"id":2154,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"18053:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2159,"nodeType":"ExpressionStatement","src":"18046:28:7"}},"id":2184,"nodeType":"IfStatement","src":"17959:351:7","trueBody":{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2143,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"17977:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2146,"indexExpression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:7","subExpression":{"id":2144,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"17984:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2149,"nodeType":"ExpressionStatement","src":"17977:28:7"}},"id":2185,"nodeType":"IfStatement","src":"17890:420:7","trueBody":{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2133,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"17908:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2136,"indexExpression":{"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:7","subExpression":{"id":2134,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"17915:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2139,"nodeType":"ExpressionStatement","src":"17908:28:7"}},"id":2186,"nodeType":"IfStatement","src":"17821:489:7","trueBody":{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2123,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"17839:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2126,"indexExpression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:7","subExpression":{"id":2124,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"17846:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2129,"nodeType":"ExpressionStatement","src":"17839:28:7"}},"id":2187,"nodeType":"IfStatement","src":"17752:558:7","trueBody":{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2113,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"17770:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2116,"indexExpression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:7","subExpression":{"id":2114,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"17777:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2119,"nodeType":"ExpressionStatement","src":"17770:28:7"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"17524:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2074,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"17528:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:7","memberName":"length","nodeType":"MemberAccess","src":"17528:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2199,"initializationExpression":{"assignments":[2071],"declarations":[{"constant":false,"id":2071,"mutability":"mutable","name":"i","nameLocation":"17521:1:7","nodeType":"VariableDeclaration","scope":2199,"src":"17513:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2072,"nodeType":"VariableDeclarationStatement","src":"17513:9:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:7","subExpression":{"id":2077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"17545:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2079,"nodeType":"ExpressionStatement","src":"17543:3:7"},"nodeType":"ForStatement","src":"17508:894:7"},{"AST":{"nativeSrc":"18500:129:7","nodeType":"YulBlock","src":"18500:129:7","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:7","nodeType":"YulIdentifier","src":"18521:6:7"},{"name":"outputLength","nativeSrc":"18529:12:7","nodeType":"YulIdentifier","src":"18529:12:7"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:7","nodeType":"YulIdentifier","src":"18514:6:7"},"nativeSrc":"18514:28:7","nodeType":"YulFunctionCall","src":"18514:28:7"},"nativeSrc":"18514:28:7","nodeType":"YulExpressionStatement","src":"18514:28:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:7","nodeType":"YulLiteral","src":"18562:4:7","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:7","nodeType":"YulIdentifier","src":"18572:6:7"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:7","nodeType":"YulLiteral","src":"18584:1:7","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:7","nodeType":"YulLiteral","src":"18591:1:7","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:7","nodeType":"YulIdentifier","src":"18598:12:7"},{"kind":"number","nativeSrc":"18612:2:7","nodeType":"YulLiteral","src":"18612:2:7","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:7","nodeType":"YulIdentifier","src":"18594:3:7"},"nativeSrc":"18594:21:7","nodeType":"YulFunctionCall","src":"18594:21:7"}],"functionName":{"name":"shr","nativeSrc":"18587:3:7","nodeType":"YulIdentifier","src":"18587:3:7"},"nativeSrc":"18587:29:7","nodeType":"YulFunctionCall","src":"18587:29:7"}],"functionName":{"name":"shl","nativeSrc":"18580:3:7","nodeType":"YulIdentifier","src":"18580:3:7"},"nativeSrc":"18580:37:7","nodeType":"YulFunctionCall","src":"18580:37:7"}],"functionName":{"name":"add","nativeSrc":"18568:3:7","nodeType":"YulIdentifier","src":"18568:3:7"},"nativeSrc":"18568:50:7","nodeType":"YulFunctionCall","src":"18568:50:7"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:7","nodeType":"YulIdentifier","src":"18555:6:7"},"nativeSrc":"18555:64:7","nodeType":"YulFunctionCall","src":"18555:64:7"},"nativeSrc":"18555:64:7","nodeType":"YulExpressionStatement","src":"18555:64:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2057,"isOffset":false,"isSlot":false,"src":"18521:6:7","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"18572:6:7","valueSize":1},{"declaration":2067,"isOffset":false,"isSlot":false,"src":"18529:12:7","valueSize":1},{"declaration":2067,"isOffset":false,"isSlot":false,"src":"18598:12:7","valueSize":1}],"flags":["memory-safe"],"id":2200,"nodeType":"InlineAssembly","src":"18475:154:7"},{"expression":{"arguments":[{"id":2203,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"18653:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2201,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:7","typeDescriptions":{}}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2048,"id":2205,"nodeType":"Return","src":"18639:21:7"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"16676:576:7","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:7","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"input","nameLocation":"17291:5:7","nodeType":"VariableDeclaration","scope":2207,"src":"17277:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:7"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"17321:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2046,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:7"},"scope":2220,"src":"17257:1410:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"19052:225:7","statements":[{"AST":{"nativeSrc":"19201:70:7","nodeType":"YulBlock","src":"19201:70:7","statements":[{"nativeSrc":"19215:46:7","nodeType":"YulAssignment","src":"19215:46:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:7","nodeType":"YulIdentifier","src":"19238:6:7"},{"kind":"number","nativeSrc":"19246:4:7","nodeType":"YulLiteral","src":"19246:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:7","nodeType":"YulIdentifier","src":"19234:3:7"},"nativeSrc":"19234:17:7","nodeType":"YulFunctionCall","src":"19234:17:7"},{"name":"offset","nativeSrc":"19253:6:7","nodeType":"YulIdentifier","src":"19253:6:7"}],"functionName":{"name":"add","nativeSrc":"19230:3:7","nodeType":"YulIdentifier","src":"19230:3:7"},"nativeSrc":"19230:30:7","nodeType":"YulFunctionCall","src":"19230:30:7"}],"functionName":{"name":"mload","nativeSrc":"19224:5:7","nodeType":"YulIdentifier","src":"19224:5:7"},"nativeSrc":"19224:37:7","nodeType":"YulFunctionCall","src":"19224:37:7"},"variableNames":[{"name":"value","nativeSrc":"19215:5:7","nodeType":"YulIdentifier","src":"19215:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2210,"isOffset":false,"isSlot":false,"src":"19238:6:7","valueSize":1},{"declaration":2212,"isOffset":false,"isSlot":false,"src":"19253:6:7","valueSize":1},{"declaration":2215,"isOffset":false,"isSlot":false,"src":"19215:5:7","valueSize":1}],"flags":["memory-safe"],"id":2217,"nodeType":"InlineAssembly","src":"19176:95:7"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"18673:268:7","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:7","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:7","nodeType":"VariableDeclaration","scope":2219,"src":"18978:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2209,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"offset","nameLocation":"19007:6:7","nodeType":"VariableDeclaration","scope":2219,"src":"18999:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:7"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"value","nameLocation":"19045:5:7","nodeType":"VariableDeclaration","scope":2219,"src":"19037:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:7"},"scope":2220,"src":"18946:331:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2221,"src":"297:18982:7","usedErrors":[878,881,884],"usedEvents":[]}],"src":"101:19179:7"},"id":7},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3841],"Panic":[749],"SafeCast":[5606]},"id":3842,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2222,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3842,"sourceUnit":750,"src":"129:35:8","symbolAliases":[{"foreign":{"id":2223,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"137:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3842,"sourceUnit":5607,"src":"165:40:8","symbolAliases":[{"foreign":{"id":2225,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"173:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"207:73:8","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3841,"linearizedBaseContracts":[3841],"name":"Math","nameLocation":"289:4:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2232,"members":[{"id":2228,"name":"Floor","nameLocation":"324:5:8","nodeType":"EnumValue","src":"324:5:8"},{"id":2229,"name":"Ceil","nameLocation":"367:4:8","nodeType":"EnumValue","src":"367:4:8"},{"id":2230,"name":"Trunc","nameLocation":"409:5:8","nodeType":"EnumValue","src":"409:5:8"},{"id":2231,"name":"Expand","nameLocation":"439:6:8","nodeType":"EnumValue","src":"439:6:8"}],"name":"Rounding","nameLocation":"305:8:8","nodeType":"EnumDefinition","src":"300:169:8"},{"body":{"id":2245,"nodeType":"Block","src":"731:112:8","statements":[{"AST":{"nativeSrc":"766:71:8","nodeType":"YulBlock","src":"766:71:8","statements":[{"nativeSrc":"780:16:8","nodeType":"YulAssignment","src":"780:16:8","value":{"arguments":[{"name":"a","nativeSrc":"791:1:8","nodeType":"YulIdentifier","src":"791:1:8"},{"name":"b","nativeSrc":"794:1:8","nodeType":"YulIdentifier","src":"794:1:8"}],"functionName":{"name":"add","nativeSrc":"787:3:8","nodeType":"YulIdentifier","src":"787:3:8"},"nativeSrc":"787:9:8","nodeType":"YulFunctionCall","src":"787:9:8"},"variableNames":[{"name":"low","nativeSrc":"780:3:8","nodeType":"YulIdentifier","src":"780:3:8"}]},{"nativeSrc":"809:18:8","nodeType":"YulAssignment","src":"809:18:8","value":{"arguments":[{"name":"low","nativeSrc":"820:3:8","nodeType":"YulIdentifier","src":"820:3:8"},{"name":"a","nativeSrc":"825:1:8","nodeType":"YulIdentifier","src":"825:1:8"}],"functionName":{"name":"lt","nativeSrc":"817:2:8","nodeType":"YulIdentifier","src":"817:2:8"},"nativeSrc":"817:10:8","nodeType":"YulFunctionCall","src":"817:10:8"},"variableNames":[{"name":"high","nativeSrc":"809:4:8","nodeType":"YulIdentifier","src":"809:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2235,"isOffset":false,"isSlot":false,"src":"791:1:8","valueSize":1},{"declaration":2235,"isOffset":false,"isSlot":false,"src":"825:1:8","valueSize":1},{"declaration":2237,"isOffset":false,"isSlot":false,"src":"794:1:8","valueSize":1},{"declaration":2240,"isOffset":false,"isSlot":false,"src":"809:4:8","valueSize":1},{"declaration":2242,"isOffset":false,"isSlot":false,"src":"780:3:8","valueSize":1},{"declaration":2242,"isOffset":false,"isSlot":false,"src":"820:3:8","valueSize":1}],"flags":["memory-safe"],"id":2244,"nodeType":"InlineAssembly","src":"741:96:8"}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"475:163:8","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2246,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:8","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"a","nameLocation":"667:1:8","nodeType":"VariableDeclaration","scope":2246,"src":"659:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"b","nameLocation":"678:1:8","nodeType":"VariableDeclaration","scope":2246,"src":"670:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:8"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"high","nameLocation":"712:4:8","nodeType":"VariableDeclaration","scope":2246,"src":"704:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"low","nameLocation":"726:3:8","nodeType":"VariableDeclaration","scope":2246,"src":"718:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:8"},"scope":3841,"src":"643:200:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"1115:462:8","statements":[{"AST":{"nativeSrc":"1437:134:8","nodeType":"YulBlock","src":"1437:134:8","statements":[{"nativeSrc":"1451:30:8","nodeType":"YulVariableDeclaration","src":"1451:30:8","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:8","nodeType":"YulIdentifier","src":"1468:1:8"},{"name":"b","nativeSrc":"1471:1:8","nodeType":"YulIdentifier","src":"1471:1:8"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:8","nodeType":"YulLiteral","src":"1478:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:8","nodeType":"YulIdentifier","src":"1474:3:8"},"nativeSrc":"1474:6:8","nodeType":"YulFunctionCall","src":"1474:6:8"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:8","nodeType":"YulIdentifier","src":"1461:6:8"},"nativeSrc":"1461:20:8","nodeType":"YulFunctionCall","src":"1461:20:8"},"variables":[{"name":"mm","nativeSrc":"1455:2:8","nodeType":"YulTypedName","src":"1455:2:8","type":""}]},{"nativeSrc":"1494:16:8","nodeType":"YulAssignment","src":"1494:16:8","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:8","nodeType":"YulIdentifier","src":"1505:1:8"},{"name":"b","nativeSrc":"1508:1:8","nodeType":"YulIdentifier","src":"1508:1:8"}],"functionName":{"name":"mul","nativeSrc":"1501:3:8","nodeType":"YulIdentifier","src":"1501:3:8"},"nativeSrc":"1501:9:8","nodeType":"YulFunctionCall","src":"1501:9:8"},"variableNames":[{"name":"low","nativeSrc":"1494:3:8","nodeType":"YulIdentifier","src":"1494:3:8"}]},{"nativeSrc":"1523:38:8","nodeType":"YulAssignment","src":"1523:38:8","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:8","nodeType":"YulIdentifier","src":"1539:2:8"},{"name":"low","nativeSrc":"1543:3:8","nodeType":"YulIdentifier","src":"1543:3:8"}],"functionName":{"name":"sub","nativeSrc":"1535:3:8","nodeType":"YulIdentifier","src":"1535:3:8"},"nativeSrc":"1535:12:8","nodeType":"YulFunctionCall","src":"1535:12:8"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:8","nodeType":"YulIdentifier","src":"1552:2:8"},{"name":"low","nativeSrc":"1556:3:8","nodeType":"YulIdentifier","src":"1556:3:8"}],"functionName":{"name":"lt","nativeSrc":"1549:2:8","nodeType":"YulIdentifier","src":"1549:2:8"},"nativeSrc":"1549:11:8","nodeType":"YulFunctionCall","src":"1549:11:8"}],"functionName":{"name":"sub","nativeSrc":"1531:3:8","nodeType":"YulIdentifier","src":"1531:3:8"},"nativeSrc":"1531:30:8","nodeType":"YulFunctionCall","src":"1531:30:8"},"variableNames":[{"name":"high","nativeSrc":"1523:4:8","nodeType":"YulIdentifier","src":"1523:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2249,"isOffset":false,"isSlot":false,"src":"1468:1:8","valueSize":1},{"declaration":2249,"isOffset":false,"isSlot":false,"src":"1505:1:8","valueSize":1},{"declaration":2251,"isOffset":false,"isSlot":false,"src":"1471:1:8","valueSize":1},{"declaration":2251,"isOffset":false,"isSlot":false,"src":"1508:1:8","valueSize":1},{"declaration":2254,"isOffset":false,"isSlot":false,"src":"1523:4:8","valueSize":1},{"declaration":2256,"isOffset":false,"isSlot":false,"src":"1494:3:8","valueSize":1},{"declaration":2256,"isOffset":false,"isSlot":false,"src":"1543:3:8","valueSize":1},{"declaration":2256,"isOffset":false,"isSlot":false,"src":"1556:3:8","valueSize":1}],"flags":["memory-safe"],"id":2258,"nodeType":"InlineAssembly","src":"1412:159:8"}]},"documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"849:173:8","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:8","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"a","nameLocation":"1051:1:8","nodeType":"VariableDeclaration","scope":2260,"src":"1043:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"b","nameLocation":"1062:1:8","nodeType":"VariableDeclaration","scope":2260,"src":"1054:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:8"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"high","nameLocation":"1096:4:8","nodeType":"VariableDeclaration","scope":2260,"src":"1088:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"low","nameLocation":"1110:3:8","nodeType":"VariableDeclaration","scope":2260,"src":"1102:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:8"},"scope":3841,"src":"1027:550:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"1784:149:8","statements":[{"id":2293,"nodeType":"UncheckedBlock","src":"1794:133:8","statements":[{"assignments":[2273],"declarations":[{"constant":false,"id":2273,"mutability":"mutable","name":"c","nameLocation":"1826:1:8","nodeType":"VariableDeclaration","scope":2293,"src":"1818:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2277,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"1830:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2275,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1834:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:8"},{"expression":{"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2278,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1849:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1859:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"1864:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2283,"nodeType":"ExpressionStatement","src":"1849:16:8"},{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1879:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1888:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2288,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1908:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2286,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"1892:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"1892:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"1879:37:8"}]}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"1583:105:8","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:8","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"a","nameLocation":"1717:1:8","nodeType":"VariableDeclaration","scope":2295,"src":"1709:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"b","nameLocation":"1728:1:8","nodeType":"VariableDeclaration","scope":2295,"src":"1720:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:8"},"returnParameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"success","nameLocation":"1759:7:8","nodeType":"VariableDeclaration","scope":2295,"src":"1754:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2267,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"result","nameLocation":"1776:6:8","nodeType":"VariableDeclaration","scope":2295,"src":"1768:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:8"},"scope":3841,"src":"1693:240:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2329,"nodeType":"Block","src":"2143:149:8","statements":[{"id":2328,"nodeType":"UncheckedBlock","src":"2153:133:8","statements":[{"assignments":[2308],"declarations":[{"constant":false,"id":2308,"mutability":"mutable","name":"c","nameLocation":"2185:1:8","nodeType":"VariableDeclaration","scope":2328,"src":"2177:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2312,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"2193:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:8"},{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2313,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"2208:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"2218:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2223:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2318,"nodeType":"ExpressionStatement","src":"2208:16:8"},{"expression":{"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2238:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"2247:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2323,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"2267:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2321,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"2251:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"2251:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2327,"nodeType":"ExpressionStatement","src":"2238:37:8"}]}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"1939:108:8","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:8","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"a","nameLocation":"2076:1:8","nodeType":"VariableDeclaration","scope":2330,"src":"2068:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"b","nameLocation":"2087:1:8","nodeType":"VariableDeclaration","scope":2330,"src":"2079:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:8"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"success","nameLocation":"2118:7:8","nodeType":"VariableDeclaration","scope":2330,"src":"2113:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2302,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"result","nameLocation":"2135:6:8","nodeType":"VariableDeclaration","scope":2330,"src":"2127:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:8"},"scope":3841,"src":"2052:240:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"2505:391:8","statements":[{"id":2358,"nodeType":"UncheckedBlock","src":"2515:375:8","statements":[{"assignments":[2343],"declarations":[{"constant":false,"id":2343,"mutability":"mutable","name":"c","nameLocation":"2547:1:8","nodeType":"VariableDeclaration","scope":2358,"src":"2539:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2347,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"2551:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"2555:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:8"},{"AST":{"nativeSrc":"2595:188:8","nodeType":"YulBlock","src":"2595:188:8","statements":[{"nativeSrc":"2727:42:8","nodeType":"YulAssignment","src":"2727:42:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:8","nodeType":"YulIdentifier","src":"2748:1:8"},{"name":"a","nativeSrc":"2751:1:8","nodeType":"YulIdentifier","src":"2751:1:8"}],"functionName":{"name":"div","nativeSrc":"2744:3:8","nodeType":"YulIdentifier","src":"2744:3:8"},"nativeSrc":"2744:9:8","nodeType":"YulFunctionCall","src":"2744:9:8"},{"name":"b","nativeSrc":"2755:1:8","nodeType":"YulIdentifier","src":"2755:1:8"}],"functionName":{"name":"eq","nativeSrc":"2741:2:8","nodeType":"YulIdentifier","src":"2741:2:8"},"nativeSrc":"2741:16:8","nodeType":"YulFunctionCall","src":"2741:16:8"},{"arguments":[{"name":"a","nativeSrc":"2766:1:8","nodeType":"YulIdentifier","src":"2766:1:8"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:8","nodeType":"YulIdentifier","src":"2759:6:8"},"nativeSrc":"2759:9:8","nodeType":"YulFunctionCall","src":"2759:9:8"}],"functionName":{"name":"or","nativeSrc":"2738:2:8","nodeType":"YulIdentifier","src":"2738:2:8"},"nativeSrc":"2738:31:8","nodeType":"YulFunctionCall","src":"2738:31:8"},"variableNames":[{"name":"success","nativeSrc":"2727:7:8","nodeType":"YulIdentifier","src":"2727:7:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2333,"isOffset":false,"isSlot":false,"src":"2751:1:8","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"2766:1:8","valueSize":1},{"declaration":2335,"isOffset":false,"isSlot":false,"src":"2755:1:8","valueSize":1},{"declaration":2343,"isOffset":false,"isSlot":false,"src":"2748:1:8","valueSize":1},{"declaration":2338,"isOffset":false,"isSlot":false,"src":"2727:7:8","valueSize":1}],"flags":["memory-safe"],"id":2348,"nodeType":"InlineAssembly","src":"2570:213:8"},{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"2842:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2851:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2353,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"2871:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2351,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"2855:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"2855:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2357,"nodeType":"ExpressionStatement","src":"2842:37:8"}]}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"2298:111:8","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:8","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"a","nameLocation":"2438:1:8","nodeType":"VariableDeclaration","scope":2360,"src":"2430:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"b","nameLocation":"2449:1:8","nodeType":"VariableDeclaration","scope":2360,"src":"2441:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:8"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"success","nameLocation":"2480:7:8","nodeType":"VariableDeclaration","scope":2360,"src":"2475:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2337,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"result","nameLocation":"2497:6:8","nodeType":"VariableDeclaration","scope":2360,"src":"2489:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:8"},"scope":3841,"src":"2414:482:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"3111:231:8","statements":[{"id":2379,"nodeType":"UncheckedBlock","src":"3121:215:8","statements":[{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2372,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"3145:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3155:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"nodeType":"ExpressionStatement","src":"3145:15:8"},{"AST":{"nativeSrc":"3199:127:8","nodeType":"YulBlock","src":"3199:127:8","statements":[{"nativeSrc":"3293:19:8","nodeType":"YulAssignment","src":"3293:19:8","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:8","nodeType":"YulIdentifier","src":"3307:1:8"},{"name":"b","nativeSrc":"3310:1:8","nodeType":"YulIdentifier","src":"3310:1:8"}],"functionName":{"name":"div","nativeSrc":"3303:3:8","nodeType":"YulIdentifier","src":"3303:3:8"},"nativeSrc":"3303:9:8","nodeType":"YulFunctionCall","src":"3303:9:8"},"variableNames":[{"name":"result","nativeSrc":"3293:6:8","nodeType":"YulIdentifier","src":"3293:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2363,"isOffset":false,"isSlot":false,"src":"3307:1:8","valueSize":1},{"declaration":2365,"isOffset":false,"isSlot":false,"src":"3310:1:8","valueSize":1},{"declaration":2370,"isOffset":false,"isSlot":false,"src":"3293:6:8","valueSize":1}],"flags":["memory-safe"],"id":2378,"nodeType":"InlineAssembly","src":"3174:152:8"}]}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"2902:113:8","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:8","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"a","nameLocation":"3044:1:8","nodeType":"VariableDeclaration","scope":2381,"src":"3036:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"b","nameLocation":"3055:1:8","nodeType":"VariableDeclaration","scope":2381,"src":"3047:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:8"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"success","nameLocation":"3086:7:8","nodeType":"VariableDeclaration","scope":2381,"src":"3081:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2367,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"result","nameLocation":"3103:6:8","nodeType":"VariableDeclaration","scope":2381,"src":"3095:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:8"},"scope":3841,"src":"3020:322:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2401,"nodeType":"Block","src":"3567:231:8","statements":[{"id":2400,"nodeType":"UncheckedBlock","src":"3577:215:8","statements":[{"expression":{"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2393,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3601:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"3611:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2398,"nodeType":"ExpressionStatement","src":"3601:15:8"},{"AST":{"nativeSrc":"3655:127:8","nodeType":"YulBlock","src":"3655:127:8","statements":[{"nativeSrc":"3749:19:8","nodeType":"YulAssignment","src":"3749:19:8","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:8","nodeType":"YulIdentifier","src":"3763:1:8"},{"name":"b","nativeSrc":"3766:1:8","nodeType":"YulIdentifier","src":"3766:1:8"}],"functionName":{"name":"mod","nativeSrc":"3759:3:8","nodeType":"YulIdentifier","src":"3759:3:8"},"nativeSrc":"3759:9:8","nodeType":"YulFunctionCall","src":"3759:9:8"},"variableNames":[{"name":"result","nativeSrc":"3749:6:8","nodeType":"YulIdentifier","src":"3749:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2384,"isOffset":false,"isSlot":false,"src":"3763:1:8","valueSize":1},{"declaration":2386,"isOffset":false,"isSlot":false,"src":"3766:1:8","valueSize":1},{"declaration":2391,"isOffset":false,"isSlot":false,"src":"3749:6:8","valueSize":1}],"flags":["memory-safe"],"id":2399,"nodeType":"InlineAssembly","src":"3630:152:8"}]}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"3348:123:8","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2402,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:8","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"a","nameLocation":"3500:1:8","nodeType":"VariableDeclaration","scope":2402,"src":"3492:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"b","nameLocation":"3511:1:8","nodeType":"VariableDeclaration","scope":2402,"src":"3503:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:8"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"success","nameLocation":"3542:7:8","nodeType":"VariableDeclaration","scope":2402,"src":"3537:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2388,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2391,"mutability":"mutable","name":"result","nameLocation":"3559:6:8","nodeType":"VariableDeclaration","scope":2402,"src":"3551:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:8"},"scope":3841,"src":"3476:322:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"3989:122:8","statements":[{"assignments":[2413,2415],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"success","nameLocation":"4005:7:8","nodeType":"VariableDeclaration","scope":2431,"src":"4000:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2412,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"result","nameLocation":"4022:6:8","nodeType":"VariableDeclaration","scope":2431,"src":"4014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2420,"initialValue":{"arguments":[{"id":2417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"4039:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4042:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2416,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"4032:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:8"},{"expression":{"arguments":[{"id":2422,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"4069:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4078:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:8","memberName":"max","nodeType":"MemberAccess","src":"4086:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2421,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"4061:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2411,"id":2430,"nodeType":"Return","src":"4054:50:8"}]},"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"3804:103:8","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:8","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"a","nameLocation":"3943:1:8","nodeType":"VariableDeclaration","scope":2432,"src":"3935:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"b","nameLocation":"3954:1:8","nodeType":"VariableDeclaration","scope":2432,"src":"3946:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:8"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"3980:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:8"},"scope":3841,"src":"3912:199:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2451,"nodeType":"Block","src":"4294:73:8","statements":[{"assignments":[null,2443],"declarations":[null,{"constant":false,"id":2443,"mutability":"mutable","name":"result","nameLocation":"4315:6:8","nodeType":"VariableDeclaration","scope":2451,"src":"4307:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2448,"initialValue":{"arguments":[{"id":2445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"4332:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4335:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2444,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"4325:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:8"},{"expression":{"id":2449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"4354:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2441,"id":2450,"nodeType":"Return","src":"4347:13:8"}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"4117:95:8","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":2452,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:8","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"a","nameLocation":"4248:1:8","nodeType":"VariableDeclaration","scope":2452,"src":"4240:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"b","nameLocation":"4259:1:8","nodeType":"VariableDeclaration","scope":2452,"src":"4251:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:8"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2452,"src":"4285:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:8"},"scope":3841,"src":"4217:150:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2481,"nodeType":"Block","src":"4564:122:8","statements":[{"assignments":[2463,2465],"declarations":[{"constant":false,"id":2463,"mutability":"mutable","name":"success","nameLocation":"4580:7:8","nodeType":"VariableDeclaration","scope":2481,"src":"4575:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2462,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"result","nameLocation":"4597:6:8","nodeType":"VariableDeclaration","scope":2481,"src":"4589:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2470,"initialValue":{"arguments":[{"id":2467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"4614:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2468,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4617:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2466,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"4607:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:8"},{"expression":{"arguments":[{"id":2472,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4644:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4653:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2474,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:8","memberName":"max","nodeType":"MemberAccess","src":"4661:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2471,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"4636:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2461,"id":2480,"nodeType":"Return","src":"4629:50:8"}]},"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"4373:109:8","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:8","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"a","nameLocation":"4518:1:8","nodeType":"VariableDeclaration","scope":2482,"src":"4510:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"b","nameLocation":"4529:1:8","nodeType":"VariableDeclaration","scope":2482,"src":"4521:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:8"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"4555:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:8"},"scope":3841,"src":"4487:199:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2508,"nodeType":"Block","src":"5158:207:8","statements":[{"id":2507,"nodeType":"UncheckedBlock","src":"5168:191:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"5306:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"5312:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2496,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"5316:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2501,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"5337:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2499,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"5321:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"5321:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2493,"id":2506,"nodeType":"Return","src":"5299:49:8"}]}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"4692:374:8","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:8","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"condition","nameLocation":"5093:9:8","nodeType":"VariableDeclaration","scope":2509,"src":"5088:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2484,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"a","nameLocation":"5112:1:8","nodeType":"VariableDeclaration","scope":2509,"src":"5104:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"b","nameLocation":"5123:1:8","nodeType":"VariableDeclaration","scope":2509,"src":"5115:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:8"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"5149:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:8"},"scope":3841,"src":"5071:294:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2527,"nodeType":"Block","src":"5502:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5527:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2521,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"5531:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5534:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"5537:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2519,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"5519:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2518,"id":2526,"nodeType":"Return","src":"5512:27:8"}]},"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"5371:59:8","text":" @dev Returns the largest of two numbers."},"id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:8","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"a","nameLocation":"5456:1:8","nodeType":"VariableDeclaration","scope":2528,"src":"5448:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"b","nameLocation":"5467:1:8","nodeType":"VariableDeclaration","scope":2528,"src":"5459:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:8"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"5493:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:8"},"scope":3841,"src":"5435:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"5684:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"5709:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"5713:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"5716:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"5719:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2538,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2537,"id":2545,"nodeType":"Return","src":"5694:27:8"}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"5552:60:8","text":" @dev Returns the smallest of two numbers."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:8","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"a","nameLocation":"5638:1:8","nodeType":"VariableDeclaration","scope":2547,"src":"5630:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"b","nameLocation":"5649:1:8","nodeType":"VariableDeclaration","scope":2547,"src":"5641:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:8"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"5675:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:8"},"scope":3841,"src":"5617:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"5912:82:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5967:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"5971:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2561,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5977:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2562,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"5981:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2556,"id":2568,"nodeType":"Return","src":"5959:28:8"}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"5734:102:8","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:8","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"a","nameLocation":"5866:1:8","nodeType":"VariableDeclaration","scope":2570,"src":"5858:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"b","nameLocation":"5877:1:8","nodeType":"VariableDeclaration","scope":2570,"src":"5869:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:8"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2570,"src":"5903:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:8"},"scope":3841,"src":"5841:153:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2610,"nodeType":"Block","src":"6286:633:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"6300:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"nodeType":"IfStatement","src":"6296:150:8","trueBody":{"id":2590,"nodeType":"Block","src":"6308:138:8","statements":[{"expression":{"arguments":[{"expression":{"id":2586,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6412:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":716,"src":"6412:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2583,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6400:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":748,"src":"6400:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"6400:35:8"}]}},{"id":2609,"nodeType":"UncheckedBlock","src":"6829:84:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"6876:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2592,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"6860:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"6860:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"6887:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"6896:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2579,"id":2608,"nodeType":"Return","src":"6853:49:8"}]}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"6000:210:8","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:8","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"a","nameLocation":"6240:1:8","nodeType":"VariableDeclaration","scope":2611,"src":"6232:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"b","nameLocation":"6251:1:8","nodeType":"VariableDeclaration","scope":2611,"src":"6243:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:8"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"6277:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:8"},"scope":3841,"src":"6215:704:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"7340:3585:8","statements":[{"id":2745,"nodeType":"UncheckedBlock","src":"7350:3569:8","statements":[{"assignments":[2624,2626],"declarations":[{"constant":false,"id":2624,"mutability":"mutable","name":"high","nameLocation":"7383:4:8","nodeType":"VariableDeclaration","scope":2745,"src":"7375:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"low","nameLocation":"7397:3:8","nodeType":"VariableDeclaration","scope":2745,"src":"7389:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2631,"initialValue":{"arguments":[{"id":2628,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"7411:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2629,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"7414:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2627,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7404:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"7498:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"nodeType":"IfStatement","src":"7494:365:8","trueBody":{"id":2639,"nodeType":"Block","src":"7509:350:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"7827:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2636,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"7833:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2622,"id":2638,"nodeType":"Return","src":"7820:24:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"7969:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2642,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"7984:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"IfStatement","src":"7965:142:8","trueBody":{"id":2658,"nodeType":"Block","src":"7990:117:8","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2648,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"8028:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2651,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"8046:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":716,"src":"8046:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2653,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"8070:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:8","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":712,"src":"8070:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2647,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"8020:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2644,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"8008:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":748,"src":"8008:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2657,"nodeType":"ExpressionStatement","src":"8008:84:8"}]}},{"assignments":[2661],"declarations":[{"constant":false,"id":2661,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:8","nodeType":"VariableDeclaration","scope":2745,"src":"8359:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2662,"nodeType":"VariableDeclarationStatement","src":"8359:17:8"},{"AST":{"nativeSrc":"8415:283:8","nodeType":"YulBlock","src":"8415:283:8","statements":[{"nativeSrc":"8484:38:8","nodeType":"YulAssignment","src":"8484:38:8","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:8","nodeType":"YulIdentifier","src":"8504:1:8"},{"name":"y","nativeSrc":"8507:1:8","nodeType":"YulIdentifier","src":"8507:1:8"},{"name":"denominator","nativeSrc":"8510:11:8","nodeType":"YulIdentifier","src":"8510:11:8"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:8","nodeType":"YulIdentifier","src":"8497:6:8"},"nativeSrc":"8497:25:8","nodeType":"YulFunctionCall","src":"8497:25:8"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:8","nodeType":"YulIdentifier","src":"8484:9:8"}]},{"nativeSrc":"8604:37:8","nodeType":"YulAssignment","src":"8604:37:8","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:8","nodeType":"YulIdentifier","src":"8616:4:8"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:8","nodeType":"YulIdentifier","src":"8625:9:8"},{"name":"low","nativeSrc":"8636:3:8","nodeType":"YulIdentifier","src":"8636:3:8"}],"functionName":{"name":"gt","nativeSrc":"8622:2:8","nodeType":"YulIdentifier","src":"8622:2:8"},"nativeSrc":"8622:18:8","nodeType":"YulFunctionCall","src":"8622:18:8"}],"functionName":{"name":"sub","nativeSrc":"8612:3:8","nodeType":"YulIdentifier","src":"8612:3:8"},"nativeSrc":"8612:29:8","nodeType":"YulFunctionCall","src":"8612:29:8"},"variableNames":[{"name":"high","nativeSrc":"8604:4:8","nodeType":"YulIdentifier","src":"8604:4:8"}]},{"nativeSrc":"8658:26:8","nodeType":"YulAssignment","src":"8658:26:8","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:8","nodeType":"YulIdentifier","src":"8669:3:8"},{"name":"remainder","nativeSrc":"8674:9:8","nodeType":"YulIdentifier","src":"8674:9:8"}],"functionName":{"name":"sub","nativeSrc":"8665:3:8","nodeType":"YulIdentifier","src":"8665:3:8"},"nativeSrc":"8665:19:8","nodeType":"YulFunctionCall","src":"8665:19:8"},"variableNames":[{"name":"low","nativeSrc":"8658:3:8","nodeType":"YulIdentifier","src":"8658:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2618,"isOffset":false,"isSlot":false,"src":"8510:11:8","valueSize":1},{"declaration":2624,"isOffset":false,"isSlot":false,"src":"8604:4:8","valueSize":1},{"declaration":2624,"isOffset":false,"isSlot":false,"src":"8616:4:8","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"8636:3:8","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"8658:3:8","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"8669:3:8","valueSize":1},{"declaration":2661,"isOffset":false,"isSlot":false,"src":"8484:9:8","valueSize":1},{"declaration":2661,"isOffset":false,"isSlot":false,"src":"8625:9:8","valueSize":1},{"declaration":2661,"isOffset":false,"isSlot":false,"src":"8674:9:8","valueSize":1},{"declaration":2614,"isOffset":false,"isSlot":false,"src":"8504:1:8","valueSize":1},{"declaration":2616,"isOffset":false,"isSlot":false,"src":"8507:1:8","valueSize":1}],"flags":["memory-safe"],"id":2663,"nodeType":"InlineAssembly","src":"8390:308:8"},{"assignments":[2665],"declarations":[{"constant":false,"id":2665,"mutability":"mutable","name":"twos","nameLocation":"8910:4:8","nodeType":"VariableDeclaration","scope":2745,"src":"8902:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2672,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"8917:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2668,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"8936:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:8"},{"AST":{"nativeSrc":"8987:359:8","nodeType":"YulBlock","src":"8987:359:8","statements":[{"nativeSrc":"9052:37:8","nodeType":"YulAssignment","src":"9052:37:8","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:8","nodeType":"YulIdentifier","src":"9071:11:8"},{"name":"twos","nativeSrc":"9084:4:8","nodeType":"YulIdentifier","src":"9084:4:8"}],"functionName":{"name":"div","nativeSrc":"9067:3:8","nodeType":"YulIdentifier","src":"9067:3:8"},"nativeSrc":"9067:22:8","nodeType":"YulFunctionCall","src":"9067:22:8"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:8","nodeType":"YulIdentifier","src":"9052:11:8"}]},{"nativeSrc":"9153:21:8","nodeType":"YulAssignment","src":"9153:21:8","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:8","nodeType":"YulIdentifier","src":"9164:3:8"},{"name":"twos","nativeSrc":"9169:4:8","nodeType":"YulIdentifier","src":"9169:4:8"}],"functionName":{"name":"div","nativeSrc":"9160:3:8","nodeType":"YulIdentifier","src":"9160:3:8"},"nativeSrc":"9160:14:8","nodeType":"YulFunctionCall","src":"9160:14:8"},"variableNames":[{"name":"low","nativeSrc":"9153:3:8","nodeType":"YulIdentifier","src":"9153:3:8"}]},{"nativeSrc":"9293:39:8","nodeType":"YulAssignment","src":"9293:39:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:8","nodeType":"YulLiteral","src":"9313:1:8","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:8","nodeType":"YulIdentifier","src":"9316:4:8"}],"functionName":{"name":"sub","nativeSrc":"9309:3:8","nodeType":"YulIdentifier","src":"9309:3:8"},"nativeSrc":"9309:12:8","nodeType":"YulFunctionCall","src":"9309:12:8"},{"name":"twos","nativeSrc":"9323:4:8","nodeType":"YulIdentifier","src":"9323:4:8"}],"functionName":{"name":"div","nativeSrc":"9305:3:8","nodeType":"YulIdentifier","src":"9305:3:8"},"nativeSrc":"9305:23:8","nodeType":"YulFunctionCall","src":"9305:23:8"},{"kind":"number","nativeSrc":"9330:1:8","nodeType":"YulLiteral","src":"9330:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:8","nodeType":"YulIdentifier","src":"9301:3:8"},"nativeSrc":"9301:31:8","nodeType":"YulFunctionCall","src":"9301:31:8"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:8","nodeType":"YulIdentifier","src":"9293:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2618,"isOffset":false,"isSlot":false,"src":"9052:11:8","valueSize":1},{"declaration":2618,"isOffset":false,"isSlot":false,"src":"9071:11:8","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"9153:3:8","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"9164:3:8","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"9084:4:8","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"9169:4:8","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"9293:4:8","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"9316:4:8","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"9323:4:8","valueSize":1}],"flags":["memory-safe"],"id":2673,"nodeType":"InlineAssembly","src":"8962:384:8"},{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"9409:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2675,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"9416:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2676,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"9423:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"9409:18:8"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:8","nodeType":"VariableDeclaration","scope":2745,"src":"9762:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2683,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"9785:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:8"},{"expression":{"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2689,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"10033:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2692,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10047:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2696,"nodeType":"ExpressionStatement","src":"10018:36:8"},{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2697,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10088:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2699,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"10103:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2700,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10117:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"10088:36:8"},{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10160:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"10175:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2708,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10189:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"10160:36:8"},{"expression":{"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2713,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10231:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"10246:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2716,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ExpressionStatement","src":"10231:36:8"},{"expression":{"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2721,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10304:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"10319:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2724,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10333:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2728,"nodeType":"ExpressionStatement","src":"10304:36:8"},{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2729,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"10393:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2732,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10407:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2736,"nodeType":"ExpressionStatement","src":"10378:36:8"},{"expression":{"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"10859:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"10868:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2739,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"10874:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2742,"nodeType":"ExpressionStatement","src":"10859:22:8"},{"expression":{"id":2743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"10902:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2622,"id":2744,"nodeType":"Return","src":"10895:13:8"}]}]},"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"6925:312:8","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:8","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"x","nameLocation":"7266:1:8","nodeType":"VariableDeclaration","scope":2747,"src":"7258:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"y","nameLocation":"7277:1:8","nodeType":"VariableDeclaration","scope":2747,"src":"7269:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:8","nodeType":"VariableDeclaration","scope":2747,"src":"7280:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:8"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"result","nameLocation":"7332:6:8","nodeType":"VariableDeclaration","scope":2747,"src":"7324:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:8"},"scope":3841,"src":"7242:3683:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2783,"nodeType":"Block","src":"11164:128:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2763,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"11188:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2764,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"11191:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2765,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"11194:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2762,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2747,2784],"referencedDeclaration":2747,"src":"11181:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2770,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"11242:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}],"id":2769,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"11225:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"11262:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2774,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"11265:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2775,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"11268:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2772,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2767,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"11209:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"11209:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2761,"id":2782,"nodeType":"Return","src":"11174:111:8"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"10931:118:8","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2784,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:8","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"x","nameLocation":"11078:1:8","nodeType":"VariableDeclaration","scope":2784,"src":"11070:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"y","nameLocation":"11089:1:8","nodeType":"VariableDeclaration","scope":2784,"src":"11081:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:8","nodeType":"VariableDeclaration","scope":2784,"src":"11092:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:8","nodeType":"VariableDeclaration","scope":2784,"src":"11113:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"},"typeName":{"id":2756,"nodeType":"UserDefinedTypeName","pathNode":{"id":2755,"name":"Rounding","nameLocations":["11113:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"11113:8:8"},"referencedDeclaration":2232,"src":"11113:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:8"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2784,"src":"11155:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:8"},"scope":3841,"src":"11054:238:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"11500:245:8","statements":[{"id":2832,"nodeType":"UncheckedBlock","src":"11510:229:8","statements":[{"assignments":[2797,2799],"declarations":[{"constant":false,"id":2797,"mutability":"mutable","name":"high","nameLocation":"11543:4:8","nodeType":"VariableDeclaration","scope":2832,"src":"11535:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"low","nameLocation":"11557:3:8","nodeType":"VariableDeclaration","scope":2832,"src":"11549:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2804,"initialValue":{"arguments":[{"id":2801,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"11571:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2802,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"11574:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"11564:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"11594:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2807,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"11607:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"11590:86:8","trueBody":{"id":2817,"nodeType":"Block","src":"11610:66:8","statements":[{"expression":{"arguments":[{"expression":{"id":2813,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"11640:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:8","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":712,"src":"11640:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2810,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"11628:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":748,"src":"11628:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2816,"nodeType":"ExpressionStatement","src":"11628:33:8"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2819,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"11697:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2821,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"11712:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":2823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"11719:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2827,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"11726:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2795,"id":2831,"nodeType":"Return","src":"11689:39:8"}]}]},"documentation":{"id":2785,"nodeType":"StructuredDocumentation","src":"11298:111:8","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:8","nodeType":"FunctionDefinition","parameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"x","nameLocation":"11438:1:8","nodeType":"VariableDeclaration","scope":2834,"src":"11430:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"y","nameLocation":"11449:1:8","nodeType":"VariableDeclaration","scope":2834,"src":"11441:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"n","nameLocation":"11458:1:8","nodeType":"VariableDeclaration","scope":2834,"src":"11452:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2790,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:8"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"result","nameLocation":"11492:6:8","nodeType":"VariableDeclaration","scope":2834,"src":"11484:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:8"},"scope":3841,"src":"11414:331:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2872,"nodeType":"Block","src":"11963:113:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2850,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11987:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2851,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"11990:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2852,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"11993:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2849,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[2834,2873],"referencedDeclaration":2834,"src":"11980:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2857,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"12031:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}],"id":2856,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"12014:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2860,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"12051:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2861,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"12054:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2863,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"12062:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2859,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2854,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"11998:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"11998:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2848,"id":2871,"nodeType":"Return","src":"11973:96:8"}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"11751:109:8","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":2873,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:8","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"x","nameLocation":"11889:1:8","nodeType":"VariableDeclaration","scope":2873,"src":"11881:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"y","nameLocation":"11900:1:8","nodeType":"VariableDeclaration","scope":2873,"src":"11892:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"n","nameLocation":"11909:1:8","nodeType":"VariableDeclaration","scope":2873,"src":"11903:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2840,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:8","nodeType":"VariableDeclaration","scope":2873,"src":"11912:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"},"typeName":{"id":2843,"nodeType":"UserDefinedTypeName","pathNode":{"id":2842,"name":"Rounding","nameLocations":["11912:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"11912:8:8"},"referencedDeclaration":2232,"src":"11912:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:8"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2873,"src":"11954:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:8"},"scope":3841,"src":"11865:211:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2969,"nodeType":"Block","src":"12710:1849:8","statements":[{"id":2968,"nodeType":"UncheckedBlock","src":"12720:1833:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"12748:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2888,"nodeType":"IfStatement","src":"12744:20:8","trueBody":{"expression":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2882,"id":2887,"nodeType":"Return","src":"12756:8:8"}},{"assignments":[2890],"declarations":[{"constant":false,"id":2890,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:8","nodeType":"VariableDeclaration","scope":2968,"src":"13235:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"13255:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2892,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"13259:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:8"},{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:8","nodeType":"VariableDeclaration","scope":2968,"src":"13274:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2898,"initialValue":{"id":2897,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"13288:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:8"},{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"x","nameLocation":"13432:1:8","nodeType":"VariableDeclaration","scope":2968,"src":"13425:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2899,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2902,"initialValue":{"hexValue":"30","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:8"},{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"y","nameLocation":"13458:1:8","nodeType":"VariableDeclaration","scope":2968,"src":"13451:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2903,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2906,"initialValue":{"hexValue":"31","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:8"},{"body":{"id":2943,"nodeType":"Block","src":"13501:882:8","statements":[{"assignments":[2911],"declarations":[{"constant":false,"id":2911,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:8","nodeType":"VariableDeclaration","scope":2943,"src":"13519:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2915,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"13538:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2913,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"13544:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:8"},{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2916,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"13573:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2917,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"13578:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2918,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2919,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"13678:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"13923:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"13929:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2922,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"13941:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2927,"nodeType":"ExpressionStatement","src":"13572:395:8"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2928,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"13987:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2929,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"13990:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2931,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"14072:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14326:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2933,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"14330:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2936,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"14341:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2934,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:8","typeDescriptions":{}}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"ExpressionStatement","src":"13986:382:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"13485:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"nodeType":"WhileStatement","src":"13478:905:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"14401:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"14397:22:8","trueBody":{"expression":{"hexValue":"30","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2882,"id":2949,"nodeType":"Return","src":"14411:8:8"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2952,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14470:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"14477:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:8","subExpression":{"id":2958,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14490:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:8","typeDescriptions":{}}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2964,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14502:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:8","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14462:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2882,"id":2967,"nodeType":"Return","src":"14455:50:8"}]}]},"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"12082:553:8","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2970,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:8","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"a","nameLocation":"12664:1:8","nodeType":"VariableDeclaration","scope":2970,"src":"12656:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"n","nameLocation":"12675:1:8","nodeType":"VariableDeclaration","scope":2970,"src":"12667:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:8"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2970,"src":"12701:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:8"},"scope":3841,"src":"12640:1919:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"15159:82:8","statements":[{"id":2989,"nodeType":"UncheckedBlock","src":"15169:66:8","statements":[{"expression":{"arguments":[{"id":2982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"15212:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"15215:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2986,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"15222:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2980,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"15200:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3841_$","typeString":"type(library Math)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:8","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"15200:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2979,"id":2988,"nodeType":"Return","src":"15193:31:8"}]}]},"documentation":{"id":2971,"nodeType":"StructuredDocumentation","src":"14565:514:8","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:8","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"a","nameLocation":"15113:1:8","nodeType":"VariableDeclaration","scope":2991,"src":"15105:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2975,"mutability":"mutable","name":"p","nameLocation":"15124:1:8","nodeType":"VariableDeclaration","scope":2991,"src":"15116:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:8"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"15150:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:8"},"scope":3841,"src":"15084:157:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"16011:174:8","statements":[{"assignments":[3004,3006],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"success","nameLocation":"16027:7:8","nodeType":"VariableDeclaration","scope":3026,"src":"16022:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3003,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"result","nameLocation":"16044:6:8","nodeType":"VariableDeclaration","scope":3026,"src":"16036:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3012,"initialValue":{"arguments":[{"id":3008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"16064:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3009,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"16067:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3010,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"16070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3007,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3051,3133],"referencedDeclaration":3051,"src":"16054:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:8"},{"condition":{"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:8","subExpression":{"id":3013,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"16087:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"nodeType":"IfStatement","src":"16082:74:8","trueBody":{"id":3022,"nodeType":"Block","src":"16096:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":3018,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"16122:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":716,"src":"16122:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3015,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"16110:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":748,"src":"16110:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3021,"nodeType":"ExpressionStatement","src":"16110:35:8"}]}},{"expression":{"id":3024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"16172:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3002,"id":3025,"nodeType":"Return","src":"16165:13:8"}]},"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"15247:678:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:8","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"b","nameLocation":"15954:1:8","nodeType":"VariableDeclaration","scope":3027,"src":"15946:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"e","nameLocation":"15965:1:8","nodeType":"VariableDeclaration","scope":3027,"src":"15957:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"m","nameLocation":"15976:1:8","nodeType":"VariableDeclaration","scope":3027,"src":"15968:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:8"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"16002:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:8"},"scope":3841,"src":"15930:255:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"17039:1493:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"17053:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3048,"nodeType":"IfStatement","src":"17049:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3040,"id":3047,"nodeType":"Return","src":"17061:17:8"}},{"AST":{"nativeSrc":"17113:1413:8","nodeType":"YulBlock","src":"17113:1413:8","statements":[{"nativeSrc":"17127:22:8","nodeType":"YulVariableDeclaration","src":"17127:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:8","nodeType":"YulLiteral","src":"17144:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:8","nodeType":"YulIdentifier","src":"17138:5:8"},"nativeSrc":"17138:11:8","nodeType":"YulFunctionCall","src":"17138:11:8"},"variables":[{"name":"ptr","nativeSrc":"17131:3:8","nodeType":"YulTypedName","src":"17131:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:8","nodeType":"YulIdentifier","src":"18057:3:8"},{"kind":"number","nativeSrc":"18062:4:8","nodeType":"YulLiteral","src":"18062:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:8","nodeType":"YulIdentifier","src":"18050:6:8"},"nativeSrc":"18050:17:8","nodeType":"YulFunctionCall","src":"18050:17:8"},"nativeSrc":"18050:17:8","nodeType":"YulExpressionStatement","src":"18050:17:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:8","nodeType":"YulIdentifier","src":"18091:3:8"},{"kind":"number","nativeSrc":"18096:4:8","nodeType":"YulLiteral","src":"18096:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:8","nodeType":"YulIdentifier","src":"18087:3:8"},"nativeSrc":"18087:14:8","nodeType":"YulFunctionCall","src":"18087:14:8"},{"kind":"number","nativeSrc":"18103:4:8","nodeType":"YulLiteral","src":"18103:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:8","nodeType":"YulIdentifier","src":"18080:6:8"},"nativeSrc":"18080:28:8","nodeType":"YulFunctionCall","src":"18080:28:8"},"nativeSrc":"18080:28:8","nodeType":"YulExpressionStatement","src":"18080:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:8","nodeType":"YulIdentifier","src":"18132:3:8"},{"kind":"number","nativeSrc":"18137:4:8","nodeType":"YulLiteral","src":"18137:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:8","nodeType":"YulIdentifier","src":"18128:3:8"},"nativeSrc":"18128:14:8","nodeType":"YulFunctionCall","src":"18128:14:8"},{"kind":"number","nativeSrc":"18144:4:8","nodeType":"YulLiteral","src":"18144:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:8","nodeType":"YulIdentifier","src":"18121:6:8"},"nativeSrc":"18121:28:8","nodeType":"YulFunctionCall","src":"18121:28:8"},"nativeSrc":"18121:28:8","nodeType":"YulExpressionStatement","src":"18121:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:8","nodeType":"YulIdentifier","src":"18173:3:8"},{"kind":"number","nativeSrc":"18178:4:8","nodeType":"YulLiteral","src":"18178:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:8","nodeType":"YulIdentifier","src":"18169:3:8"},"nativeSrc":"18169:14:8","nodeType":"YulFunctionCall","src":"18169:14:8"},{"name":"b","nativeSrc":"18185:1:8","nodeType":"YulIdentifier","src":"18185:1:8"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:8","nodeType":"YulIdentifier","src":"18162:6:8"},"nativeSrc":"18162:25:8","nodeType":"YulFunctionCall","src":"18162:25:8"},"nativeSrc":"18162:25:8","nodeType":"YulExpressionStatement","src":"18162:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:8","nodeType":"YulIdentifier","src":"18211:3:8"},{"kind":"number","nativeSrc":"18216:4:8","nodeType":"YulLiteral","src":"18216:4:8","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:8","nodeType":"YulIdentifier","src":"18207:3:8"},"nativeSrc":"18207:14:8","nodeType":"YulFunctionCall","src":"18207:14:8"},{"name":"e","nativeSrc":"18223:1:8","nodeType":"YulIdentifier","src":"18223:1:8"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:8","nodeType":"YulIdentifier","src":"18200:6:8"},"nativeSrc":"18200:25:8","nodeType":"YulFunctionCall","src":"18200:25:8"},"nativeSrc":"18200:25:8","nodeType":"YulExpressionStatement","src":"18200:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:8","nodeType":"YulIdentifier","src":"18249:3:8"},{"kind":"number","nativeSrc":"18254:4:8","nodeType":"YulLiteral","src":"18254:4:8","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:8","nodeType":"YulIdentifier","src":"18245:3:8"},"nativeSrc":"18245:14:8","nodeType":"YulFunctionCall","src":"18245:14:8"},{"name":"m","nativeSrc":"18261:1:8","nodeType":"YulIdentifier","src":"18261:1:8"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:8","nodeType":"YulIdentifier","src":"18238:6:8"},"nativeSrc":"18238:25:8","nodeType":"YulFunctionCall","src":"18238:25:8"},"nativeSrc":"18238:25:8","nodeType":"YulExpressionStatement","src":"18238:25:8"},{"nativeSrc":"18425:57:8","nodeType":"YulAssignment","src":"18425:57:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:8","nodeType":"YulIdentifier","src":"18447:3:8"},"nativeSrc":"18447:5:8","nodeType":"YulFunctionCall","src":"18447:5:8"},{"kind":"number","nativeSrc":"18454:4:8","nodeType":"YulLiteral","src":"18454:4:8","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:8","nodeType":"YulIdentifier","src":"18460:3:8"},{"kind":"number","nativeSrc":"18465:4:8","nodeType":"YulLiteral","src":"18465:4:8","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:8","nodeType":"YulLiteral","src":"18471:4:8","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:8","nodeType":"YulLiteral","src":"18477:4:8","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:8","nodeType":"YulIdentifier","src":"18436:10:8"},"nativeSrc":"18436:46:8","nodeType":"YulFunctionCall","src":"18436:46:8"},"variableNames":[{"name":"success","nativeSrc":"18425:7:8","nodeType":"YulIdentifier","src":"18425:7:8"}]},{"nativeSrc":"18495:21:8","nodeType":"YulAssignment","src":"18495:21:8","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:8","nodeType":"YulLiteral","src":"18511:4:8","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:8","nodeType":"YulIdentifier","src":"18505:5:8"},"nativeSrc":"18505:11:8","nodeType":"YulFunctionCall","src":"18505:11:8"},"variableNames":[{"name":"result","nativeSrc":"18495:6:8","nodeType":"YulIdentifier","src":"18495:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3030,"isOffset":false,"isSlot":false,"src":"18185:1:8","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"18223:1:8","valueSize":1},{"declaration":3034,"isOffset":false,"isSlot":false,"src":"18261:1:8","valueSize":1},{"declaration":3039,"isOffset":false,"isSlot":false,"src":"18495:6:8","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"18425:7:8","valueSize":1}],"flags":["memory-safe"],"id":3049,"nodeType":"InlineAssembly","src":"17088:1438:8"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"16191:738:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:8","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"b","nameLocation":"16961:1:8","nodeType":"VariableDeclaration","scope":3051,"src":"16953:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"e","nameLocation":"16972:1:8","nodeType":"VariableDeclaration","scope":3051,"src":"16964:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"m","nameLocation":"16983:1:8","nodeType":"VariableDeclaration","scope":3051,"src":"16975:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:8"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"success","nameLocation":"17014:7:8","nodeType":"VariableDeclaration","scope":3051,"src":"17009:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3036,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"result","nameLocation":"17031:6:8","nodeType":"VariableDeclaration","scope":3051,"src":"17023:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:8"},"scope":3841,"src":"16934:1598:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3086,"nodeType":"Block","src":"18729:179:8","statements":[{"assignments":[3064,3066],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"success","nameLocation":"18745:7:8","nodeType":"VariableDeclaration","scope":3086,"src":"18740:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3063,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"result","nameLocation":"18767:6:8","nodeType":"VariableDeclaration","scope":3086,"src":"18754:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3065,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3072,"initialValue":{"arguments":[{"id":3068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"18787:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3069,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"18790:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3070,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"18793:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3067,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3051,3133],"referencedDeclaration":3133,"src":"18777:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:8"},{"condition":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:8","subExpression":{"id":3073,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"18810:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3083,"nodeType":"IfStatement","src":"18805:74:8","trueBody":{"id":3082,"nodeType":"Block","src":"18819:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":3078,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"18845:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":716,"src":"18845:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3075,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"18833:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$749_$","typeString":"type(library Panic)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":748,"src":"18833:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"18833:35:8"}]}},{"expression":{"id":3084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"18895:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3062,"id":3085,"nodeType":"Return","src":"18888:13:8"}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"18538:85:8","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:8","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"b","nameLocation":"18657:1:8","nodeType":"VariableDeclaration","scope":3087,"src":"18644:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3053,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"e","nameLocation":"18673:1:8","nodeType":"VariableDeclaration","scope":3087,"src":"18660:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3055,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"m","nameLocation":"18689:1:8","nodeType":"VariableDeclaration","scope":3087,"src":"18676:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3057,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:8"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"18715:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3060,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:8"},"scope":3841,"src":"18628:280:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3132,"nodeType":"Block","src":"19162:771:8","statements":[{"condition":{"arguments":[{"id":3102,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"19187:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3101,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"19176:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3111,"nodeType":"IfStatement","src":"19172:47:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3105,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3100,"id":3110,"nodeType":"Return","src":"19191:28:8"}},{"assignments":[3113],"declarations":[{"constant":false,"id":3113,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:8","nodeType":"VariableDeclaration","scope":3132,"src":"19230:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3116,"initialValue":{"expression":{"id":3114,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"19245:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:8","memberName":"length","nodeType":"MemberAccess","src":"19245:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:8"},{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"19335:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3120,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"19361:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:8","memberName":"length","nodeType":"MemberAccess","src":"19361:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3122,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"19371:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:8","memberName":"length","nodeType":"MemberAccess","src":"19371:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3124,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"19381:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3125,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"19387:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3126,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"19390:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3127,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"19393:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3118,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3130,"nodeType":"ExpressionStatement","src":"19335:60:8"},{"AST":{"nativeSrc":"19431:496:8","nodeType":"YulBlock","src":"19431:496:8","statements":[{"nativeSrc":"19445:32:8","nodeType":"YulVariableDeclaration","src":"19445:32:8","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:8","nodeType":"YulIdentifier","src":"19464:6:8"},{"kind":"number","nativeSrc":"19472:4:8","nodeType":"YulLiteral","src":"19472:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:8","nodeType":"YulIdentifier","src":"19460:3:8"},"nativeSrc":"19460:17:8","nodeType":"YulFunctionCall","src":"19460:17:8"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:8","nodeType":"YulTypedName","src":"19449:7:8","type":""}]},{"nativeSrc":"19567:73:8","nodeType":"YulAssignment","src":"19567:73:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:8","nodeType":"YulIdentifier","src":"19589:3:8"},"nativeSrc":"19589:5:8","nodeType":"YulFunctionCall","src":"19589:5:8"},{"kind":"number","nativeSrc":"19596:4:8","nodeType":"YulLiteral","src":"19596:4:8","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:8","nodeType":"YulIdentifier","src":"19602:7:8"},{"arguments":[{"name":"result","nativeSrc":"19617:6:8","nodeType":"YulIdentifier","src":"19617:6:8"}],"functionName":{"name":"mload","nativeSrc":"19611:5:8","nodeType":"YulIdentifier","src":"19611:5:8"},"nativeSrc":"19611:13:8","nodeType":"YulFunctionCall","src":"19611:13:8"},{"name":"dataPtr","nativeSrc":"19626:7:8","nodeType":"YulIdentifier","src":"19626:7:8"},{"name":"mLen","nativeSrc":"19635:4:8","nodeType":"YulIdentifier","src":"19635:4:8"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:8","nodeType":"YulIdentifier","src":"19578:10:8"},"nativeSrc":"19578:62:8","nodeType":"YulFunctionCall","src":"19578:62:8"},"variableNames":[{"name":"success","nativeSrc":"19567:7:8","nodeType":"YulIdentifier","src":"19567:7:8"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:8","nodeType":"YulIdentifier","src":"19796:6:8"},{"name":"mLen","nativeSrc":"19804:4:8","nodeType":"YulIdentifier","src":"19804:4:8"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:8","nodeType":"YulIdentifier","src":"19789:6:8"},"nativeSrc":"19789:20:8","nodeType":"YulFunctionCall","src":"19789:20:8"},"nativeSrc":"19789:20:8","nodeType":"YulExpressionStatement","src":"19789:20:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:8","nodeType":"YulLiteral","src":"19892:4:8","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:8","nodeType":"YulIdentifier","src":"19902:7:8"},{"name":"mLen","nativeSrc":"19911:4:8","nodeType":"YulIdentifier","src":"19911:4:8"}],"functionName":{"name":"add","nativeSrc":"19898:3:8","nodeType":"YulIdentifier","src":"19898:3:8"},"nativeSrc":"19898:18:8","nodeType":"YulFunctionCall","src":"19898:18:8"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:8","nodeType":"YulIdentifier","src":"19885:6:8"},"nativeSrc":"19885:32:8","nodeType":"YulFunctionCall","src":"19885:32:8"},"nativeSrc":"19885:32:8","nodeType":"YulExpressionStatement","src":"19885:32:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":3113,"isOffset":false,"isSlot":false,"src":"19635:4:8","valueSize":1},{"declaration":3113,"isOffset":false,"isSlot":false,"src":"19804:4:8","valueSize":1},{"declaration":3113,"isOffset":false,"isSlot":false,"src":"19911:4:8","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"19464:6:8","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"19617:6:8","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"19796:6:8","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"19567:7:8","valueSize":1}],"flags":["memory-safe"],"id":3131,"nodeType":"InlineAssembly","src":"19406:521:8"}]},"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"18914:88:8","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:8","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"b","nameLocation":"19048:1:8","nodeType":"VariableDeclaration","scope":3133,"src":"19035:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"e","nameLocation":"19072:1:8","nodeType":"VariableDeclaration","scope":3133,"src":"19059:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3091,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"m","nameLocation":"19096:1:8","nodeType":"VariableDeclaration","scope":3133,"src":"19083:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3093,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:8"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"success","nameLocation":"19132:7:8","nodeType":"VariableDeclaration","scope":3133,"src":"19127:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3096,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"result","nameLocation":"19154:6:8","nodeType":"VariableDeclaration","scope":3133,"src":"19141:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3098,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:8"},"scope":3841,"src":"19007:926:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3165,"nodeType":"Block","src":"20088:176:8","statements":[{"body":{"id":3161,"nodeType":"Block","src":"20145:92:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3152,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"20163:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3154,"indexExpression":{"id":3153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"20173:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3160,"nodeType":"IfStatement","src":"20159:68:8","trueBody":{"id":3159,"nodeType":"Block","src":"20182:45:8","statements":[{"expression":{"hexValue":"66616c7365","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3140,"id":3158,"nodeType":"Return","src":"20200:12:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"20118:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3146,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"20122:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:8","memberName":"length","nodeType":"MemberAccess","src":"20122:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3162,"initializationExpression":{"assignments":[3142],"declarations":[{"constant":false,"id":3142,"mutability":"mutable","name":"i","nameLocation":"20111:1:8","nodeType":"VariableDeclaration","scope":3162,"src":"20103:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3144,"initialValue":{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:8","subExpression":{"id":3149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"20142:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"20140:3:8"},"nodeType":"ForStatement","src":"20098:139:8"},{"expression":{"hexValue":"74727565","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3140,"id":3164,"nodeType":"Return","src":"20246:11:8"}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"19939:72:8","text":" @dev Returns whether the provided byte array is zero."},"id":3166,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:8","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:8","nodeType":"VariableDeclaration","scope":3166,"src":"20036:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3135,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:8"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3166,"src":"20082:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3138,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:8"},"scope":3841,"src":"20016:248:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3384,"nodeType":"Block","src":"20624:5124:8","statements":[{"id":3383,"nodeType":"UncheckedBlock","src":"20634:5108:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"20728:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3180,"nodeType":"IfStatement","src":"20724:53:8","trueBody":{"id":3179,"nodeType":"Block","src":"20736:41:8","statements":[{"expression":{"id":3177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"20761:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3173,"id":3178,"nodeType":"Return","src":"20754:8:8"}]}},{"assignments":[3182],"declarations":[{"constant":false,"id":3182,"mutability":"mutable","name":"aa","nameLocation":"21712:2:8","nodeType":"VariableDeclaration","scope":3383,"src":"21704:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3184,"initialValue":{"id":3183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"21717:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:8"},{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"xn","nameLocation":"21740:2:8","nodeType":"VariableDeclaration","scope":3383,"src":"21732:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3188,"initialValue":{"hexValue":"31","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"21765:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3204,"nodeType":"IfStatement","src":"21761:92:8","trueBody":{"id":3203,"nodeType":"Block","src":"21783:70:8","statements":[{"expression":{"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3195,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"21801:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3198,"nodeType":"ExpressionStatement","src":"21801:10:8"},{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3199,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"21829:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"21829:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"21870:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3220,"nodeType":"IfStatement","src":"21866:90:8","trueBody":{"id":3219,"nodeType":"Block","src":"21887:69:8","statements":[{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3211,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"21905:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3214,"nodeType":"ExpressionStatement","src":"21905:9:8"},{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"21932:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"21932:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"21973:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"21969:90:8","trueBody":{"id":3235,"nodeType":"Block","src":"21990:69:8","statements":[{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22008:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"22008:9:8"},{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"22035:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"22035:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22076:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3252,"nodeType":"IfStatement","src":"22072:89:8","trueBody":{"id":3251,"nodeType":"Block","src":"22093:68:8","statements":[{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3243,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22111:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ExpressionStatement","src":"22111:9:8"},{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3247,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"22138:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3250,"nodeType":"ExpressionStatement","src":"22138:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22178:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3268,"nodeType":"IfStatement","src":"22174:87:8","trueBody":{"id":3267,"nodeType":"Block","src":"22194:67:8","statements":[{"expression":{"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3259,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22212:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3262,"nodeType":"ExpressionStatement","src":"22212:8:8"},{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3263,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"22238:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3266,"nodeType":"ExpressionStatement","src":"22238:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22278:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3284,"nodeType":"IfStatement","src":"22274:87:8","trueBody":{"id":3283,"nodeType":"Block","src":"22294:67:8","statements":[{"expression":{"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3275,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22312:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3278,"nodeType":"ExpressionStatement","src":"22312:8:8"},{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3279,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"22338:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"22338:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"22378:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"22374:61:8","trueBody":{"id":3295,"nodeType":"Block","src":"22394:41:8","statements":[{"expression":{"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3291,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"22412:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3294,"nodeType":"ExpressionStatement","src":"22412:8:8"}]}},{"expression":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"22855:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3299,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"22865:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3305,"nodeType":"ExpressionStatement","src":"22855:18:8"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3306,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24760:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3307,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24766:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"24771:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3309,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24775:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"24760:23:8"},{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3317,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24869:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24875:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"24880:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3320,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24884:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"24869:23:8"},{"expression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24980:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24986:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"24991:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3331,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24995:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3338,"nodeType":"ExpressionStatement","src":"24980:23:8"},{"expression":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25089:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25095:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"25100:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25104:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3349,"nodeType":"ExpressionStatement","src":"25089:23:8"},{"expression":{"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25199:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25205:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"25210:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25214:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3360,"nodeType":"ExpressionStatement","src":"25199:23:8"},{"expression":{"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3361,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25309:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25315:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"25320:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25324:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3371,"nodeType":"ExpressionStatement","src":"25309:23:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25698:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25719:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"25724:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"25728:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3373,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"25703:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"25703:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3173,"id":3382,"nodeType":"Return","src":"25691:40:8"}]}]},"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"20270:292:8","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3385,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:8","nodeType":"FunctionDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"a","nameLocation":"20589:1:8","nodeType":"VariableDeclaration","scope":3385,"src":"20581:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:8"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3385,"src":"20615:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:8"},"scope":3841,"src":"20567:5181:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"25921:171:8","statements":[{"id":3417,"nodeType":"UncheckedBlock","src":"25931:155:8","statements":[{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"result","nameLocation":"25963:6:8","nodeType":"VariableDeclaration","scope":3417,"src":"25955:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3401,"initialValue":{"arguments":[{"id":3399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"25977:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3398,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3385,3419],"referencedDeclaration":3385,"src":"25972:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"26000:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3406,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"26042:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}],"id":3405,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"26025:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"26055:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"26064:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"26073:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3403,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"26009:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"26009:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3395,"id":3416,"nodeType":"Return","src":"25993:82:8"}]}]},"documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"25754:86:8","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:8","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"a","nameLocation":"25867:1:8","nodeType":"VariableDeclaration","scope":3419,"src":"25859:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:8","nodeType":"VariableDeclaration","scope":3419,"src":"25870:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"},"typeName":{"id":3390,"nodeType":"UserDefinedTypeName","pathNode":{"id":3389,"name":"Rounding","nameLocations":["25870:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"25870:8:8"},"referencedDeclaration":2232,"src":"25870:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:8"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3419,"src":"25912:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:8"},"scope":3841,"src":"25845:247:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3509,"nodeType":"Block","src":"26281:2334:8","statements":[{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3427,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26363:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3430,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"26383:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3428,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"26367:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"26367:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:8","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3437,"nodeType":"ExpressionStatement","src":"26363:64:8"},{"expression":{"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26503:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"26525:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3442,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26530:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3439,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"26508:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"26508:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:8","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ExpressionStatement","src":"26503:56:8"},{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3452,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26634:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"26656:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3456,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26661:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3453,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"26639:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"26639:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3465,"nodeType":"ExpressionStatement","src":"26634:48:8"},{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3466,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26757:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"26779:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3470,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26784:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3467,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"26762:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"26762:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3479,"nodeType":"ExpressionStatement","src":"26757:44:8"},{"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26874:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"26896:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3484,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26901:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"26879:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"26879:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3493,"nodeType":"ExpressionStatement","src":"26874:42:8"},{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"26988:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"27010:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3498,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"27015:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3495,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"26993:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"26993:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3507,"nodeType":"ExpressionStatement","src":"26988:41:8"},{"AST":{"nativeSrc":"28490:119:8","nodeType":"YulBlock","src":"28490:119:8","statements":[{"nativeSrc":"28504:95:8","nodeType":"YulAssignment","src":"28504:95:8","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:8","nodeType":"YulIdentifier","src":"28512:1:8"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:8","nodeType":"YulIdentifier","src":"28524:1:8"},{"name":"x","nativeSrc":"28527:1:8","nodeType":"YulIdentifier","src":"28527:1:8"}],"functionName":{"name":"shr","nativeSrc":"28520:3:8","nodeType":"YulIdentifier","src":"28520:3:8"},"nativeSrc":"28520:9:8","nodeType":"YulFunctionCall","src":"28520:9:8"},{"kind":"number","nativeSrc":"28531:66:8","nodeType":"YulLiteral","src":"28531:66:8","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:8","nodeType":"YulIdentifier","src":"28515:4:8"},"nativeSrc":"28515:83:8","nodeType":"YulFunctionCall","src":"28515:83:8"}],"functionName":{"name":"or","nativeSrc":"28509:2:8","nodeType":"YulIdentifier","src":"28509:2:8"},"nativeSrc":"28509:90:8","nodeType":"YulFunctionCall","src":"28509:90:8"},"variableNames":[{"name":"r","nativeSrc":"28504:1:8","nodeType":"YulIdentifier","src":"28504:1:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3425,"isOffset":false,"isSlot":false,"src":"28504:1:8","valueSize":1},{"declaration":3425,"isOffset":false,"isSlot":false,"src":"28512:1:8","valueSize":1},{"declaration":3425,"isOffset":false,"isSlot":false,"src":"28524:1:8","valueSize":1},{"declaration":3422,"isOffset":false,"isSlot":false,"src":"28527:1:8","valueSize":1}],"flags":["memory-safe"],"id":3508,"nodeType":"InlineAssembly","src":"28465:144:8"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"26098:119:8","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:8","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"x","nameLocation":"26244:1:8","nodeType":"VariableDeclaration","scope":3510,"src":"26236:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:8"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"r","nameLocation":"26278:1:8","nodeType":"VariableDeclaration","scope":3510,"src":"26270:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:8"},"scope":3841,"src":"26222:2393:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3543,"nodeType":"Block","src":"28848:175:8","statements":[{"id":3542,"nodeType":"UncheckedBlock","src":"28858:159:8","statements":[{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"result","nameLocation":"28890:6:8","nodeType":"VariableDeclaration","scope":3542,"src":"28882:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3526,"initialValue":{"arguments":[{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"28904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3523,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3510,3544],"referencedDeclaration":3510,"src":"28899:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"28931:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3531,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"28973:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}],"id":3530,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"28956:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"28991:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"29000:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3528,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"28940:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"28940:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3520,"id":3541,"nodeType":"Return","src":"28924:82:8"}]}]},"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"28621:142:8","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:8","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"value","nameLocation":"28790:5:8","nodeType":"VariableDeclaration","scope":3544,"src":"28782:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:8","nodeType":"VariableDeclaration","scope":3544,"src":"28797:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"},"typeName":{"id":3515,"nodeType":"UserDefinedTypeName","pathNode":{"id":3514,"name":"Rounding","nameLocations":["28797:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"28797:8:8"},"referencedDeclaration":2232,"src":"28797:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:8"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"28839:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:8"},"scope":3841,"src":"28768:255:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3672,"nodeType":"Block","src":"29216:854:8","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"result","nameLocation":"29234:6:8","nodeType":"VariableDeclaration","scope":3672,"src":"29226:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3555,"initialValue":{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:8"},{"id":3669,"nodeType":"UncheckedBlock","src":"29254:787:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29282:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3572,"nodeType":"IfStatement","src":"29278:103:8","trueBody":{"id":3571,"nodeType":"Block","src":"29301:80:8","statements":[{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29319:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"29319:17:8"},{"expression":{"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"29354:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3570,"nodeType":"ExpressionStatement","src":"29354:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29398:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3589,"nodeType":"IfStatement","src":"29394:103:8","trueBody":{"id":3588,"nodeType":"Block","src":"29417:80:8","statements":[{"expression":{"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29435:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"nodeType":"ExpressionStatement","src":"29435:17:8"},{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"29470:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3587,"nodeType":"ExpressionStatement","src":"29470:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29514:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3606,"nodeType":"IfStatement","src":"29510:103:8","trueBody":{"id":3605,"nodeType":"Block","src":"29533:80:8","statements":[{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29551:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"29551:17:8"},{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"29586:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"29586:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29630:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3623,"nodeType":"IfStatement","src":"29626:100:8","trueBody":{"id":3622,"nodeType":"Block","src":"29648:78:8","statements":[{"expression":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29666:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ExpressionStatement","src":"29666:16:8"},{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"29700:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"29700:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29743:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"29739:100:8","trueBody":{"id":3639,"nodeType":"Block","src":"29761:78:8","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29779:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"29779:16:8"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"29813:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"29813:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29856:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"nodeType":"IfStatement","src":"29852:100:8","trueBody":{"id":3656,"nodeType":"Block","src":"29874:78:8","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29892:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"29892:16:8"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"29926:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"29926:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"29969:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"nodeType":"IfStatement","src":"29965:66:8","trueBody":{"id":3667,"nodeType":"Block","src":"29987:44:8","statements":[{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"30005:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"30005:11:8"}]}}]},{"expression":{"id":3670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"30057:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3551,"id":3671,"nodeType":"Return","src":"30050:13:8"}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"29029:120:8","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:8","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"29177:5:8","nodeType":"VariableDeclaration","scope":3673,"src":"29169:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:8"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3673,"src":"29207:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:8"},"scope":3841,"src":"29154:916:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3706,"nodeType":"Block","src":"30305:177:8","statements":[{"id":3705,"nodeType":"UncheckedBlock","src":"30315:161:8","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"result","nameLocation":"30347:6:8","nodeType":"VariableDeclaration","scope":3705,"src":"30339:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3689,"initialValue":{"arguments":[{"id":3687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"30362:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3673,3707],"referencedDeclaration":3673,"src":"30356:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"30389:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3694,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"30431:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}],"id":3693,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"30414:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"30450:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"30459:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3691,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"30398:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"30398:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3683,"id":3704,"nodeType":"Return","src":"30382:83:8"}]}]},"documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"30076:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:8","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"value","nameLocation":"30247:5:8","nodeType":"VariableDeclaration","scope":3707,"src":"30239:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:8","nodeType":"VariableDeclaration","scope":3707,"src":"30254:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"},"typeName":{"id":3678,"nodeType":"UserDefinedTypeName","pathNode":{"id":3677,"name":"Rounding","nameLocations":["30254:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"30254:8:8"},"referencedDeclaration":2232,"src":"30254:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:8"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3707,"src":"30296:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:8"},"scope":3841,"src":"30224:258:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3783,"nodeType":"Block","src":"30800:675:8","statements":[{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"30882:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"30902:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3716,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"30886:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"30886:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:8","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"30882:64:8"},{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31022:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"31044:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3730,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31049:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3727,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"31027:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"31027:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:8","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3739,"nodeType":"ExpressionStatement","src":"31022:56:8"},{"expression":{"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3740,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31153:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"31175:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3744,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31180:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3741,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"31158:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"31158:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3753,"nodeType":"ExpressionStatement","src":"31153:48:8"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31276:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"31298:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3758,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31303:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3755,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"31281:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"31281:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"31276:44:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31426:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"31453:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3775,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"31458:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3772,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"31436:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"31436:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3714,"id":3782,"nodeType":"Return","src":"31418:50:8"}]},"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"30488:246:8","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:8","nodeType":"FunctionDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"x","nameLocation":"30763:1:8","nodeType":"VariableDeclaration","scope":3784,"src":"30755:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:8"},"returnParameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"r","nameLocation":"30797:1:8","nodeType":"VariableDeclaration","scope":3784,"src":"30789:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:8"},"scope":3841,"src":"30739:736:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3820,"nodeType":"Block","src":"31712:184:8","statements":[{"id":3819,"nodeType":"UncheckedBlock","src":"31722:168:8","statements":[{"assignments":[3796],"declarations":[{"constant":false,"id":3796,"mutability":"mutable","name":"result","nameLocation":"31754:6:8","nodeType":"VariableDeclaration","scope":3819,"src":"31746:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3800,"initialValue":{"arguments":[{"id":3798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"31770:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3797,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3784,3821],"referencedDeclaration":3784,"src":"31763:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"31797:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3805,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"31839:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}],"id":3804,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"31822:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2232_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"31858:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"31873:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3802,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"31806:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"31806:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3794,"id":3818,"nodeType":"Return","src":"31790:89:8"}]}]},"documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"31481:144:8","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3821,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:8","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"value","nameLocation":"31654:5:8","nodeType":"VariableDeclaration","scope":3821,"src":"31646:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:8","nodeType":"VariableDeclaration","scope":3821,"src":"31661:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"},"typeName":{"id":3789,"nodeType":"UserDefinedTypeName","pathNode":{"id":3788,"name":"Rounding","nameLocations":["31661:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"31661:8:8"},"referencedDeclaration":2232,"src":"31661:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:8"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"31703:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:8"},"scope":3841,"src":"31630:266:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3839,"nodeType":"Block","src":"32094:48:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3832,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"32117:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}],"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3830,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:8","typeDescriptions":{}}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3829,"id":3838,"nodeType":"Return","src":"32104:31:8"}]},"documentation":{"id":3822,"nodeType":"StructuredDocumentation","src":"31902:113:8","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3840,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:8","nodeType":"FunctionDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:8","nodeType":"VariableDeclaration","scope":3840,"src":"32046:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"},"typeName":{"id":3824,"nodeType":"UserDefinedTypeName","pathNode":{"id":3823,"name":"Rounding","nameLocations":["32046:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2232,"src":"32046:8:8"},"referencedDeclaration":2232,"src":"32046:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:8"},"returnParameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"32088:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3827,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:8"},"scope":3841,"src":"32020:122:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3842,"src":"281:31863:8","usedErrors":[],"usedEvents":[]}],"src":"103:32042:8"},"id":8},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5606]},"id":5607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3843,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"218:550:9","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5606,"linearizedBaseContracts":[5606],"name":"SafeCast","nameLocation":"777:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"792:68:9","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3851,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:9","nodeType":"ErrorDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"bits","nameLocation":"908:4:9","nodeType":"VariableDeclaration","scope":3851,"src":"902:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3846,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"value","nameLocation":"922:5:9","nodeType":"VariableDeclaration","scope":3851,"src":"914:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:9"},"src":"865:64:9"},{"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"935:75:9","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3856,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:9","nodeType":"ErrorDefinition","parameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"value","nameLocation":"1056:5:9","nodeType":"VariableDeclaration","scope":3856,"src":"1049:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3853,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:9"},"src":"1015:48:9"},{"documentation":{"id":3857,"nodeType":"StructuredDocumentation","src":"1069:67:9","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3863,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:9","nodeType":"ErrorDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"bits","nameLocation":"1183:4:9","nodeType":"VariableDeclaration","scope":3863,"src":"1177:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3858,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"value","nameLocation":"1196:5:9","nodeType":"VariableDeclaration","scope":3863,"src":"1189:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3860,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:9"},"src":"1141:62:9"},{"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"1209:75:9","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3868,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:9","nodeType":"ErrorDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"value","nameLocation":"1331:5:9","nodeType":"VariableDeclaration","scope":3868,"src":"1323:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:9"},"src":"1289:49:9"},{"body":{"id":3895,"nodeType":"Block","src":"1695:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"1709:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3878,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3877,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:9","memberName":"max","nodeType":"MemberAccess","src":"1717:17:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3889,"nodeType":"IfStatement","src":"1705:105:9","trueBody":{"id":3888,"nodeType":"Block","src":"1736:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"1793:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3883,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"1757:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3887,"nodeType":"RevertStatement","src":"1750:49:9"}]}},{"expression":{"arguments":[{"id":3892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"1834:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3890,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:9","typeDescriptions":{}}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3875,"id":3894,"nodeType":"Return","src":"1819:21:9"}]},"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"1344:280:9","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:9","nodeType":"FunctionDefinition","parameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"value","nameLocation":"1656:5:9","nodeType":"VariableDeclaration","scope":3896,"src":"1648:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:9"},"returnParameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3896,"src":"1686:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3873,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:9"},"scope":5606,"src":"1629:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3923,"nodeType":"Block","src":"2204:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"2218:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3906,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3905,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:9","memberName":"max","nodeType":"MemberAccess","src":"2226:17:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"nodeType":"IfStatement","src":"2214:105:9","trueBody":{"id":3916,"nodeType":"Block","src":"2245:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"2302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3911,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2266:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3915,"nodeType":"RevertStatement","src":"2259:49:9"}]}},{"expression":{"arguments":[{"id":3920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"2343:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3918,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:9","typeDescriptions":{}}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3903,"id":3922,"nodeType":"Return","src":"2328:21:9"}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"1853:280:9","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:9","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"value","nameLocation":"2165:5:9","nodeType":"VariableDeclaration","scope":3924,"src":"2157:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:9"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3924,"src":"2195:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3901,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:9"},"scope":5606,"src":"2138:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3951,"nodeType":"Block","src":"2713:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"2727:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3934,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3933,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:9","memberName":"max","nodeType":"MemberAccess","src":"2735:17:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3945,"nodeType":"IfStatement","src":"2723:105:9","trueBody":{"id":3944,"nodeType":"Block","src":"2754:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"2811:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3939,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2775:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3943,"nodeType":"RevertStatement","src":"2768:49:9"}]}},{"expression":{"arguments":[{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"2852:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3946,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:9","typeDescriptions":{}}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3931,"id":3950,"nodeType":"Return","src":"2837:21:9"}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"2362:280:9","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"value","nameLocation":"2674:5:9","nodeType":"VariableDeclaration","scope":3952,"src":"2666:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:9"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3952,"src":"2704:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3929,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:9"},"scope":5606,"src":"2647:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3979,"nodeType":"Block","src":"3222:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"3236:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3962,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3961,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:9","memberName":"max","nodeType":"MemberAccess","src":"3244:17:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"IfStatement","src":"3232:105:9","trueBody":{"id":3972,"nodeType":"Block","src":"3263:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"3320:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3967,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"3284:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3971,"nodeType":"RevertStatement","src":"3277:49:9"}]}},{"expression":{"arguments":[{"id":3976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"3361:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3974,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:9","typeDescriptions":{}}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3959,"id":3978,"nodeType":"Return","src":"3346:21:9"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"2871:280:9","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3980,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:9","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"value","nameLocation":"3183:5:9","nodeType":"VariableDeclaration","scope":3980,"src":"3175:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:9"},"returnParameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3980,"src":"3213:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3957,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:9"},"scope":5606,"src":"3156:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4007,"nodeType":"Block","src":"3731:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"3745:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3990,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3989,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:9","memberName":"max","nodeType":"MemberAccess","src":"3753:17:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4001,"nodeType":"IfStatement","src":"3741:105:9","trueBody":{"id":4000,"nodeType":"Block","src":"3772:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"3829:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3995,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"3793:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3999,"nodeType":"RevertStatement","src":"3786:49:9"}]}},{"expression":{"arguments":[{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"3870:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4002,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:9","typeDescriptions":{}}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3987,"id":4006,"nodeType":"Return","src":"3855:21:9"}]},"documentation":{"id":3981,"nodeType":"StructuredDocumentation","src":"3380:280:9","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4008,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:9","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"value","nameLocation":"3692:5:9","nodeType":"VariableDeclaration","scope":4008,"src":"3684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:9"},"returnParameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4008,"src":"3722:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3985,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:9"},"scope":5606,"src":"3665:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4035,"nodeType":"Block","src":"4240:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"4254:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4018,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4017,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:9","memberName":"max","nodeType":"MemberAccess","src":"4262:17:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"nodeType":"IfStatement","src":"4250:105:9","trueBody":{"id":4028,"nodeType":"Block","src":"4281:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"4338:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4023,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4302:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4027,"nodeType":"RevertStatement","src":"4295:49:9"}]}},{"expression":{"arguments":[{"id":4032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"4379:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4030,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:9","typeDescriptions":{}}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4015,"id":4034,"nodeType":"Return","src":"4364:21:9"}]},"documentation":{"id":4009,"nodeType":"StructuredDocumentation","src":"3889:280:9","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4036,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:9","nodeType":"FunctionDefinition","parameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"value","nameLocation":"4201:5:9","nodeType":"VariableDeclaration","scope":4036,"src":"4193:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:9"},"returnParameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4036,"src":"4231:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4013,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:9"},"scope":5606,"src":"4174:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4063,"nodeType":"Block","src":"4749:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"4763:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4046,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:9","memberName":"max","nodeType":"MemberAccess","src":"4771:17:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4057,"nodeType":"IfStatement","src":"4759:105:9","trueBody":{"id":4056,"nodeType":"Block","src":"4790:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"4847:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4051,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4811:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4055,"nodeType":"RevertStatement","src":"4804:49:9"}]}},{"expression":{"arguments":[{"id":4060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"4888:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4058,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:9","typeDescriptions":{}}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4043,"id":4062,"nodeType":"Return","src":"4873:21:9"}]},"documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"4398:280:9","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4064,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:9","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"value","nameLocation":"4710:5:9","nodeType":"VariableDeclaration","scope":4064,"src":"4702:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:9"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4064,"src":"4740:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4041,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:9"},"scope":5606,"src":"4683:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4091,"nodeType":"Block","src":"5258:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"5272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4074,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4073,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:9","memberName":"max","nodeType":"MemberAccess","src":"5280:17:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4085,"nodeType":"IfStatement","src":"5268:105:9","trueBody":{"id":4084,"nodeType":"Block","src":"5299:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"5356:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4079,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"5320:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4083,"nodeType":"RevertStatement","src":"5313:49:9"}]}},{"expression":{"arguments":[{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"5397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4086,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:9","typeDescriptions":{}}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4071,"id":4090,"nodeType":"Return","src":"5382:21:9"}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"4907:280:9","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4092,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:9","nodeType":"FunctionDefinition","parameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"value","nameLocation":"5219:5:9","nodeType":"VariableDeclaration","scope":4092,"src":"5211:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:9"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4092,"src":"5249:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4069,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:9"},"scope":5606,"src":"5192:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4119,"nodeType":"Block","src":"5767:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"5781:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4102,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4101,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:9","memberName":"max","nodeType":"MemberAccess","src":"5789:17:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4113,"nodeType":"IfStatement","src":"5777:105:9","trueBody":{"id":4112,"nodeType":"Block","src":"5808:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"5865:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4107,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"5829:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4111,"nodeType":"RevertStatement","src":"5822:49:9"}]}},{"expression":{"arguments":[{"id":4116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"5906:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4114,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:9","typeDescriptions":{}}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4099,"id":4118,"nodeType":"Return","src":"5891:21:9"}]},"documentation":{"id":4093,"nodeType":"StructuredDocumentation","src":"5416:280:9","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4120,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:9","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"value","nameLocation":"5728:5:9","nodeType":"VariableDeclaration","scope":4120,"src":"5720:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:9"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4120,"src":"5758:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4097,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:9"},"scope":5606,"src":"5701:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4147,"nodeType":"Block","src":"6276:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"6290:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4130,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4129,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:9","memberName":"max","nodeType":"MemberAccess","src":"6298:17:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4141,"nodeType":"IfStatement","src":"6286:105:9","trueBody":{"id":4140,"nodeType":"Block","src":"6317:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"6374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4135,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"6338:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4139,"nodeType":"RevertStatement","src":"6331:49:9"}]}},{"expression":{"arguments":[{"id":4144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"6415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4142,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:9","typeDescriptions":{}}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4127,"id":4146,"nodeType":"Return","src":"6400:21:9"}]},"documentation":{"id":4121,"nodeType":"StructuredDocumentation","src":"5925:280:9","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4148,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:9","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"value","nameLocation":"6237:5:9","nodeType":"VariableDeclaration","scope":4148,"src":"6229:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:9"},"returnParameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4148,"src":"6267:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4125,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:9"},"scope":5606,"src":"6210:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4175,"nodeType":"Block","src":"6785:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"6799:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4158,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:9","memberName":"max","nodeType":"MemberAccess","src":"6807:17:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4169,"nodeType":"IfStatement","src":"6795:105:9","trueBody":{"id":4168,"nodeType":"Block","src":"6826:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"6883:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4163,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"6847:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4167,"nodeType":"RevertStatement","src":"6840:49:9"}]}},{"expression":{"arguments":[{"id":4172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"6924:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4170,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:9","typeDescriptions":{}}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4155,"id":4174,"nodeType":"Return","src":"6909:21:9"}]},"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"6434:280:9","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:9","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"value","nameLocation":"6746:5:9","nodeType":"VariableDeclaration","scope":4176,"src":"6738:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:9"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4176,"src":"6776:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4153,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:9"},"scope":5606,"src":"6719:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4203,"nodeType":"Block","src":"7294:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"7308:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4186,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4185,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:9","memberName":"max","nodeType":"MemberAccess","src":"7316:17:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4197,"nodeType":"IfStatement","src":"7304:105:9","trueBody":{"id":4196,"nodeType":"Block","src":"7335:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"7392:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4191,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"7356:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4195,"nodeType":"RevertStatement","src":"7349:49:9"}]}},{"expression":{"arguments":[{"id":4200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"7433:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4198,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:9","typeDescriptions":{}}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4183,"id":4202,"nodeType":"Return","src":"7418:21:9"}]},"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"6943:280:9","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4204,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:9","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"value","nameLocation":"7255:5:9","nodeType":"VariableDeclaration","scope":4204,"src":"7247:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:9"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4204,"src":"7285:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4181,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:9"},"scope":5606,"src":"7228:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4231,"nodeType":"Block","src":"7803:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"7817:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4214,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:9","memberName":"max","nodeType":"MemberAccess","src":"7825:17:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4225,"nodeType":"IfStatement","src":"7813:105:9","trueBody":{"id":4224,"nodeType":"Block","src":"7844:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"7901:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4219,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"7865:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4223,"nodeType":"RevertStatement","src":"7858:49:9"}]}},{"expression":{"arguments":[{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"7942:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4226,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:9","typeDescriptions":{}}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4211,"id":4230,"nodeType":"Return","src":"7927:21:9"}]},"documentation":{"id":4205,"nodeType":"StructuredDocumentation","src":"7452:280:9","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4232,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:9","nodeType":"FunctionDefinition","parameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"value","nameLocation":"7764:5:9","nodeType":"VariableDeclaration","scope":4232,"src":"7756:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:9"},"returnParameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4232,"src":"7794:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4209,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:9"},"scope":5606,"src":"7737:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"8312:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"8326:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4242,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4241,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:9","memberName":"max","nodeType":"MemberAccess","src":"8334:17:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4253,"nodeType":"IfStatement","src":"8322:105:9","trueBody":{"id":4252,"nodeType":"Block","src":"8353:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"8410:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4247,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"8374:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4251,"nodeType":"RevertStatement","src":"8367:49:9"}]}},{"expression":{"arguments":[{"id":4256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"8451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4254,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:9","typeDescriptions":{}}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4239,"id":4258,"nodeType":"Return","src":"8436:21:9"}]},"documentation":{"id":4233,"nodeType":"StructuredDocumentation","src":"7961:280:9","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:9","nodeType":"FunctionDefinition","parameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"value","nameLocation":"8273:5:9","nodeType":"VariableDeclaration","scope":4260,"src":"8265:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:9"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"8303:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4237,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:9"},"scope":5606,"src":"8246:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4287,"nodeType":"Block","src":"8821:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"8835:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4270,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:9","memberName":"max","nodeType":"MemberAccess","src":"8843:17:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4281,"nodeType":"IfStatement","src":"8831:105:9","trueBody":{"id":4280,"nodeType":"Block","src":"8862:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"8919:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4275,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"8883:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4279,"nodeType":"RevertStatement","src":"8876:49:9"}]}},{"expression":{"arguments":[{"id":4284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"8960:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4282,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:9","typeDescriptions":{}}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4267,"id":4286,"nodeType":"Return","src":"8945:21:9"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"8470:280:9","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4288,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:9","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"value","nameLocation":"8782:5:9","nodeType":"VariableDeclaration","scope":4288,"src":"8774:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:9"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4288,"src":"8812:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4265,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:9"},"scope":5606,"src":"8755:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4315,"nodeType":"Block","src":"9330:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"9344:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4298,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4297,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:9","memberName":"max","nodeType":"MemberAccess","src":"9352:17:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4309,"nodeType":"IfStatement","src":"9340:105:9","trueBody":{"id":4308,"nodeType":"Block","src":"9371:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"9428:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4303,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"9392:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4307,"nodeType":"RevertStatement","src":"9385:49:9"}]}},{"expression":{"arguments":[{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"9469:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4310,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:9","typeDescriptions":{}}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4295,"id":4314,"nodeType":"Return","src":"9454:21:9"}]},"documentation":{"id":4289,"nodeType":"StructuredDocumentation","src":"8979:280:9","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4316,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:9","nodeType":"FunctionDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"value","nameLocation":"9291:5:9","nodeType":"VariableDeclaration","scope":4316,"src":"9283:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:9"},"returnParameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4316,"src":"9321:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4293,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:9"},"scope":5606,"src":"9264:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4343,"nodeType":"Block","src":"9839:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"9853:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4326,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4325,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:9","memberName":"max","nodeType":"MemberAccess","src":"9861:17:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4337,"nodeType":"IfStatement","src":"9849:105:9","trueBody":{"id":4336,"nodeType":"Block","src":"9880:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"9937:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4331,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"9901:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4335,"nodeType":"RevertStatement","src":"9894:49:9"}]}},{"expression":{"arguments":[{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"9978:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4338,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:9","typeDescriptions":{}}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4323,"id":4342,"nodeType":"Return","src":"9963:21:9"}]},"documentation":{"id":4317,"nodeType":"StructuredDocumentation","src":"9488:280:9","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4344,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:9","nodeType":"FunctionDefinition","parameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"value","nameLocation":"9800:5:9","nodeType":"VariableDeclaration","scope":4344,"src":"9792:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:9"},"returnParameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4344,"src":"9830:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4321,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:9"},"scope":5606,"src":"9773:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4371,"nodeType":"Block","src":"10348:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"10362:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4354,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4353,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:9","memberName":"max","nodeType":"MemberAccess","src":"10370:17:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4365,"nodeType":"IfStatement","src":"10358:105:9","trueBody":{"id":4364,"nodeType":"Block","src":"10389:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"10446:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4359,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"10410:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4363,"nodeType":"RevertStatement","src":"10403:49:9"}]}},{"expression":{"arguments":[{"id":4368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"10487:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4366,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:9","typeDescriptions":{}}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4351,"id":4370,"nodeType":"Return","src":"10472:21:9"}]},"documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"9997:280:9","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4372,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:9","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"value","nameLocation":"10309:5:9","nodeType":"VariableDeclaration","scope":4372,"src":"10301:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:9"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4372,"src":"10339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4349,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:9"},"scope":5606,"src":"10282:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"10857:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"10871:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4382,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:9","memberName":"max","nodeType":"MemberAccess","src":"10879:17:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4393,"nodeType":"IfStatement","src":"10867:105:9","trueBody":{"id":4392,"nodeType":"Block","src":"10898:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"10955:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4387,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"10919:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4391,"nodeType":"RevertStatement","src":"10912:49:9"}]}},{"expression":{"arguments":[{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"10996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4394,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:9","typeDescriptions":{}}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4379,"id":4398,"nodeType":"Return","src":"10981:21:9"}]},"documentation":{"id":4373,"nodeType":"StructuredDocumentation","src":"10506:280:9","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:9","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"value","nameLocation":"10818:5:9","nodeType":"VariableDeclaration","scope":4400,"src":"10810:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4374,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:9"},"returnParameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4400,"src":"10848:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4377,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:9"},"scope":5606,"src":"10791:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4427,"nodeType":"Block","src":"11360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"11374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4410,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4409,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:9","memberName":"max","nodeType":"MemberAccess","src":"11382:16:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4421,"nodeType":"IfStatement","src":"11370:103:9","trueBody":{"id":4420,"nodeType":"Block","src":"11400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"11456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4415,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"11421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4419,"nodeType":"RevertStatement","src":"11414:48:9"}]}},{"expression":{"arguments":[{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"11496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4422,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:9","typeDescriptions":{}}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4407,"id":4426,"nodeType":"Return","src":"11482:20:9"}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"11015:276:9","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4428,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"value","nameLocation":"11322:5:9","nodeType":"VariableDeclaration","scope":4428,"src":"11314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:9"},"returnParameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4428,"src":"11352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4405,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:9"},"scope":5606,"src":"11296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4455,"nodeType":"Block","src":"11860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"11874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4438,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:9","memberName":"max","nodeType":"MemberAccess","src":"11882:16:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4449,"nodeType":"IfStatement","src":"11870:103:9","trueBody":{"id":4448,"nodeType":"Block","src":"11900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"11956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4443,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"11921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4447,"nodeType":"RevertStatement","src":"11914:48:9"}]}},{"expression":{"arguments":[{"id":4452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"11996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4450,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:9","typeDescriptions":{}}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4435,"id":4454,"nodeType":"Return","src":"11982:20:9"}]},"documentation":{"id":4429,"nodeType":"StructuredDocumentation","src":"11515:276:9","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4456,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"value","nameLocation":"11822:5:9","nodeType":"VariableDeclaration","scope":4456,"src":"11814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:9"},"returnParameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4456,"src":"11852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4433,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:9"},"scope":5606,"src":"11796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4483,"nodeType":"Block","src":"12360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"12374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4466,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4465,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:9","memberName":"max","nodeType":"MemberAccess","src":"12382:16:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4477,"nodeType":"IfStatement","src":"12370:103:9","trueBody":{"id":4476,"nodeType":"Block","src":"12400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"12456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4471,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"12421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4475,"nodeType":"RevertStatement","src":"12414:48:9"}]}},{"expression":{"arguments":[{"id":4480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"12496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4478,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:9","typeDescriptions":{}}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4463,"id":4482,"nodeType":"Return","src":"12482:20:9"}]},"documentation":{"id":4457,"nodeType":"StructuredDocumentation","src":"12015:276:9","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4484,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"value","nameLocation":"12322:5:9","nodeType":"VariableDeclaration","scope":4484,"src":"12314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:9"},"returnParameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4484,"src":"12352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4461,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:9"},"scope":5606,"src":"12296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4511,"nodeType":"Block","src":"12860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"12874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4494,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4493,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:9","memberName":"max","nodeType":"MemberAccess","src":"12882:16:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4505,"nodeType":"IfStatement","src":"12870:103:9","trueBody":{"id":4504,"nodeType":"Block","src":"12900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"12956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4499,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"12921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4503,"nodeType":"RevertStatement","src":"12914:48:9"}]}},{"expression":{"arguments":[{"id":4508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"12996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4506,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:9","typeDescriptions":{}}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4491,"id":4510,"nodeType":"Return","src":"12982:20:9"}]},"documentation":{"id":4485,"nodeType":"StructuredDocumentation","src":"12515:276:9","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4512,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"value","nameLocation":"12822:5:9","nodeType":"VariableDeclaration","scope":4512,"src":"12814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:9"},"returnParameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4512,"src":"12852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4489,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:9"},"scope":5606,"src":"12796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4539,"nodeType":"Block","src":"13360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"13374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4522,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4521,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:9","memberName":"max","nodeType":"MemberAccess","src":"13382:16:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4533,"nodeType":"IfStatement","src":"13370:103:9","trueBody":{"id":4532,"nodeType":"Block","src":"13400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"13456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4527,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"13421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4531,"nodeType":"RevertStatement","src":"13414:48:9"}]}},{"expression":{"arguments":[{"id":4536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"13496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4534,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:9","typeDescriptions":{}}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4519,"id":4538,"nodeType":"Return","src":"13482:20:9"}]},"documentation":{"id":4513,"nodeType":"StructuredDocumentation","src":"13015:276:9","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4540,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"value","nameLocation":"13322:5:9","nodeType":"VariableDeclaration","scope":4540,"src":"13314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4514,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:9"},"returnParameters":{"id":4519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4540,"src":"13352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4517,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:9"},"scope":5606,"src":"13296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4567,"nodeType":"Block","src":"13860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"13874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4550,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4549,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:9","memberName":"max","nodeType":"MemberAccess","src":"13882:16:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4561,"nodeType":"IfStatement","src":"13870:103:9","trueBody":{"id":4560,"nodeType":"Block","src":"13900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"13956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4555,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"13921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4559,"nodeType":"RevertStatement","src":"13914:48:9"}]}},{"expression":{"arguments":[{"id":4564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"13996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4562,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:9","typeDescriptions":{}}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4547,"id":4566,"nodeType":"Return","src":"13982:20:9"}]},"documentation":{"id":4541,"nodeType":"StructuredDocumentation","src":"13515:276:9","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4568,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"value","nameLocation":"13822:5:9","nodeType":"VariableDeclaration","scope":4568,"src":"13814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:9"},"returnParameters":{"id":4547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4568,"src":"13852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4545,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:9"},"scope":5606,"src":"13796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4595,"nodeType":"Block","src":"14360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"14374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4578,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4577,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:9","memberName":"max","nodeType":"MemberAccess","src":"14382:16:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4589,"nodeType":"IfStatement","src":"14370:103:9","trueBody":{"id":4588,"nodeType":"Block","src":"14400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"14456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4583,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"14421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4587,"nodeType":"RevertStatement","src":"14414:48:9"}]}},{"expression":{"arguments":[{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"14496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4590,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:9","typeDescriptions":{}}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4575,"id":4594,"nodeType":"Return","src":"14482:20:9"}]},"documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"14015:276:9","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4596,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"value","nameLocation":"14322:5:9","nodeType":"VariableDeclaration","scope":4596,"src":"14314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:9"},"returnParameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4596,"src":"14352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4573,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:9"},"scope":5606,"src":"14296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4623,"nodeType":"Block","src":"14860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"14874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4606,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4605,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:9","memberName":"max","nodeType":"MemberAccess","src":"14882:16:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4617,"nodeType":"IfStatement","src":"14870:103:9","trueBody":{"id":4616,"nodeType":"Block","src":"14900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"14956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4611,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"14921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4615,"nodeType":"RevertStatement","src":"14914:48:9"}]}},{"expression":{"arguments":[{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"14996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4618,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:9","typeDescriptions":{}}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4603,"id":4622,"nodeType":"Return","src":"14982:20:9"}]},"documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"14515:276:9","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4624,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"value","nameLocation":"14822:5:9","nodeType":"VariableDeclaration","scope":4624,"src":"14814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:9"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4624,"src":"14852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4601,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:9"},"scope":5606,"src":"14796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4651,"nodeType":"Block","src":"15360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"15374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4634,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:9","memberName":"max","nodeType":"MemberAccess","src":"15382:16:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4645,"nodeType":"IfStatement","src":"15370:103:9","trueBody":{"id":4644,"nodeType":"Block","src":"15400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"15456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4639,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"15421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4643,"nodeType":"RevertStatement","src":"15414:48:9"}]}},{"expression":{"arguments":[{"id":4648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"15496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4646,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:9","typeDescriptions":{}}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4631,"id":4650,"nodeType":"Return","src":"15482:20:9"}]},"documentation":{"id":4625,"nodeType":"StructuredDocumentation","src":"15015:276:9","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4652,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"value","nameLocation":"15322:5:9","nodeType":"VariableDeclaration","scope":4652,"src":"15314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:9"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4652,"src":"15352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4629,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:9"},"scope":5606,"src":"15296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4679,"nodeType":"Block","src":"15860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"15874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4662,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4661,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:9","memberName":"max","nodeType":"MemberAccess","src":"15882:16:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4673,"nodeType":"IfStatement","src":"15870:103:9","trueBody":{"id":4672,"nodeType":"Block","src":"15900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"15956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4667,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"15921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4671,"nodeType":"RevertStatement","src":"15914:48:9"}]}},{"expression":{"arguments":[{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"15996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4674,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:9","typeDescriptions":{}}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4659,"id":4678,"nodeType":"Return","src":"15982:20:9"}]},"documentation":{"id":4653,"nodeType":"StructuredDocumentation","src":"15515:276:9","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4680,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"value","nameLocation":"15822:5:9","nodeType":"VariableDeclaration","scope":4680,"src":"15814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:9"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4680,"src":"15852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4657,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:9"},"scope":5606,"src":"15796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4707,"nodeType":"Block","src":"16360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"16374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4690,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:9","memberName":"max","nodeType":"MemberAccess","src":"16382:16:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4701,"nodeType":"IfStatement","src":"16370:103:9","trueBody":{"id":4700,"nodeType":"Block","src":"16400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"16456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4695,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"16421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4699,"nodeType":"RevertStatement","src":"16414:48:9"}]}},{"expression":{"arguments":[{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"16496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4702,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:9","typeDescriptions":{}}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4687,"id":4706,"nodeType":"Return","src":"16482:20:9"}]},"documentation":{"id":4681,"nodeType":"StructuredDocumentation","src":"16015:276:9","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4708,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4683,"mutability":"mutable","name":"value","nameLocation":"16322:5:9","nodeType":"VariableDeclaration","scope":4708,"src":"16314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:9"},"returnParameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4708,"src":"16352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4685,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:9"},"scope":5606,"src":"16296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4735,"nodeType":"Block","src":"16854:146:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"16868:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4718,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:9","memberName":"max","nodeType":"MemberAccess","src":"16876:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4729,"nodeType":"IfStatement","src":"16864:101:9","trueBody":{"id":4728,"nodeType":"Block","src":"16893:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"16948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4723,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"16914:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4727,"nodeType":"RevertStatement","src":"16907:47:9"}]}},{"expression":{"arguments":[{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"16987:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4730,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:9","typeDescriptions":{}}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4715,"id":4734,"nodeType":"Return","src":"16974:19:9"}]},"documentation":{"id":4709,"nodeType":"StructuredDocumentation","src":"16515:272:9","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4736,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:9","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"value","nameLocation":"16817:5:9","nodeType":"VariableDeclaration","scope":4736,"src":"16809:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:9"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4736,"src":"16847:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4713,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:9"},"scope":5606,"src":"16792:208:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4758,"nodeType":"Block","src":"17236:128:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"17250:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4752,"nodeType":"IfStatement","src":"17246:81:9","trueBody":{"id":4751,"nodeType":"Block","src":"17261:66:9","statements":[{"errorCall":{"arguments":[{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"17310:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4747,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"17282:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4750,"nodeType":"RevertStatement","src":"17275:41:9"}]}},{"expression":{"arguments":[{"id":4755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"17351:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:9","typeDescriptions":{}}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4743,"id":4757,"nodeType":"Return","src":"17336:21:9"}]},"documentation":{"id":4737,"nodeType":"StructuredDocumentation","src":"17006:160:9","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:9","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"value","nameLocation":"17197:5:9","nodeType":"VariableDeclaration","scope":4759,"src":"17190:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4738,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:9"},"returnParameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4759,"src":"17227:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:9"},"scope":5606,"src":"17171:193:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"17761:150:9","statements":[{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"17771:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"17791:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4768,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:9","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4773,"nodeType":"ExpressionStatement","src":"17771:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"17811:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"17825:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4783,"nodeType":"IfStatement","src":"17807:98:9","trueBody":{"id":4782,"nodeType":"Block","src":"17832:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"17888:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4777,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"17853:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4781,"nodeType":"RevertStatement","src":"17846:48:9"}]}}]},"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"17370:312:9","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:9","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"value","nameLocation":"17712:5:9","nodeType":"VariableDeclaration","scope":4785,"src":"17705:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4761,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:9"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:9","nodeType":"VariableDeclaration","scope":4785,"src":"17742:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4764,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:9"},"scope":5606,"src":"17687:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4810,"nodeType":"Block","src":"18308:150:9","statements":[{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4793,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"18318:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"18338:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4794,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:9","typeDescriptions":{}}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4799,"nodeType":"ExpressionStatement","src":"18318:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"18358:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"18372:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4809,"nodeType":"IfStatement","src":"18354:98:9","trueBody":{"id":4808,"nodeType":"Block","src":"18379:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"18435:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4803,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"18400:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4807,"nodeType":"RevertStatement","src":"18393:48:9"}]}}]},"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"17917:312:9","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4811,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:9","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"value","nameLocation":"18259:5:9","nodeType":"VariableDeclaration","scope":4811,"src":"18252:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4787,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:9"},"returnParameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:9","nodeType":"VariableDeclaration","scope":4811,"src":"18289:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4790,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:9"},"scope":5606,"src":"18234:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4836,"nodeType":"Block","src":"18855:150:9","statements":[{"expression":{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"18865:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"18885:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4820,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:9","typeDescriptions":{}}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4825,"nodeType":"ExpressionStatement","src":"18865:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"18905:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"18919:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4835,"nodeType":"IfStatement","src":"18901:98:9","trueBody":{"id":4834,"nodeType":"Block","src":"18926:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"18982:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4829,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"18947:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4833,"nodeType":"RevertStatement","src":"18940:48:9"}]}}]},"documentation":{"id":4812,"nodeType":"StructuredDocumentation","src":"18464:312:9","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4837,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:9","nodeType":"FunctionDefinition","parameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"value","nameLocation":"18806:5:9","nodeType":"VariableDeclaration","scope":4837,"src":"18799:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4813,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:9"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:9","nodeType":"VariableDeclaration","scope":4837,"src":"18836:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4816,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:9"},"scope":5606,"src":"18781:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4862,"nodeType":"Block","src":"19402:150:9","statements":[{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"19412:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"19432:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4846,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:9","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4851,"nodeType":"ExpressionStatement","src":"19412:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"19452:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"19466:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4861,"nodeType":"IfStatement","src":"19448:98:9","trueBody":{"id":4860,"nodeType":"Block","src":"19473:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"19529:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4855,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"19494:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4859,"nodeType":"RevertStatement","src":"19487:48:9"}]}}]},"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"19011:312:9","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:9","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"value","nameLocation":"19353:5:9","nodeType":"VariableDeclaration","scope":4863,"src":"19346:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4839,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:9"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:9","nodeType":"VariableDeclaration","scope":4863,"src":"19383:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4842,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:9"},"scope":5606,"src":"19328:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4888,"nodeType":"Block","src":"19949:150:9","statements":[{"expression":{"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"19959:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"19979:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4872,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:9","typeDescriptions":{}}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4877,"nodeType":"ExpressionStatement","src":"19959:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"19999:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"20013:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"19995:98:9","trueBody":{"id":4886,"nodeType":"Block","src":"20020:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"20076:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4881,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"20041:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4885,"nodeType":"RevertStatement","src":"20034:48:9"}]}}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"19558:312:9","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4889,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:9","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"value","nameLocation":"19900:5:9","nodeType":"VariableDeclaration","scope":4889,"src":"19893:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4865,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:9"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:9","nodeType":"VariableDeclaration","scope":4889,"src":"19930:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4868,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:9"},"scope":5606,"src":"19875:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4914,"nodeType":"Block","src":"20496:150:9","statements":[{"expression":{"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4897,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"20506:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"20526:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4898,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:9","typeDescriptions":{}}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4903,"nodeType":"ExpressionStatement","src":"20506:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"20546:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"20560:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4913,"nodeType":"IfStatement","src":"20542:98:9","trueBody":{"id":4912,"nodeType":"Block","src":"20567:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"20623:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4907,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"20588:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4911,"nodeType":"RevertStatement","src":"20581:48:9"}]}}]},"documentation":{"id":4890,"nodeType":"StructuredDocumentation","src":"20105:312:9","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4915,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:9","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"value","nameLocation":"20447:5:9","nodeType":"VariableDeclaration","scope":4915,"src":"20440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4891,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:9"},"returnParameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:9","nodeType":"VariableDeclaration","scope":4915,"src":"20477:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4894,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:9"},"scope":5606,"src":"20422:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4940,"nodeType":"Block","src":"21043:150:9","statements":[{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4923,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"21053:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"21073:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4924,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:9","typeDescriptions":{}}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4929,"nodeType":"ExpressionStatement","src":"21053:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"21093:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"21107:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4939,"nodeType":"IfStatement","src":"21089:98:9","trueBody":{"id":4938,"nodeType":"Block","src":"21114:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"21170:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4933,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"21135:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4937,"nodeType":"RevertStatement","src":"21128:48:9"}]}}]},"documentation":{"id":4916,"nodeType":"StructuredDocumentation","src":"20652:312:9","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4941,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:9","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"value","nameLocation":"20994:5:9","nodeType":"VariableDeclaration","scope":4941,"src":"20987:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4917,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:9"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:9","nodeType":"VariableDeclaration","scope":4941,"src":"21024:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4920,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:9"},"scope":5606,"src":"20969:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"21590:150:9","statements":[{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"21600:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"21620:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4950,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:9","typeDescriptions":{}}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4955,"nodeType":"ExpressionStatement","src":"21600:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"21640:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"21654:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4965,"nodeType":"IfStatement","src":"21636:98:9","trueBody":{"id":4964,"nodeType":"Block","src":"21661:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"21717:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4959,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"21682:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4963,"nodeType":"RevertStatement","src":"21675:48:9"}]}}]},"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"21199:312:9","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:9","nodeType":"FunctionDefinition","parameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"value","nameLocation":"21541:5:9","nodeType":"VariableDeclaration","scope":4967,"src":"21534:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4943,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:9"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:9","nodeType":"VariableDeclaration","scope":4967,"src":"21571:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4946,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:9"},"scope":5606,"src":"21516:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"22137:150:9","statements":[{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"22147:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"22167:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4976,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:9","typeDescriptions":{}}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4981,"nodeType":"ExpressionStatement","src":"22147:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"22187:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"22201:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"22183:98:9","trueBody":{"id":4990,"nodeType":"Block","src":"22208:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"22264:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4985,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"22229:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4989,"nodeType":"RevertStatement","src":"22222:48:9"}]}}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"21746:312:9","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:9","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"22088:5:9","nodeType":"VariableDeclaration","scope":4993,"src":"22081:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4969,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:9"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:9","nodeType":"VariableDeclaration","scope":4993,"src":"22118:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4972,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:9"},"scope":5606,"src":"22063:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5018,"nodeType":"Block","src":"22684:150:9","statements":[{"expression":{"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"22694:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"22714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5002,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:9","typeDescriptions":{}}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5007,"nodeType":"ExpressionStatement","src":"22694:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"22734:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"22748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"22730:98:9","trueBody":{"id":5016,"nodeType":"Block","src":"22755:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"22811:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5011,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"22776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5015,"nodeType":"RevertStatement","src":"22769:48:9"}]}}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"22293:312:9","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:9","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"value","nameLocation":"22635:5:9","nodeType":"VariableDeclaration","scope":5019,"src":"22628:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4995,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:9"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:9","nodeType":"VariableDeclaration","scope":5019,"src":"22665:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4998,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:9"},"scope":5606,"src":"22610:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5044,"nodeType":"Block","src":"23231:150:9","statements":[{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"23241:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"23261:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5028,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:9","typeDescriptions":{}}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5033,"nodeType":"ExpressionStatement","src":"23241:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"23281:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"23295:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"23277:98:9","trueBody":{"id":5042,"nodeType":"Block","src":"23302:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"23358:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5037,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"23323:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5041,"nodeType":"RevertStatement","src":"23316:48:9"}]}}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"22840:312:9","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:9","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"23182:5:9","nodeType":"VariableDeclaration","scope":5045,"src":"23175:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5021,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:9"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:9","nodeType":"VariableDeclaration","scope":5045,"src":"23212:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5024,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:9"},"scope":5606,"src":"23157:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5070,"nodeType":"Block","src":"23778:150:9","statements":[{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"23788:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"23808:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5054,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:9","typeDescriptions":{}}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5059,"nodeType":"ExpressionStatement","src":"23788:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"23828:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"23842:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"23824:98:9","trueBody":{"id":5068,"nodeType":"Block","src":"23849:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"23905:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5063,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"23870:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5067,"nodeType":"RevertStatement","src":"23863:48:9"}]}}]},"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"23387:312:9","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:9","nodeType":"FunctionDefinition","parameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"value","nameLocation":"23729:5:9","nodeType":"VariableDeclaration","scope":5071,"src":"23722:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5047,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:9"},"returnParameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:9","nodeType":"VariableDeclaration","scope":5071,"src":"23759:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5050,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:9"},"scope":5606,"src":"23704:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"24325:150:9","statements":[{"expression":{"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"24335:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"24355:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5080,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:9","typeDescriptions":{}}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5085,"nodeType":"ExpressionStatement","src":"24335:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"24375:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"24389:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5095,"nodeType":"IfStatement","src":"24371:98:9","trueBody":{"id":5094,"nodeType":"Block","src":"24396:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"24452:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5089,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"24417:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5093,"nodeType":"RevertStatement","src":"24410:48:9"}]}}]},"documentation":{"id":5072,"nodeType":"StructuredDocumentation","src":"23934:312:9","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:9","nodeType":"FunctionDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"value","nameLocation":"24276:5:9","nodeType":"VariableDeclaration","scope":5097,"src":"24269:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5073,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:9"},"returnParameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:9","nodeType":"VariableDeclaration","scope":5097,"src":"24306:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5076,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:9"},"scope":5606,"src":"24251:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5122,"nodeType":"Block","src":"24872:150:9","statements":[{"expression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"24882:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"24902:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5106,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:9","typeDescriptions":{}}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5111,"nodeType":"ExpressionStatement","src":"24882:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"24922:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"24936:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5121,"nodeType":"IfStatement","src":"24918:98:9","trueBody":{"id":5120,"nodeType":"Block","src":"24943:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"24999:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5115,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"24964:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5119,"nodeType":"RevertStatement","src":"24957:48:9"}]}}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"24481:312:9","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5123,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:9","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"value","nameLocation":"24823:5:9","nodeType":"VariableDeclaration","scope":5123,"src":"24816:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5099,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:9"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:9","nodeType":"VariableDeclaration","scope":5123,"src":"24853:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5102,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:9"},"scope":5606,"src":"24798:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5148,"nodeType":"Block","src":"25419:150:9","statements":[{"expression":{"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"25429:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"25449:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5132,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:9","typeDescriptions":{}}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5137,"nodeType":"ExpressionStatement","src":"25429:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"25469:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"25483:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5147,"nodeType":"IfStatement","src":"25465:98:9","trueBody":{"id":5146,"nodeType":"Block","src":"25490:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"25546:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5141,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"25511:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5145,"nodeType":"RevertStatement","src":"25504:48:9"}]}}]},"documentation":{"id":5124,"nodeType":"StructuredDocumentation","src":"25028:312:9","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5149,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:9","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"value","nameLocation":"25370:5:9","nodeType":"VariableDeclaration","scope":5149,"src":"25363:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5125,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:9"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:9","nodeType":"VariableDeclaration","scope":5149,"src":"25400:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5128,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:9"},"scope":5606,"src":"25345:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"25966:150:9","statements":[{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"25976:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"25996:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5158,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:9","typeDescriptions":{}}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5163,"nodeType":"ExpressionStatement","src":"25976:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"26016:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"26030:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5173,"nodeType":"IfStatement","src":"26012:98:9","trueBody":{"id":5172,"nodeType":"Block","src":"26037:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"26093:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"26058:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5171,"nodeType":"RevertStatement","src":"26051:48:9"}]}}]},"documentation":{"id":5150,"nodeType":"StructuredDocumentation","src":"25575:312:9","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:9","nodeType":"FunctionDefinition","parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"value","nameLocation":"25917:5:9","nodeType":"VariableDeclaration","scope":5175,"src":"25910:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5151,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:9"},"returnParameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:9","nodeType":"VariableDeclaration","scope":5175,"src":"25947:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5154,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:9"},"scope":5606,"src":"25892:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5200,"nodeType":"Block","src":"26513:150:9","statements":[{"expression":{"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"26523:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"26543:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5184,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:9","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5189,"nodeType":"ExpressionStatement","src":"26523:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"26563:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"26577:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"26559:98:9","trueBody":{"id":5198,"nodeType":"Block","src":"26584:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"26640:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"26605:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5197,"nodeType":"RevertStatement","src":"26598:48:9"}]}}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"26122:312:9","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:9","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"value","nameLocation":"26464:5:9","nodeType":"VariableDeclaration","scope":5201,"src":"26457:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5177,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:9"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:9","nodeType":"VariableDeclaration","scope":5201,"src":"26494:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5180,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:9"},"scope":5606,"src":"26439:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5226,"nodeType":"Block","src":"27060:150:9","statements":[{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"27070:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"27090:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5210,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:9","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5215,"nodeType":"ExpressionStatement","src":"27070:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"27110:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"27124:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"27106:98:9","trueBody":{"id":5224,"nodeType":"Block","src":"27131:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"27187:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"27152:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5223,"nodeType":"RevertStatement","src":"27145:48:9"}]}}]},"documentation":{"id":5202,"nodeType":"StructuredDocumentation","src":"26669:312:9","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:9","nodeType":"FunctionDefinition","parameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"value","nameLocation":"27011:5:9","nodeType":"VariableDeclaration","scope":5227,"src":"27004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5203,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:9"},"returnParameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:9","nodeType":"VariableDeclaration","scope":5227,"src":"27041:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5206,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:9"},"scope":5606,"src":"26986:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5252,"nodeType":"Block","src":"27607:150:9","statements":[{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"27617:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"27637:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5236,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:9","typeDescriptions":{}}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5241,"nodeType":"ExpressionStatement","src":"27617:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"27657:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"27671:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5251,"nodeType":"IfStatement","src":"27653:98:9","trueBody":{"id":5250,"nodeType":"Block","src":"27678:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"27734:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"27699:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5249,"nodeType":"RevertStatement","src":"27692:48:9"}]}}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"27216:312:9","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:9","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"value","nameLocation":"27558:5:9","nodeType":"VariableDeclaration","scope":5253,"src":"27551:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5229,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:9"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:9","nodeType":"VariableDeclaration","scope":5253,"src":"27588:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5232,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:9"},"scope":5606,"src":"27533:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"28147:148:9","statements":[{"expression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"28157:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"28176:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5262,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:9","typeDescriptions":{}}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5267,"nodeType":"ExpressionStatement","src":"28157:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"28196:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"28210:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5277,"nodeType":"IfStatement","src":"28192:97:9","trueBody":{"id":5276,"nodeType":"Block","src":"28217:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"28272:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"28238:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5275,"nodeType":"RevertStatement","src":"28231:47:9"}]}}]},"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"27763:307:9","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:9","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"28099:5:9","nodeType":"VariableDeclaration","scope":5279,"src":"28092:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5255,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:9"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:9","nodeType":"VariableDeclaration","scope":5279,"src":"28129:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5258,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:9"},"scope":5606,"src":"28075:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5304,"nodeType":"Block","src":"28685:148:9","statements":[{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"28695:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"28714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5288,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:9","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5293,"nodeType":"ExpressionStatement","src":"28695:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"28734:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"28748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5303,"nodeType":"IfStatement","src":"28730:97:9","trueBody":{"id":5302,"nodeType":"Block","src":"28755:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"28810:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"28776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5301,"nodeType":"RevertStatement","src":"28769:47:9"}]}}]},"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"28301:307:9","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:9","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"value","nameLocation":"28637:5:9","nodeType":"VariableDeclaration","scope":5305,"src":"28630:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5281,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:9"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:9","nodeType":"VariableDeclaration","scope":5305,"src":"28667:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5284,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:9"},"scope":5606,"src":"28613:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5330,"nodeType":"Block","src":"29223:148:9","statements":[{"expression":{"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"29233:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"29252:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5314,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:9","typeDescriptions":{}}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5319,"nodeType":"ExpressionStatement","src":"29233:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"29272:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"29286:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5329,"nodeType":"IfStatement","src":"29268:97:9","trueBody":{"id":5328,"nodeType":"Block","src":"29293:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"29348:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"29314:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5327,"nodeType":"RevertStatement","src":"29307:47:9"}]}}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"28839:307:9","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:9","nodeType":"FunctionDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"value","nameLocation":"29175:5:9","nodeType":"VariableDeclaration","scope":5331,"src":"29168:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5307,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:9"},"returnParameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:9","nodeType":"VariableDeclaration","scope":5331,"src":"29205:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5310,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:9"},"scope":5606,"src":"29151:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"29761:148:9","statements":[{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"29771:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"29790:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5340,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:9","typeDescriptions":{}}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5345,"nodeType":"ExpressionStatement","src":"29771:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"29810:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"29824:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"29806:97:9","trueBody":{"id":5354,"nodeType":"Block","src":"29831:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"29886:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"29852:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5353,"nodeType":"RevertStatement","src":"29845:47:9"}]}}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"29377:307:9","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:9","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"29713:5:9","nodeType":"VariableDeclaration","scope":5357,"src":"29706:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5333,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:9"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:9","nodeType":"VariableDeclaration","scope":5357,"src":"29743:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5336,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:9"},"scope":5606,"src":"29689:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"30299:148:9","statements":[{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"30309:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"30328:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5366,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:9","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5371,"nodeType":"ExpressionStatement","src":"30309:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"30348:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"30362:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5381,"nodeType":"IfStatement","src":"30344:97:9","trueBody":{"id":5380,"nodeType":"Block","src":"30369:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"30424:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"30390:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5379,"nodeType":"RevertStatement","src":"30383:47:9"}]}}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"29915:307:9","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:9","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"30251:5:9","nodeType":"VariableDeclaration","scope":5383,"src":"30244:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5359,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:9"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:9","nodeType":"VariableDeclaration","scope":5383,"src":"30281:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5362,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:9"},"scope":5606,"src":"30227:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5408,"nodeType":"Block","src":"30837:148:9","statements":[{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"30847:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"30866:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5392,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:9","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5397,"nodeType":"ExpressionStatement","src":"30847:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"30886:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"30900:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"30882:97:9","trueBody":{"id":5406,"nodeType":"Block","src":"30907:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"30962:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"30928:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5405,"nodeType":"RevertStatement","src":"30921:47:9"}]}}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"30453:307:9","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:9","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"value","nameLocation":"30789:5:9","nodeType":"VariableDeclaration","scope":5409,"src":"30782:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5385,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:9"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:9","nodeType":"VariableDeclaration","scope":5409,"src":"30819:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5388,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:9"},"scope":5606,"src":"30765:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5434,"nodeType":"Block","src":"31375:148:9","statements":[{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"31385:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"31404:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5418,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:9","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5423,"nodeType":"ExpressionStatement","src":"31385:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"31424:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"31438:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"31420:97:9","trueBody":{"id":5432,"nodeType":"Block","src":"31445:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"31500:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"31466:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5431,"nodeType":"RevertStatement","src":"31459:47:9"}]}}]},"documentation":{"id":5410,"nodeType":"StructuredDocumentation","src":"30991:307:9","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:9","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"value","nameLocation":"31327:5:9","nodeType":"VariableDeclaration","scope":5435,"src":"31320:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5411,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:9"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:9","nodeType":"VariableDeclaration","scope":5435,"src":"31357:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5414,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:9"},"scope":5606,"src":"31303:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"31913:148:9","statements":[{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"31923:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"31942:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5444,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:9","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5449,"nodeType":"ExpressionStatement","src":"31923:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"31962:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"31976:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"31958:97:9","trueBody":{"id":5458,"nodeType":"Block","src":"31983:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"32038:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"32004:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5457,"nodeType":"RevertStatement","src":"31997:47:9"}]}}]},"documentation":{"id":5436,"nodeType":"StructuredDocumentation","src":"31529:307:9","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:9","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"value","nameLocation":"31865:5:9","nodeType":"VariableDeclaration","scope":5461,"src":"31858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5437,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:9"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:9","nodeType":"VariableDeclaration","scope":5461,"src":"31895:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5440,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:9"},"scope":5606,"src":"31841:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"32451:148:9","statements":[{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"32461:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"32480:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5470,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:9","typeDescriptions":{}}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5475,"nodeType":"ExpressionStatement","src":"32461:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"32500:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"32514:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5485,"nodeType":"IfStatement","src":"32496:97:9","trueBody":{"id":5484,"nodeType":"Block","src":"32521:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"32576:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"32542:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5483,"nodeType":"RevertStatement","src":"32535:47:9"}]}}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"32067:307:9","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:9","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"32403:5:9","nodeType":"VariableDeclaration","scope":5487,"src":"32396:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5463,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:9"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:9","nodeType":"VariableDeclaration","scope":5487,"src":"32433:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5466,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:9"},"scope":5606,"src":"32379:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"32989:148:9","statements":[{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"32999:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"33018:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5496,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:9","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5501,"nodeType":"ExpressionStatement","src":"32999:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"33038:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"33052:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5511,"nodeType":"IfStatement","src":"33034:97:9","trueBody":{"id":5510,"nodeType":"Block","src":"33059:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"33114:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"33080:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5509,"nodeType":"RevertStatement","src":"33073:47:9"}]}}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"32605:307:9","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:9","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"value","nameLocation":"32941:5:9","nodeType":"VariableDeclaration","scope":5513,"src":"32934:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5489,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:9"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:9","nodeType":"VariableDeclaration","scope":5513,"src":"32971:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5492,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:9"},"scope":5606,"src":"32917:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"33527:148:9","statements":[{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"33537:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"33556:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5522,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:9","typeDescriptions":{}}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5527,"nodeType":"ExpressionStatement","src":"33537:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"33576:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"33590:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"33572:97:9","trueBody":{"id":5536,"nodeType":"Block","src":"33597:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"33652:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"33618:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5535,"nodeType":"RevertStatement","src":"33611:47:9"}]}}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"33143:307:9","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:9","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"33479:5:9","nodeType":"VariableDeclaration","scope":5539,"src":"33472:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5515,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:9"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:9","nodeType":"VariableDeclaration","scope":5539,"src":"33509:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5518,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:9"},"scope":5606,"src":"33455:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"34058:146:9","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"34068:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"34086:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5548,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:9","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5553,"nodeType":"ExpressionStatement","src":"34068:24:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"34106:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"34120:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5563,"nodeType":"IfStatement","src":"34102:96:9","trueBody":{"id":5562,"nodeType":"Block","src":"34127:71:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"34181:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"34148:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5561,"nodeType":"RevertStatement","src":"34141:46:9"}]}}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"33681:302:9","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:9","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"34011:5:9","nodeType":"VariableDeclaration","scope":5565,"src":"34004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5541,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:9"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:9","nodeType":"VariableDeclaration","scope":5565,"src":"34041:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5544,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:9"},"scope":5606,"src":"33988:216:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"34444:250:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"34557:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5577,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:9","memberName":"max","nodeType":"MemberAccess","src":"34573:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:9","typeDescriptions":{}}},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"34553:105:9","trueBody":{"id":5587,"nodeType":"Block","src":"34592:66:9","statements":[{"errorCall":{"arguments":[{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"34641:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5583,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"34613:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5586,"nodeType":"RevertStatement","src":"34606:41:9"}]}},{"expression":{"arguments":[{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"34681:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5589,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:9","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5572,"id":5593,"nodeType":"Return","src":"34667:20:9"}]},"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"34210:165:9","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:9","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"value","nameLocation":"34406:5:9","nodeType":"VariableDeclaration","scope":5595,"src":"34398:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5567,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:9"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5595,"src":"34436:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5570,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:9"},"scope":5606,"src":"34380:314:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5604,"nodeType":"Block","src":"34853:87:9","statements":[{"AST":{"nativeSrc":"34888:46:9","nodeType":"YulBlock","src":"34888:46:9","statements":[{"nativeSrc":"34902:22:9","nodeType":"YulAssignment","src":"34902:22:9","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:9","nodeType":"YulIdentifier","src":"34921:1:9"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:9","nodeType":"YulIdentifier","src":"34914:6:9"},"nativeSrc":"34914:9:9","nodeType":"YulFunctionCall","src":"34914:9:9"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:9","nodeType":"YulIdentifier","src":"34907:6:9"},"nativeSrc":"34907:17:9","nodeType":"YulFunctionCall","src":"34907:17:9"},"variableNames":[{"name":"u","nativeSrc":"34902:1:9","nodeType":"YulIdentifier","src":"34902:1:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5598,"isOffset":false,"isSlot":false,"src":"34921:1:9","valueSize":1},{"declaration":5601,"isOffset":false,"isSlot":false,"src":"34902:1:9","valueSize":1}],"flags":["memory-safe"],"id":5603,"nodeType":"InlineAssembly","src":"34863:71:9"}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"34700:90:9","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5605,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:9","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"b","nameLocation":"34816:1:9","nodeType":"VariableDeclaration","scope":5605,"src":"34811:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5597,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:9"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"u","nameLocation":"34850:1:9","nodeType":"VariableDeclaration","scope":5605,"src":"34842:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5600,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:9"},"scope":5606,"src":"34795:145:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5607,"src":"769:34173:9","usedErrors":[3851,3856,3863,3868],"usedEvents":[]}],"src":"192:34751:9"},"id":9},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5606],"SignedMath":[5750]},"id":5751,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5751,"sourceUnit":5607,"src":"135:40:10","symbolAliases":[{"foreign":{"id":5609,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"143:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5611,"nodeType":"StructuredDocumentation","src":"177:80:10","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5750,"linearizedBaseContracts":[5750],"name":"SignedMath","nameLocation":"266:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":5640,"nodeType":"Block","src":"746:215:10","statements":[{"id":5639,"nodeType":"UncheckedBlock","src":"756:199:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"894:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"900:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"904:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5632,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"932:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5630,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"916:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5606_$","typeString":"type(library SafeCast)"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5605,"src":"916:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5628,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:10","typeDescriptions":{}}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5622,"id":5638,"nodeType":"Return","src":"887:57:10"}]}]},"documentation":{"id":5612,"nodeType":"StructuredDocumentation","src":"283:374:10","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5641,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:10","nodeType":"FunctionDefinition","parameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"condition","nameLocation":"684:9:10","nodeType":"VariableDeclaration","scope":5641,"src":"679:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5613,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5616,"mutability":"mutable","name":"a","nameLocation":"702:1:10","nodeType":"VariableDeclaration","scope":5641,"src":"695:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5615,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5618,"mutability":"mutable","name":"b","nameLocation":"712:1:10","nodeType":"VariableDeclaration","scope":5641,"src":"705:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5617,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:10"},"returnParameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5641,"src":"738:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5620,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:10"},"scope":5750,"src":"662:299:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5659,"nodeType":"Block","src":"1102:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"1127:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"1131:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"1134:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"1137:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5651,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"1119:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5650,"id":5658,"nodeType":"Return","src":"1112:27:10"}]},"documentation":{"id":5642,"nodeType":"StructuredDocumentation","src":"967:66:10","text":" @dev Returns the largest of two signed numbers."},"id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:10","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"a","nameLocation":"1058:1:10","nodeType":"VariableDeclaration","scope":5660,"src":"1051:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5643,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5646,"mutability":"mutable","name":"b","nameLocation":"1068:1:10","nodeType":"VariableDeclaration","scope":5660,"src":"1061:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5645,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:10"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5660,"src":"1094:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5648,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:10"},"scope":5750,"src":"1038:108:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"1288:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"1313:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5672,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"1317:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"1320:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5675,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"1323:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5670,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"1305:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5669,"id":5677,"nodeType":"Return","src":"1298:27:10"}]},"documentation":{"id":5661,"nodeType":"StructuredDocumentation","src":"1152:67:10","text":" @dev Returns the smallest of two signed numbers."},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:10","nodeType":"FunctionDefinition","parameters":{"id":5666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"a","nameLocation":"1244:1:10","nodeType":"VariableDeclaration","scope":5679,"src":"1237:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5662,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5665,"mutability":"mutable","name":"b","nameLocation":"1254:1:10","nodeType":"VariableDeclaration","scope":5679,"src":"1247:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5664,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:10"},"returnParameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"1280:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5667,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:10"},"scope":5750,"src":"1224:108:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5722,"nodeType":"Block","src":"1537:162:10","statements":[{"assignments":[5690],"declarations":[{"constant":false,"id":5690,"mutability":"mutable","name":"x","nameLocation":"1606:1:10","nodeType":"VariableDeclaration","scope":5722,"src":"1599:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5689,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5703,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"1611:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5692,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"1615:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"1622:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5696,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"1626:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"1651:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5709,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"1671:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:10","typeDescriptions":{}}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5705,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:10","typeDescriptions":{}}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"1685:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"1689:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5688,"id":5721,"nodeType":"Return","src":"1644:48:10"}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"1338:126:10","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:10","nodeType":"FunctionDefinition","parameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"a","nameLocation":"1493:1:10","nodeType":"VariableDeclaration","scope":5723,"src":"1486:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5681,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5684,"mutability":"mutable","name":"b","nameLocation":"1503:1:10","nodeType":"VariableDeclaration","scope":5723,"src":"1496:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5683,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:10"},"returnParameters":{"id":5688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5723,"src":"1529:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5686,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:10"},"scope":5750,"src":"1469:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5748,"nodeType":"Block","src":"1843:767:10","statements":[{"id":5747,"nodeType":"UncheckedBlock","src":"1853:751:10","statements":[{"assignments":[5732],"declarations":[{"constant":false,"id":5732,"mutability":"mutable","name":"mask","nameLocation":"2424:4:10","nodeType":"VariableDeclaration","scope":5747,"src":"2417:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5731,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5736,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5733,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"2431:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"2576:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5740,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"2580:4:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5743,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"2588:4:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:10","typeDescriptions":{}}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5730,"id":5746,"nodeType":"Return","src":"2560:33:10"}]}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"1705:78:10","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5749,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:10","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"n","nameLocation":"1808:1:10","nodeType":"VariableDeclaration","scope":5749,"src":"1801:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5725,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:10"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5749,"src":"1834:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:10"},"scope":5750,"src":"1788:822:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5751,"src":"258:2354:10","usedErrors":[],"usedEvents":[]}],"src":"109:2504:10"},"id":10},"contracts/MissionFactory.sol":{"ast":{"absolutePath":"contracts/MissionFactory.sol","exportedSymbols":{"Clones":[546],"Context":[576],"Create2":[675],"Errors":[697],"Limit":[5783],"Math":[3841],"Mission":[10581],"MissionFactory":[8483],"MissionType":[5768],"Ownable":[147],"ReentrancyGuard":[818],"SafeCast":[5606],"SignedMath":[5750],"Status":[5778],"Strings":[2220]},"id":10582,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5752,"literals":["solidity","^","0.8",".30"],"nodeType":"PragmaDirective","src":"3720:24:11"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10582,"sourceUnit":148,"src":"3897:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":5754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10582,"sourceUnit":547,"src":"3951:50:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":5755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10582,"sourceUnit":819,"src":"4003:59:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":5756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10582,"sourceUnit":2221,"src":"4064:51:11","symbolAliases":[],"unitAlias":""},{"global":false,"id":5759,"libraryName":{"id":5757,"name":"Strings","nameLocations":["4123:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2220,"src":"4123:7:11"},"nodeType":"UsingForDirective","src":"4117:26:11","typeName":{"id":5758,"name":"uint256","nodeType":"ElementaryTypeName","src":"4135:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"MissionType","documentation":{"id":5760,"nodeType":"StructuredDocumentation","src":"4286:268:11","text":" @dev Enum to represent the type of mission.\n The mission can be one of several types: Custom, Hourly, QuarterDaily, BiDaily, Daily, Weekly, or Monthly.\n The default use for each type is defined in the comments but is set in the dApp UI and can vary."},"id":5768,"members":[{"id":5761,"name":"Custom","nameLocation":"4580:6:11","nodeType":"EnumValue","src":"4580:6:11"},{"id":5762,"name":"Hourly","nameLocation":"4638:6:11","nodeType":"EnumValue","src":"4638:6:11"},{"id":5763,"name":"QuarterDaily","nameLocation":"4726:12:11","nodeType":"EnumValue","src":"4726:12:11"},{"id":5764,"name":"BiDaily","nameLocation":"4814:7:11","nodeType":"EnumValue","src":"4814:7:11"},{"id":5765,"name":"Daily","nameLocation":"4902:5:11","nodeType":"EnumValue","src":"4902:5:11"},{"id":5766,"name":"Weekly","nameLocation":"4990:6:11","nodeType":"EnumValue","src":"4990:6:11"},{"id":5767,"name":"Monthly","nameLocation":"5078:7:11","nodeType":"EnumValue","src":"5078:7:11"}],"name":"MissionType","nameLocation":"4561:11:11","nodeType":"EnumDefinition","src":"4556:607:11"},{"canonicalName":"Status","documentation":{"id":5769,"nodeType":"StructuredDocumentation","src":"5167:163:11","text":" @dev Enum to represent the status of a mission.\n The mission can be in one of several states: Pending, Enrolling, Active, Paused, Ended, or Failed."},"id":5778,"members":[{"id":5770,"name":"Pending","nameLocation":"5355:7:11","nodeType":"EnumValue","src":"5355:7:11"},{"id":5771,"name":"Enrolling","nameLocation":"5420:9:11","nodeType":"EnumValue","src":"5420:9:11"},{"id":5772,"name":"Arming","nameLocation":"5504:6:11","nodeType":"EnumValue","src":"5504:6:11"},{"id":5773,"name":"Active","nameLocation":"5564:6:11","nodeType":"EnumValue","src":"5564:6:11"},{"id":5774,"name":"Paused","nameLocation":"5644:6:11","nodeType":"EnumValue","src":"5644:6:11"},{"id":5775,"name":"PartlySuccess","nameLocation":"5719:13:11","nodeType":"EnumValue","src":"5719:13:11"},{"id":5776,"name":"Success","nameLocation":"5820:7:11","nodeType":"EnumValue","src":"5820:7:11"},{"id":5777,"name":"Failed","nameLocation":"5900:6:11","nodeType":"EnumValue","src":"5900:6:11"}],"name":"Status","nameLocation":"5337:6:11","nodeType":"EnumDefinition","src":"5332:655:11"},{"canonicalName":"Limit","documentation":{"id":5779,"nodeType":"StructuredDocumentation","src":"5991:120:11","text":" @dev Enum to represent the enrollment limits for a mission.\n The limits can be None, Weekly, or Monthly."},"id":5783,"members":[{"id":5780,"name":"None","nameLocation":"6137:4:11","nodeType":"EnumValue","src":"6137:4:11"},{"id":5781,"name":"Weekly","nameLocation":"6175:6:11","nodeType":"EnumValue","src":"6175:6:11"},{"id":5782,"name":"Monthly","nameLocation":"6217:7:11","nodeType":"EnumValue","src":"6217:7:11"}],"name":"Limit","nameLocation":"6118:5:11","nodeType":"EnumDefinition","src":"6113:144:11"},{"abstract":false,"baseContracts":[{"baseName":{"id":5784,"name":"Ownable","nameLocations":["6407:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"6407:7:11"},"id":5785,"nodeType":"InheritanceSpecifier","src":"6407:7:11"},{"baseName":{"id":5786,"name":"ReentrancyGuard","nameLocations":["6416:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":818,"src":"6416:15:11"},"id":5787,"nodeType":"InheritanceSpecifier","src":"6416:15:11"}],"canonicalName":"MissionFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8483,"linearizedBaseContracts":[8483,818,147,576],"name":"MissionFactory","nameLocation":"6389:14:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5790,"libraryName":{"id":5788,"name":"Clones","nameLocations":["6445:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":546,"src":"6445:6:11"},"nodeType":"UsingForDirective","src":"6439:28:11","typeName":{"id":5789,"name":"address","nodeType":"ElementaryTypeName","src":"6459:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"anonymous":false,"documentation":{"id":5791,"nodeType":"StructuredDocumentation","src":"6619:167:11","text":" @dev Events emitted by the MissionFactory contract.\n These events are used to log important actions and state changes within the contract."},"eventSelector":"10ac961f00d5e732ba4dcc2c6fb09bebea0eb9edd2a75c8109775ef288382e67","id":5795,"name":"AuthorizedAddressAdded","nameLocation":"6798:22:11","nodeType":"EventDefinition","parameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"indexed":true,"mutability":"mutable","name":"addr","nameLocation":"6860:4:11","nodeType":"VariableDeclaration","scope":5795,"src":"6837:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5792,"name":"address","nodeType":"ElementaryTypeName","src":"6837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6836:101:11"},"src":"6792:146:11"},{"anonymous":false,"eventSelector":"66d5f06f711af3c9feba3203fdb00b51345d514c68585d9d319c5ff5e6f77592","id":5799,"name":"AuthorizedAddressRemoved","nameLocation":"6950:24:11","nodeType":"EventDefinition","parameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"indexed":true,"mutability":"mutable","name":"addr","nameLocation":"7012:4:11","nodeType":"VariableDeclaration","scope":5799,"src":"6989:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5796,"name":"address","nodeType":"ElementaryTypeName","src":"6989:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6988:101:11"},"src":"6944:146:11"},{"anonymous":false,"eventSelector":"0ac1ac89285bf936f515aafcf6808b3e062e77fd57f52c8892d20fc9409b8b53","id":5806,"name":"MissionCreated","nameLocation":"7102:14:11","nodeType":"EventDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5801,"indexed":true,"mutability":"mutable","name":"missionAddress","nameLocation":"7164:14:11","nodeType":"VariableDeclaration","scope":5806,"src":"7141:37:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5800,"name":"address","nodeType":"ElementaryTypeName","src":"7141:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5804,"indexed":true,"mutability":"mutable","name":"missionType","nameLocation":"7200:11:11","nodeType":"VariableDeclaration","scope":5806,"src":"7180:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":5803,"nodeType":"UserDefinedTypeName","pathNode":{"id":5802,"name":"MissionType","nameLocations":["7180:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"7180:11:11"},"referencedDeclaration":5768,"src":"7180:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"}],"src":"7140:101:11"},"src":"7096:146:11"},{"anonymous":false,"eventSelector":"8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f","id":5812,"name":"FundsReceived","nameLocation":"7254:13:11","nodeType":"EventDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"7316:6:11","nodeType":"VariableDeclaration","scope":5812,"src":"7293:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5807,"name":"address","nodeType":"ElementaryTypeName","src":"7293:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5810,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"7352:6:11","nodeType":"VariableDeclaration","scope":5812,"src":"7332:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7292:101:11"},"src":"7248:146:11"},{"anonymous":false,"eventSelector":"606617fd09d9890413e3c46147b844d4562351f86e0f7a5c60849bbf0ef02811","id":5821,"name":"MissionFundsRegistered","nameLocation":"7406:22:11","nodeType":"EventDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"7468:6:11","nodeType":"VariableDeclaration","scope":5821,"src":"7445:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7445:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5817,"indexed":true,"mutability":"mutable","name":"missionType","nameLocation":"7504:11:11","nodeType":"VariableDeclaration","scope":5821,"src":"7484:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":5816,"nodeType":"UserDefinedTypeName","pathNode":{"id":5815,"name":"MissionType","nameLocations":["7484:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"7484:11:11"},"referencedDeclaration":5768,"src":"7484:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"},{"constant":false,"id":5819,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"7536:6:11","nodeType":"VariableDeclaration","scope":5821,"src":"7520:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5818,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7444:101:11"},"src":"7400:146:11"},{"anonymous":false,"eventSelector":"eaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d","id":5827,"name":"FundsWithdrawn","nameLocation":"7558:14:11","nodeType":"EventDefinition","parameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"7620:2:11","nodeType":"VariableDeclaration","scope":5827,"src":"7597:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5822,"name":"address","nodeType":"ElementaryTypeName","src":"7597:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5825,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"7656:6:11","nodeType":"VariableDeclaration","scope":5827,"src":"7636:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"7636:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7596:101:11"},"src":"7552:146:11"},{"anonymous":false,"eventSelector":"c29bdbd554e41df97e5c40fc273a09677ac133c245f0064bdffef5cc72176e19","id":5835,"name":"OwnershipTransferProposed","nameLocation":"7714:25:11","nodeType":"EventDefinition","parameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"7776:8:11","nodeType":"VariableDeclaration","scope":5835,"src":"7753:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5828,"name":"address","nodeType":"ElementaryTypeName","src":"7753:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5831,"indexed":false,"mutability":"mutable","name":"newOwner","nameLocation":"7812:8:11","nodeType":"VariableDeclaration","scope":5835,"src":"7792:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5830,"name":"address","nodeType":"ElementaryTypeName","src":"7792:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5833,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"7836:9:11","nodeType":"VariableDeclaration","scope":5835,"src":"7828:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5832,"name":"uint256","nodeType":"ElementaryTypeName","src":"7828:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7752:101:11"},"src":"7708:146:11"},{"anonymous":false,"eventSelector":"dd72dd33198968a9cdc9b1e5cbff344fb8d04d99f8c15c0a02416b04e857b467","id":5843,"name":"OwnershipTransferConfirmed","nameLocation":"7866:26:11","nodeType":"EventDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"indexed":true,"mutability":"mutable","name":"confirmer","nameLocation":"7928:9:11","nodeType":"VariableDeclaration","scope":5843,"src":"7905:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5836,"name":"address","nodeType":"ElementaryTypeName","src":"7905:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5839,"indexed":false,"mutability":"mutable","name":"newOwner","nameLocation":"7964:8:11","nodeType":"VariableDeclaration","scope":5843,"src":"7944:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5838,"name":"address","nodeType":"ElementaryTypeName","src":"7944:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5841,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"7988:9:11","nodeType":"VariableDeclaration","scope":5843,"src":"7980:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"7980:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7904:101:11"},"src":"7860:146:11"},{"anonymous":false,"eventSelector":"321994b8855ae38e4fd6162f7a0bd7cde88be83aa3acc96e03c17b7f733b43e1","id":5849,"name":"EnrollmentLimitUpdated","nameLocation":"8018:22:11","nodeType":"EventDefinition","parameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"indexed":false,"mutability":"mutable","name":"newWeekly","nameLocation":"8080:9:11","nodeType":"VariableDeclaration","scope":5849,"src":"8057:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5844,"name":"uint8","nodeType":"ElementaryTypeName","src":"8057:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5847,"indexed":false,"mutability":"mutable","name":"newMonthly","nameLocation":"8116:10:11","nodeType":"VariableDeclaration","scope":5849,"src":"8096:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5846,"name":"uint8","nodeType":"ElementaryTypeName","src":"8096:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"8056:101:11"},"src":"8012:146:11"},{"anonymous":false,"eventSelector":"498f5e6dcf570483a1848853791046a7f10012193176d71f959f46eb7713d744","id":5855,"name":"EnrollmentRecorded","nameLocation":"8170:18:11","nodeType":"EventDefinition","parameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"8232:4:11","nodeType":"VariableDeclaration","scope":5855,"src":"8209:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5850,"name":"address","nodeType":"ElementaryTypeName","src":"8209:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5853,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"8268:9:11","nodeType":"VariableDeclaration","scope":5855,"src":"8248:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8248:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8208:101:11"},"src":"8164:146:11"},{"body":{"id":5873,"nodeType":"Block","src":"8589:230:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5859,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8622:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8626:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8622:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5861,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"8636:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8636:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8622:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":5864,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"8647:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5867,"indexExpression":{"expression":{"id":5865,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8658:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8662:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8658:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8647:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8622:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572206f72204d697373696f6e466163746f727920617574686f72697a6564","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8748:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cae71c40461c9f1298c23934f38bbe359f396be333cf35ea99a47e88cfcbfa4","typeString":"literal_string \"Not owner or MissionFactory authorized\""},"value":"Not owner or MissionFactory authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cae71c40461c9f1298c23934f38bbe359f396be333cf35ea99a47e88cfcbfa4","typeString":"literal_string \"Not owner or MissionFactory authorized\""}],"id":5858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8600:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8600:199:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5871,"nodeType":"ExpressionStatement","src":"8600:199:11"},{"id":5872,"nodeType":"PlaceholderStatement","src":"8810:1:11"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"8455:95:11","text":" @dev Modifier that allows only the owner or an authorized address to call."},"id":5874,"name":"onlyOwnerOrAuthorized","nameLocation":"8565:21:11","nodeType":"ModifierDefinition","parameters":{"id":5857,"nodeType":"ParameterList","parameters":[],"src":"8586:2:11"},"src":"8556:263:11","virtual":false,"visibility":"internal"},{"body":{"id":5886,"nodeType":"Block","src":"9026:240:11","statements":[{"expression":{"arguments":[{"baseExpression":{"id":5878,"name":"isMission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"9059:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5881,"indexExpression":{"expression":{"id":5879,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9069:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9073:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9069:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9059:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e466163746f72793a2063616c6c6572206973206e6f7420612076616c6964206d697373696f6e20636f6e7472616374","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9179:56:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d3dcaf01210e57efdca3dda3bfcde3364801a974317ef284fa2e7ef77c6eb44","typeString":"literal_string \"MissionFactory: caller is not a valid mission contract\""},"value":"MissionFactory: caller is not a valid mission contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d3dcaf01210e57efdca3dda3bfcde3364801a974317ef284fa2e7ef77c6eb44","typeString":"literal_string \"MissionFactory: caller is not a valid mission contract\""}],"id":5877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9037:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9037:209:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5884,"nodeType":"ExpressionStatement","src":"9037:209:11"},{"id":5885,"nodeType":"PlaceholderStatement","src":"9257:1:11"}]},"documentation":{"id":5875,"nodeType":"StructuredDocumentation","src":"8825:175:11","text":" @dev Modifier that allows only a valid mission contract to call.\n This ensures that the caller is a contract that has been registered as a mission."},"id":5887,"name":"onlyMission","nameLocation":"9012:11:11","nodeType":"ModifierDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[],"src":"9023:2:11"},"src":"9003:263:11","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":5888,"nodeType":"StructuredDocumentation","src":"9399:242:11","text":" @dev State variables for the MissionFactory contract.\n These variables store the state of the contract, including authorized addresses, reserved funds, mission statuses, and the implementation address for missions."},"functionSelector":"2c8fe526","id":5891,"mutability":"mutable","name":"missions","nameLocation":"9695:8:11","nodeType":"VariableDeclaration","scope":8483,"src":"9647:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":5889,"name":"address","nodeType":"ElementaryTypeName","src":"9647:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5890,"nodeType":"ArrayTypeName","src":"9647:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"861a68d6","id":5894,"mutability":"mutable","name":"weeklyLimit","nameLocation":"9831:11:11","nodeType":"VariableDeclaration","scope":8483,"src":"9783:63:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5892,"name":"uint8","nodeType":"ElementaryTypeName","src":"9783:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9845:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"public"},{"constant":false,"functionSelector":"0a6005da","id":5897,"mutability":"mutable","name":"monthlyLimit","nameLocation":"9990:12:11","nodeType":"VariableDeclaration","scope":8483,"src":"9942:65:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5895,"name":"uint8","nodeType":"ElementaryTypeName","src":"9942:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3130","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10005:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"63679723","id":5899,"mutability":"mutable","name":"totalMissionFunds","nameLocation":"10150:17:11","nodeType":"VariableDeclaration","scope":8483,"src":"10102:65:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"10102:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3589cf72","id":5901,"mutability":"mutable","name":"totalOwnerEarnedFunds","nameLocation":"10285:21:11","nodeType":"VariableDeclaration","scope":8483,"src":"10237:69:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5900,"name":"uint256","nodeType":"ElementaryTypeName","src":"10237:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c892fde3","id":5903,"mutability":"mutable","name":"totalMissionSuccesses","nameLocation":"10431:21:11","nodeType":"VariableDeclaration","scope":8483,"src":"10383:69:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"10383:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"83fbea51","id":5905,"mutability":"mutable","name":"totalMissionFailures","nameLocation":"10567:20:11","nodeType":"VariableDeclaration","scope":8483,"src":"10519:68:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"10519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"bd487725","id":5907,"mutability":"immutable","name":"missionImplementation","nameLocation":"10708:21:11","nodeType":"VariableDeclaration","scope":8483,"src":"10651:78:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5906,"name":"address","nodeType":"ElementaryTypeName","src":"10651:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"d3050eba","id":5910,"mutability":"constant","name":"OWNERSHIP_PROPOSAL_WINDOW","nameLocation":"10880:25:11","nodeType":"VariableDeclaration","scope":8483,"src":"10824:90:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10824:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10908:6:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"04a61752","id":5912,"mutability":"mutable","name":"proposalTimestamp","nameLocation":"11012:17:11","nodeType":"VariableDeclaration","scope":8483,"src":"10965:64:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"10965:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0fc8c4ed","id":5914,"mutability":"mutable","name":"proposedNewOwner","nameLocation":"11148:16:11","nodeType":"VariableDeclaration","scope":8483,"src":"11101:63:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5913,"name":"address","nodeType":"ElementaryTypeName","src":"11101:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2d771f30","id":5916,"mutability":"mutable","name":"proposalProposer","nameLocation":"11286:16:11","nodeType":"VariableDeclaration","scope":8483,"src":"11239:63:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5915,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b9181611","id":5920,"mutability":"mutable","name":"authorized","nameLocation":"11410:10:11","nodeType":"VariableDeclaration","scope":8483,"src":"11362:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":5919,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5917,"name":"address","nodeType":"ElementaryTypeName","src":"11370:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"11362:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5918,"name":"bool","nodeType":"ElementaryTypeName","src":"11381:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"aa1f0595","id":5924,"mutability":"mutable","name":"isMission","nameLocation":"11548:9:11","nodeType":"VariableDeclaration","scope":8483,"src":"11500:57:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":5923,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5921,"name":"address","nodeType":"ElementaryTypeName","src":"11508:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"11500:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5922,"name":"bool","nodeType":"ElementaryTypeName","src":"11519:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"0814ab82","id":5929,"mutability":"mutable","name":"missionStatus","nameLocation":"11698:13:11","nodeType":"VariableDeclaration","scope":8483,"src":"11650:61:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"},"typeName":{"id":5928,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5925,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"11650:26:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5927,"nodeType":"UserDefinedTypeName","pathNode":{"id":5926,"name":"Status","nameLocations":["11669:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"11669:6:11"},"referencedDeclaration":5778,"src":"11669:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}},"visibility":"public"},{"constant":false,"functionSelector":"c416ad2a","id":5934,"mutability":"mutable","name":"reservedFunds","nameLocation":"11841:13:11","nodeType":"VariableDeclaration","scope":8483,"src":"11793:61:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"},"typeName":{"id":5933,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5931,"nodeType":"UserDefinedTypeName","pathNode":{"id":5930,"name":"MissionType","nameLocations":["11801:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"11801:11:11"},"referencedDeclaration":5768,"src":"11801:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"Mapping","src":"11793:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5932,"name":"uint256","nodeType":"ElementaryTypeName","src":"11816:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":5939,"mutability":"mutable","name":"_enrollmentHistory","nameLocation":"11961:18:11","nodeType":"VariableDeclaration","scope":8483,"src":"11913:66:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":5938,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5935,"name":"address","nodeType":"ElementaryTypeName","src":"11921:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"11913:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5936,"name":"uint256","nodeType":"ElementaryTypeName","src":"11932:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5937,"nodeType":"ArrayTypeName","src":"11932:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"functionSelector":"b6de7b43","id":5943,"mutability":"mutable","name":"missionNames","nameLocation":"12077:12:11","nodeType":"VariableDeclaration","scope":8483,"src":"12030:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"typeName":{"id":5942,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5940,"name":"address","nodeType":"ElementaryTypeName","src":"12038:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"12030:26:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5941,"name":"string","nodeType":"ElementaryTypeName","src":"12049:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"f08e231e","id":5948,"mutability":"mutable","name":"missionTypeCounts","nameLocation":"12197:17:11","nodeType":"VariableDeclaration","scope":8483,"src":"12150:64:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"},"typeName":{"id":5947,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5945,"nodeType":"UserDefinedTypeName","pathNode":{"id":5944,"name":"MissionType","nameLocations":["12158:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"12158:11:11"},"referencedDeclaration":5768,"src":"12158:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"Mapping","src":"12150:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"12173:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":5972,"nodeType":"Block","src":"12634:100:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5959,"name":"_impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"12653:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12670:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12662:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5960,"name":"address","nodeType":"ElementaryTypeName","src":"12662:7:11","typeDescriptions":{}}},"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12662:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12653:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696d706c207a65726f","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12674:11:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca17dad4573ea8260e90e0876cf512e355e72abc23c9096b2c93e0fd497f5edb","typeString":"literal_string \"impl zero\""},"value":"impl zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca17dad4573ea8260e90e0876cf512e355e72abc23c9096b2c93e0fd497f5edb","typeString":"literal_string \"impl zero\""}],"id":5958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12645:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12645:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5967,"nodeType":"ExpressionStatement","src":"12645:41:11"},{"expression":{"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5968,"name":"missionImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"12697:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5969,"name":"_impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"12721:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12697:29:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5971,"nodeType":"ExpressionStatement","src":"12697:29:11"}]},"documentation":{"id":5949,"nodeType":"StructuredDocumentation","src":"12431:150:11","text":" @dev Struct to hold information about players who won the mission.\n Contains the player's address and the amount they won."},"id":5973,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":5954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12622:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12626:6:11","memberName":"sender","nodeType":"MemberAccess","src":"12622:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5956,"kind":"baseConstructorSpecifier","modifierName":{"id":5953,"name":"Ownable","nameLocations":["12614:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"12614:7:11"},"nodeType":"ModifierInvocation","src":"12614:19:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"_impl","nameLocation":"12607:5:11","nodeType":"VariableDeclaration","scope":5973,"src":"12599:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5950,"name":"address","nodeType":"ElementaryTypeName","src":"12599:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12598:15:11"},"returnParameters":{"id":5957,"nodeType":"ParameterList","parameters":[],"src":"12634:0:11"},"scope":8483,"src":"12587:147:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6026,"nodeType":"Block","src":"13040:441:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5982,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"13055:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5983,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"13060:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13072:6:11","memberName":"Hourly","nodeType":"MemberAccess","referencedDeclaration":5762,"src":"13060:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"src":"13055:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5988,"nodeType":"IfStatement","src":"13051:52:11","trueBody":{"expression":{"hexValue":"486f75726c79","id":5986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13095:8:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3db35742f64ab86abd22b72735805a383544257d5e04a3aa3d635875a5cdbfc","typeString":"literal_string \"Hourly\""},"value":"Hourly"},"functionReturnParameters":5981,"id":5987,"nodeType":"Return","src":"13088:15:11"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"13118:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5990,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"13123:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13135:12:11","memberName":"QuarterDaily","nodeType":"MemberAccess","referencedDeclaration":5763,"src":"13123:24:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"src":"13118:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5995,"nodeType":"IfStatement","src":"13114:58:11","trueBody":{"expression":{"hexValue":"517561727465724461696c79","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13158:14:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_dabdbd055e9088afce1b0e06c251fd5fe192f3ae9afd7440a9a3bdd316258aba","typeString":"literal_string \"QuarterDaily\""},"value":"QuarterDaily"},"functionReturnParameters":5981,"id":5994,"nodeType":"Return","src":"13151:21:11"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"13187:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5997,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"13192:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13204:7:11","memberName":"BiDaily","nodeType":"MemberAccess","referencedDeclaration":5764,"src":"13192:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"src":"13187:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6002,"nodeType":"IfStatement","src":"13183:53:11","trueBody":{"expression":{"hexValue":"42694461696c79","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13227:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_145d0d88548d3d21c19856b550e49a56844bce4498d5060b2a716de2c891e31d","typeString":"literal_string \"BiDaily\""},"value":"BiDaily"},"functionReturnParameters":5981,"id":6001,"nodeType":"Return","src":"13220:16:11"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6003,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"13251:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6004,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"13256:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13268:5:11","memberName":"Daily","nodeType":"MemberAccess","referencedDeclaration":5765,"src":"13256:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"src":"13251:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6009,"nodeType":"IfStatement","src":"13247:51:11","trueBody":{"expression":{"hexValue":"4461696c79","id":6007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13291:7:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5b296c77454e4117100ad310d9213034f87ac0b4163a7841472b5f98165b805","typeString":"literal_string \"Daily\""},"value":"Daily"},"functionReturnParameters":5981,"id":6008,"nodeType":"Return","src":"13284:14:11"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6010,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"13313:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6011,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"13318:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13330:6:11","memberName":"Weekly","nodeType":"MemberAccess","referencedDeclaration":5766,"src":"13318:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"src":"13313:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6016,"nodeType":"IfStatement","src":"13309:52:11","trueBody":{"expression":{"hexValue":"5765656b6c79","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13353:8:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b68ef244d0bfb429cbffea5af3fdc05fa58addffa87c2e2dadfd112c325f55c1","typeString":"literal_string \"Weekly\""},"value":"Weekly"},"functionReturnParameters":5981,"id":6015,"nodeType":"Return","src":"13346:15:11"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"13376:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6018,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"13381:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13393:7:11","memberName":"Monthly","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"13381:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"src":"13376:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6023,"nodeType":"IfStatement","src":"13372:53:11","trueBody":{"expression":{"hexValue":"4d6f6e74686c79","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13416:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_dac5a9cf3269b448686e8de8b63d9cf3ae476326deed4a2b17c20c6a371e44c7","typeString":"literal_string \"Monthly\""},"value":"Monthly"},"functionReturnParameters":5981,"id":6022,"nodeType":"Return","src":"13409:16:11"}},{"expression":{"hexValue":"437573746f6d","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13443:8:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88cbd24b6856a012554e69e761282ca241eee58f3254d7e8212a7f7c276215e7","typeString":"literal_string \"Custom\""},"value":"Custom"},"functionReturnParameters":5981,"id":6025,"nodeType":"Return","src":"13436:15:11"}]},"documentation":{"id":5974,"nodeType":"StructuredDocumentation","src":"12865:84:11","text":" @dev Function to convert mission types to human readable names "},"id":6027,"implemented":true,"kind":"function","modifiers":[],"name":"_toHumanReadableName","nameLocation":"12966:20:11","nodeType":"FunctionDefinition","parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"t","nameLocation":"12999:1:11","nodeType":"VariableDeclaration","scope":6027,"src":"12987:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":5976,"nodeType":"UserDefinedTypeName","pathNode":{"id":5975,"name":"MissionType","nameLocations":["12987:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"12987:11:11"},"referencedDeclaration":5768,"src":"12987:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"}],"src":"12986:15:11"},"returnParameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6027,"src":"13025:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5979,"name":"string","nodeType":"ElementaryTypeName","src":"13025:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13024:15:11"},"scope":8483,"src":"12957:524:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6101,"nodeType":"Block","src":"13919:877:11","statements":[{"assignments":[6036],"declarations":[{"constant":false,"id":6036,"mutability":"mutable","name":"nowTs","nameLocation":"13938:5:11","nodeType":"VariableDeclaration","scope":6101,"src":"13930:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6035,"name":"uint256","nodeType":"ElementaryTypeName","src":"13930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6039,"initialValue":{"expression":{"id":6037,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13946:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13952:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"13946:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13930:31:11"},{"assignments":[6044],"declarations":[{"constant":false,"id":6044,"mutability":"mutable","name":"h","nameLocation":"14050:1:11","nodeType":"VariableDeclaration","scope":6101,"src":"14032:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"14032:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6043,"nodeType":"ArrayTypeName","src":"14032:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6048,"initialValue":{"baseExpression":{"id":6045,"name":"_enrollmentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"14054:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6047,"indexExpression":{"id":6046,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"14073:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14054:24:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14032:46:11"},{"assignments":[6050],"declarations":[{"constant":false,"id":6050,"mutability":"mutable","name":"earliest","nameLocation":"14150:8:11","nodeType":"VariableDeclaration","scope":6101,"src":"14142:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"14142:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6051,"nodeType":"VariableDeclarationStatement","src":"14142:16:11"},{"body":{"id":6088,"nodeType":"Block","src":"14322:304:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6063,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"14408:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6065,"indexExpression":{"id":6064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"14410:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14408:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14415:6:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"14408:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6068,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"14424:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14408:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6087,"nodeType":"IfStatement","src":"14404:211:11","trueBody":{"id":6086,"nodeType":"Block","src":"14431:184:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6070,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"14454:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14466:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14454:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6073,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"14471:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6075,"indexExpression":{"id":6074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"14473:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14471:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6076,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"14478:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14471:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14454:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6085,"nodeType":"IfStatement","src":"14450:53:11","trueBody":{"expression":{"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6079,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"14488:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6080,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"14499:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6082,"indexExpression":{"id":6081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"14501:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14499:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14488:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6084,"nodeType":"ExpressionStatement","src":"14488:15:11"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"14303:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6057,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"14307:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14309:6:11","memberName":"length","nodeType":"MemberAccess","src":"14307:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14303:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6089,"initializationExpression":{"assignments":[6053],"declarations":[{"constant":false,"id":6053,"mutability":"mutable","name":"i","nameLocation":"14296:1:11","nodeType":"VariableDeclaration","scope":6089,"src":"14291:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint","nodeType":"ElementaryTypeName","src":"14291:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6055,"initialValue":{"hexValue":"30","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14300:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14291:10:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14317:3:11","subExpression":{"id":6060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"14317:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6062,"nodeType":"ExpressionStatement","src":"14317:3:11"},"nodeType":"ForStatement","src":"14286:340:11"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6090,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"14643:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14655:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14643:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6094,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"14663:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14674:6:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"14663:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6097,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"14683:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14663:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14643:45:11","trueExpression":{"hexValue":"30","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14659:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6034,"id":6100,"nodeType":"Return","src":"14636:52:11"}]},"documentation":{"id":6028,"nodeType":"StructuredDocumentation","src":"13489:320:11","text":" @dev Returns the time until the next weekly slot for a user.\n This function calculates the time remaining until the next weekly slot based on the user's enrollment history.\n @param user The address of the user to check.\n @return The number of seconds until the next weekly slot."},"functionSelector":"eff0ab92","id":6102,"implemented":true,"kind":"function","modifiers":[],"name":"secondsTillWeeklySlot","nameLocation":"13824:21:11","nodeType":"FunctionDefinition","parameters":{"id":6031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6030,"mutability":"mutable","name":"user","nameLocation":"13854:4:11","nodeType":"VariableDeclaration","scope":6102,"src":"13846:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6029,"name":"address","nodeType":"ElementaryTypeName","src":"13846:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13845:14:11"},"returnParameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6102,"src":"13910:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6032,"name":"uint256","nodeType":"ElementaryTypeName","src":"13910:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13909:9:11"},"scope":8483,"src":"13815:981:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6176,"nodeType":"Block","src":"15237:881:11","statements":[{"assignments":[6111],"declarations":[{"constant":false,"id":6111,"mutability":"mutable","name":"nowTs","nameLocation":"15256:5:11","nodeType":"VariableDeclaration","scope":6176,"src":"15248:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6110,"name":"uint256","nodeType":"ElementaryTypeName","src":"15248:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6114,"initialValue":{"expression":{"id":6112,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15264:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15270:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"15264:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15248:31:11"},{"assignments":[6119],"declarations":[{"constant":false,"id":6119,"mutability":"mutable","name":"h","nameLocation":"15368:1:11","nodeType":"VariableDeclaration","scope":6176,"src":"15350:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"15350:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6118,"nodeType":"ArrayTypeName","src":"15350:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6123,"initialValue":{"baseExpression":{"id":6120,"name":"_enrollmentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"15372:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6122,"indexExpression":{"id":6121,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"15391:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15372:24:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15350:46:11"},{"assignments":[6125],"declarations":[{"constant":false,"id":6125,"mutability":"mutable","name":"earliest","nameLocation":"15468:8:11","nodeType":"VariableDeclaration","scope":6176,"src":"15460:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6124,"name":"uint256","nodeType":"ElementaryTypeName","src":"15460:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6126,"nodeType":"VariableDeclarationStatement","src":"15460:16:11"},{"body":{"id":6163,"nodeType":"Block","src":"15642:305:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6138,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"15728:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6140,"indexExpression":{"id":6139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"15730:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15728:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3330","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"15728:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6143,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"15745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15728:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6162,"nodeType":"IfStatement","src":"15724:212:11","trueBody":{"id":6161,"nodeType":"Block","src":"15752:184:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"15775:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15787:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15775:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6148,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"15792:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6150,"indexExpression":{"id":6149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"15794:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15792:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6151,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"15799:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15792:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15775:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6160,"nodeType":"IfStatement","src":"15771:53:11","trueBody":{"expression":{"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6154,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"15809:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6155,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"15820:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6157,"indexExpression":{"id":6156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"15822:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15820:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15809:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6159,"nodeType":"ExpressionStatement","src":"15809:15:11"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"15623:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6132,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"15627:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15629:6:11","memberName":"length","nodeType":"MemberAccess","src":"15627:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15623:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"initializationExpression":{"assignments":[6128],"declarations":[{"constant":false,"id":6128,"mutability":"mutable","name":"i","nameLocation":"15616:1:11","nodeType":"VariableDeclaration","scope":6164,"src":"15611:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6127,"name":"uint","nodeType":"ElementaryTypeName","src":"15611:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6130,"initialValue":{"hexValue":"30","id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15620:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15611:10:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15637:3:11","subExpression":{"id":6135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"15637:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6137,"nodeType":"ExpressionStatement","src":"15637:3:11"},"nodeType":"ForStatement","src":"15606:341:11"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6165,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"15964:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15976:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15964:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6169,"name":"earliest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"15984:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3330","id":6170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"15984:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6172,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"16005:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15984:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15964:46:11","trueExpression":{"hexValue":"30","id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15980:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6109,"id":6175,"nodeType":"Return","src":"15957:53:11"}]},"documentation":{"id":6103,"nodeType":"StructuredDocumentation","src":"14804:323:11","text":" @dev Returns the time until the next monthly slot for a user.\n This function calculates the time remaining until the next monthly slot based on the user's enrollment history.\n @param user The address of the user to check.\n @return The number of seconds until the next monthly slot."},"functionSelector":"37012762","id":6177,"implemented":true,"kind":"function","modifiers":[],"name":"secondsTillMonthlySlot","nameLocation":"15142:22:11","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"user","nameLocation":"15173:4:11","nodeType":"VariableDeclaration","scope":6177,"src":"15165:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6104,"name":"address","nodeType":"ElementaryTypeName","src":"15165:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15164:14:11"},"returnParameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6177,"src":"15228:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"15228:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15227:9:11"},"scope":8483,"src":"15133:985:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6200,"nodeType":"Block","src":"16703:131:11","statements":[{"expression":{"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6187,"name":"weeklyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"16714:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6188,"name":"_weekly","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"16728:7:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16714:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6190,"nodeType":"ExpressionStatement","src":"16714:21:11"},{"expression":{"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6191,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"16746:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6192,"name":"_monthly","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"16761:8:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16746:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6194,"nodeType":"ExpressionStatement","src":"16746:23:11"},{"eventCall":{"arguments":[{"id":6196,"name":"_weekly","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"16808:7:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6197,"name":"_monthly","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"16817:8:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6195,"name":"EnrollmentLimitUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"16785:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$_t_uint8_$returns$__$","typeString":"function (uint8,uint8)"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16785:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6199,"nodeType":"EmitStatement","src":"16780:46:11"}]},"documentation":{"id":6178,"nodeType":"StructuredDocumentation","src":"16233:361:11","text":" @dev Sets the weekly and monthly enrollment limits.\n This function allows the owner or an authorized address to set the limits for how many missions a user can enroll in per week and per month.\n @param _weekly The new weekly limit for mission enrollments.\n @param _monthly The new monthly limit for mission enrollments."},"functionSelector":"d41eca64","id":6201,"implemented":true,"kind":"function","modifiers":[{"id":6185,"kind":"modifierInvocation","modifierName":{"id":6184,"name":"onlyOwnerOrAuthorized","nameLocations":["16681:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":5874,"src":"16681:21:11"},"nodeType":"ModifierInvocation","src":"16681:21:11"}],"name":"setEnrollmentLimits","nameLocation":"16609:19:11","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6180,"mutability":"mutable","name":"_weekly","nameLocation":"16635:7:11","nodeType":"VariableDeclaration","scope":6201,"src":"16629:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6179,"name":"uint8","nodeType":"ElementaryTypeName","src":"16629:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6182,"mutability":"mutable","name":"_monthly","nameLocation":"16650:8:11","nodeType":"VariableDeclaration","scope":6201,"src":"16644:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6181,"name":"uint8","nodeType":"ElementaryTypeName","src":"16644:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16628:31:11"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[],"src":"16703:0:11"},"scope":8483,"src":"16600:234:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6370,"nodeType":"Block","src":"17384:2603:11","statements":[{"assignments":[6213],"declarations":[{"constant":false,"id":6213,"mutability":"mutable","name":"nowTs","nameLocation":"17403:5:11","nodeType":"VariableDeclaration","scope":6370,"src":"17395:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"17395:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6216,"initialValue":{"expression":{"id":6214,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17411:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17417:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"17411:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17395:31:11"},{"assignments":[6218],"declarations":[{"constant":false,"id":6218,"mutability":"mutable","name":"weeklyCount","nameLocation":"17509:11:11","nodeType":"VariableDeclaration","scope":6370,"src":"17501:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"17501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6219,"nodeType":"VariableDeclarationStatement","src":"17501:19:11"},{"assignments":[6221],"declarations":[{"constant":false,"id":6221,"mutability":"mutable","name":"monthlyCount","nameLocation":"17631:12:11","nodeType":"VariableDeclaration","scope":6370,"src":"17623:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6220,"name":"uint256","nodeType":"ElementaryTypeName","src":"17623:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6222,"nodeType":"VariableDeclarationStatement","src":"17623:20:11"},{"assignments":[6224],"declarations":[{"constant":false,"id":6224,"mutability":"mutable","name":"earliest7d","nameLocation":"17752:10:11","nodeType":"VariableDeclaration","scope":6370,"src":"17744:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"17744:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6225,"nodeType":"VariableDeclarationStatement","src":"17744:18:11"},{"assignments":[6227],"declarations":[{"constant":false,"id":6227,"mutability":"mutable","name":"earliest30d","nameLocation":"17881:11:11","nodeType":"VariableDeclaration","scope":6370,"src":"17873:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6226,"name":"uint256","nodeType":"ElementaryTypeName","src":"17873:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6228,"nodeType":"VariableDeclarationStatement","src":"17873:19:11"},{"assignments":[6233],"declarations":[{"constant":false,"id":6233,"mutability":"mutable","name":"h","nameLocation":"18027:1:11","nodeType":"VariableDeclaration","scope":6370,"src":"18009:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"18009:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6232,"nodeType":"ArrayTypeName","src":"18009:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6237,"initialValue":{"baseExpression":{"id":6234,"name":"_enrollmentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"18031:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6236,"indexExpression":{"id":6235,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"18050:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18031:24:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18009:46:11"},{"body":{"id":6298,"nodeType":"Block","src":"18158:665:11","statements":[{"assignments":[6249],"declarations":[{"constant":false,"id":6249,"mutability":"mutable","name":"t","nameLocation":"18251:1:11","nodeType":"VariableDeclaration","scope":6298,"src":"18243:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"18243:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6253,"initialValue":{"baseExpression":{"id":6250,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"18255:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6252,"indexExpression":{"id":6251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"18257:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18255:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18243:16:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"18278:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3330","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18282:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"18278:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6257,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"18292:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18278:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6297,"nodeType":"IfStatement","src":"18274:538:11","trueBody":{"id":6296,"nodeType":"Block","src":"18299:513:11","statements":[{"expression":{"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18403:14:11","subExpression":{"id":6259,"name":"monthlyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"18405:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6261,"nodeType":"ExpressionStatement","src":"18403:14:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6262,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"18440:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18455:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18440:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6265,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"18460:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6266,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"18464:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18460:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18440:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6273,"nodeType":"IfStatement","src":"18436:56:11","trueBody":{"expression":{"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6269,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"18477:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6270,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"18491:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18477:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6272,"nodeType":"ExpressionStatement","src":"18477:15:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6274,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"18581:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18585:6:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"18581:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6277,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"18594:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18581:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6295,"nodeType":"IfStatement","src":"18577:220:11","trueBody":{"id":6294,"nodeType":"Block","src":"18601:196:11","statements":[{"expression":{"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18624:13:11","subExpression":{"id":6279,"name":"weeklyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"18626:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6281,"nodeType":"ExpressionStatement","src":"18624:13:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"18664:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18678:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18664:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"18683:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6286,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"18687:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18683:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18664:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6293,"nodeType":"IfStatement","src":"18660:53:11","trueBody":{"expression":{"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6289,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"18699:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6290,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"18712:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18699:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6292,"nodeType":"ExpressionStatement","src":"18699:14:11"}}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"18139:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6242,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"18143:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18145:6:11","memberName":"length","nodeType":"MemberAccess","src":"18143:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18139:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6299,"initializationExpression":{"assignments":[6239],"declarations":[{"constant":false,"id":6239,"mutability":"mutable","name":"i","nameLocation":"18136:1:11","nodeType":"VariableDeclaration","scope":6299,"src":"18128:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6240,"nodeType":"VariableDeclarationStatement","src":"18128:9:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18153:3:11","subExpression":{"id":6245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"18155:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6247,"nodeType":"ExpressionStatement","src":"18153:3:11"},"nodeType":"ForStatement","src":"18123:700:11"},{"assignments":[6301],"declarations":[{"constant":false,"id":6301,"mutability":"mutable","name":"wk","nameLocation":"18840:2:11","nodeType":"VariableDeclaration","scope":6370,"src":"18835:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6300,"name":"bool","nodeType":"ElementaryTypeName","src":"18835:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6302,"name":"weeklyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"18845:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6303,"name":"weeklyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"18861:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"18845:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"18835:37:11"},{"assignments":[6307],"declarations":[{"constant":false,"id":6307,"mutability":"mutable","name":"mo","nameLocation":"18962:2:11","nodeType":"VariableDeclaration","scope":6370,"src":"18957:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6306,"name":"bool","nodeType":"ElementaryTypeName","src":"18957:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6311,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6308,"name":"monthlyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"18967:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6309,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"18983:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"18967:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"18957:38:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19082:3:11","subExpression":{"id":6312,"name":"wk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"19083:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19089:3:11","subExpression":{"id":6314,"name":"mo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"19090:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19082:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6322,"nodeType":"IfStatement","src":"19078:42:11","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19102:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6318,"name":"Limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"19109:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Limit_$5783_$","typeString":"type(enum Limit)"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19115:4:11","memberName":"None","nodeType":"MemberAccess","referencedDeclaration":5780,"src":"19109:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}}],"id":6320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19101:19:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_Limit_$5783_$","typeString":"tuple(bool,enum Limit)"}},"functionReturnParameters":6211,"id":6321,"nodeType":"Return","src":"19094:26:11"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6323,"name":"wk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"19222:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19228:3:11","subExpression":{"id":6324,"name":"mo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"19229:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19222:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"19218:44:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19242:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":6328,"name":"Limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"19249:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Limit_$5783_$","typeString":"type(enum Limit)"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19255:6:11","memberName":"Weekly","nodeType":"MemberAccess","referencedDeclaration":5781,"src":"19249:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}}],"id":6330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19241:21:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_Limit_$5783_$","typeString":"tuple(bool,enum Limit)"}},"functionReturnParameters":6211,"id":6331,"nodeType":"Return","src":"19234:28:11"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6333,"name":"mo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"19371:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19377:3:11","subExpression":{"id":6334,"name":"wk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"19378:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19371:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6342,"nodeType":"IfStatement","src":"19367:45:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19391:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":6338,"name":"Limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"19398:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Limit_$5783_$","typeString":"type(enum Limit)"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19404:7:11","memberName":"Monthly","nodeType":"MemberAccess","referencedDeclaration":5782,"src":"19398:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}}],"id":6340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19390:22:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_Limit_$5783_$","typeString":"tuple(bool,enum Limit)"}},"functionReturnParameters":6211,"id":6341,"nodeType":"Return","src":"19383:29:11"}},{"assignments":[6344],"declarations":[{"constant":false,"id":6344,"mutability":"mutable","name":"leftW","nameLocation":"19584:5:11","nodeType":"VariableDeclaration","scope":6370,"src":"19576:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6343,"name":"uint256","nodeType":"ElementaryTypeName","src":"19576:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6350,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"19592:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19607:6:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"19592:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6348,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"19616:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19592:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19576:45:11"},{"assignments":[6352],"declarations":[{"constant":false,"id":6352,"mutability":"mutable","name":"leftM","nameLocation":"19715:5:11","nodeType":"VariableDeclaration","scope":6370,"src":"19707:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6351,"name":"uint256","nodeType":"ElementaryTypeName","src":"19707:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6358,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"19723:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3330","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19737:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"19723:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6356,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"19747:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19723:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19707:45:11"},{"expression":{"components":[{"hexValue":"66616c7365","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19847:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"leftM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"19854:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6361,"name":"leftW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"19862:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19854:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":6365,"name":"Limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"19886:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Limit_$5783_$","typeString":"type(enum Limit)"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19892:6:11","memberName":"Weekly","nodeType":"MemberAccess","referencedDeclaration":5781,"src":"19886:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19854:44:11","trueExpression":{"expression":{"id":6363,"name":"Limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"19870:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Limit_$5783_$","typeString":"type(enum Limit)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19876:7:11","memberName":"Monthly","nodeType":"MemberAccess","referencedDeclaration":5782,"src":"19870:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}},"typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}}],"id":6368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19846:53:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_Limit_$5783_$","typeString":"tuple(bool,enum Limit)"}},"functionReturnParameters":6211,"id":6369,"nodeType":"Return","src":"19839:60:11"}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"16842:420:11","text":" @dev Checks if a user can enroll in a mission based on anti-addiction limits.\n This function checks the user's enrollment history to determine if they have exceeded the weekly or monthly limits.\n @param user The address of the user to check.\n @return ok A boolean indicating if the user can enroll.\n @return breach A Limit enum indicating which limit is breached, if any."},"functionSelector":"9804a586","id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"canEnroll","nameLocation":"17277:9:11","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"user","nameLocation":"17295:4:11","nodeType":"VariableDeclaration","scope":6371,"src":"17287:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6203,"name":"address","nodeType":"ElementaryTypeName","src":"17287:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17286:14:11"},"returnParameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"ok","nameLocation":"17366:2:11","nodeType":"VariableDeclaration","scope":6371,"src":"17361:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6206,"name":"bool","nodeType":"ElementaryTypeName","src":"17361:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6210,"mutability":"mutable","name":"breach","nameLocation":"17376:6:11","nodeType":"VariableDeclaration","scope":6371,"src":"17370:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"},"typeName":{"id":6209,"nodeType":"UserDefinedTypeName","pathNode":{"id":6208,"name":"Limit","nameLocations":["17370:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":5783,"src":"17370:5:11"},"referencedDeclaration":5783,"src":"17370:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}},"visibility":"internal"}],"src":"17360:23:11"},"scope":8483,"src":"17268:2719:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6485,"nodeType":"Block","src":"20359:1479:11","statements":[{"assignments":[6378],"declarations":[{"constant":false,"id":6378,"mutability":"mutable","name":"nowTs","nameLocation":"20378:5:11","nodeType":"VariableDeclaration","scope":6485,"src":"20370:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"20370:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6381,"initialValue":{"expression":{"id":6379,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20386:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20392:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"20386:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20370:31:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6383,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"20492:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":6386,"indexExpression":{"expression":{"id":6384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20506:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20510:6:11","memberName":"sender","nodeType":"MemberAccess","src":"20506:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20492:25:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6387,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"20521:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20528:9:11","memberName":"Enrolling","nodeType":"MemberAccess","referencedDeclaration":5771,"src":"20521:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"20492:45:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642063616c6c6572","id":6390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20539:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379","typeString":"literal_string \"Invalid caller\""},"value":"Invalid caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379","typeString":"literal_string \"Invalid caller\""}],"id":6382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"20484:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20484:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6392,"nodeType":"ExpressionStatement","src":"20484:72:11"},{"assignments":[6394],"declarations":[{"constant":false,"id":6394,"mutability":"mutable","name":"cutoff","nameLocation":"20627:6:11","nodeType":"VariableDeclaration","scope":6485,"src":"20619:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6393,"name":"uint256","nodeType":"ElementaryTypeName","src":"20619:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6395,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"20636:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3330","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20644:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"20636:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20619:32:11"},{"assignments":[6403],"declarations":[{"constant":false,"id":6403,"mutability":"mutable","name":"history","nameLocation":"20770:7:11","nodeType":"VariableDeclaration","scope":6485,"src":"20752:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6401,"name":"uint256","nodeType":"ElementaryTypeName","src":"20752:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6402,"nodeType":"ArrayTypeName","src":"20752:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6407,"initialValue":{"baseExpression":{"id":6404,"name":"_enrollmentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"20780:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6406,"indexExpression":{"id":6405,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"20799:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20780:24:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20752:52:11"},{"assignments":[6409],"declarations":[{"constant":false,"id":6409,"mutability":"mutable","name":"i","nameLocation":"20886:1:11","nodeType":"VariableDeclaration","scope":6485,"src":"20878:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6408,"name":"uint256","nodeType":"ElementaryTypeName","src":"20878:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6411,"initialValue":{"hexValue":"30","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20890:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20878:13:11"},{"body":{"id":6425,"nodeType":"Block","src":"20952:121:11","statements":[{"expression":{"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21054:3:11","subExpression":{"id":6422,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"21054:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6424,"nodeType":"ExpressionStatement","src":"21054:3:11"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"20909:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6413,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"20913:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20921:6:11","memberName":"length","nodeType":"MemberAccess","src":"20913:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20909:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6416,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"20931:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6418,"indexExpression":{"id":6417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"20939:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20931:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6419,"name":"cutoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"20944:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20931:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20909:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6426,"nodeType":"WhileStatement","src":"20902:171:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"21087:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21091:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21087:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6473,"nodeType":"IfStatement","src":"21083:476:11","trueBody":{"id":6472,"nodeType":"Block","src":"21094:465:11","statements":[{"body":{"id":6453,"nodeType":"Block","src":"21262:122:11","statements":[{"expression":{"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6443,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"21341:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6445,"indexExpression":{"id":6444,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"21349:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21341:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6446,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"21354:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6450,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6447,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"21362:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"21366:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21354:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21341:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6452,"nodeType":"ExpressionStatement","src":"21341:27:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6434,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"21233:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6435,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"21237:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21245:6:11","memberName":"length","nodeType":"MemberAccess","src":"21237:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"21254:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21237:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21233:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6454,"initializationExpression":{"assignments":[6431],"declarations":[{"constant":false,"id":6431,"mutability":"mutable","name":"j","nameLocation":"21226:1:11","nodeType":"VariableDeclaration","scope":6454,"src":"21218:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6430,"name":"uint256","nodeType":"ElementaryTypeName","src":"21218:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6433,"initialValue":{"hexValue":"30","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21230:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21218:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21257:3:11","subExpression":{"id":6440,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"21257:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6442,"nodeType":"ExpressionStatement","src":"21257:3:11"},"nodeType":"ForStatement","src":"21213:171:11"},{"body":{"id":6470,"nodeType":"Block","src":"21430:118:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6465,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"21519:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21527:3:11","memberName":"pop","nodeType":"MemberAccess","src":"21519:11:11","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21519:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6469,"nodeType":"ExpressionStatement","src":"21519:13:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"21418:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"21422:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21418:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6471,"initializationExpression":{"assignments":[6456],"declarations":[{"constant":false,"id":6456,"mutability":"mutable","name":"k","nameLocation":"21411:1:11","nodeType":"VariableDeclaration","scope":6471,"src":"21403:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6455,"name":"uint256","nodeType":"ElementaryTypeName","src":"21403:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6458,"initialValue":{"hexValue":"30","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21415:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21403:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21425:3:11","subExpression":{"id":6462,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"21425:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6464,"nodeType":"ExpressionStatement","src":"21425:3:11"},"nodeType":"ForStatement","src":"21398:150:11"}]}},{"expression":{"arguments":[{"id":6477,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"21584:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6474,"name":"history","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"21571:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21579:4:11","memberName":"push","nodeType":"MemberAccess","src":"21571:12:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21571:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6479,"nodeType":"ExpressionStatement","src":"21571:19:11"},{"eventCall":{"arguments":[{"id":6481,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"21737:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6482,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"21743:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6480,"name":"EnrollmentRecorded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"21718:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21718:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6484,"nodeType":"EmitStatement","src":"21713:36:11"}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"19995:277:11","text":" @dev Records the enrollment of a user in a mission.\n This function is called when a user enrolls in a mission.\n It updates the user's enrollment history and emits an event.\n @param user The address of the user enrolling in the mission."},"functionSelector":"c17f9e59","id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"recordEnrollment","nameLocation":"20287:16:11","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"user","nameLocation":"20312:4:11","nodeType":"VariableDeclaration","scope":6486,"src":"20304:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6373,"name":"address","nodeType":"ElementaryTypeName","src":"20304:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20303:14:11"},"returnParameters":{"id":6376,"nodeType":"ParameterList","parameters":[],"src":"20359:0:11"},"scope":8483,"src":"20278:1560:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6648,"nodeType":"Block","src":"22836:2315:11","statements":[{"assignments":[6505],"declarations":[{"constant":false,"id":6505,"mutability":"mutable","name":"nowTs","nameLocation":"22855:5:11","nodeType":"VariableDeclaration","scope":6648,"src":"22847:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6504,"name":"uint256","nodeType":"ElementaryTypeName","src":"22847:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6508,"initialValue":{"expression":{"id":6506,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22863:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22869:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"22863:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22847:31:11"},{"assignments":[6513],"declarations":[{"constant":false,"id":6513,"mutability":"mutable","name":"h","nameLocation":"22975:1:11","nodeType":"VariableDeclaration","scope":6648,"src":"22957:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6511,"name":"uint256","nodeType":"ElementaryTypeName","src":"22957:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6512,"nodeType":"ArrayTypeName","src":"22957:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6517,"initialValue":{"baseExpression":{"id":6514,"name":"_enrollmentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"22979:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6516,"indexExpression":{"id":6515,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"22998:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22979:26:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22957:48:11"},{"assignments":[6519],"declarations":[{"constant":false,"id":6519,"mutability":"mutable","name":"weeklyCount","nameLocation":"23085:11:11","nodeType":"VariableDeclaration","scope":6648,"src":"23077:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"23077:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6520,"nodeType":"VariableDeclarationStatement","src":"23077:19:11"},{"assignments":[6522],"declarations":[{"constant":false,"id":6522,"mutability":"mutable","name":"monthlyCount","nameLocation":"23209:12:11","nodeType":"VariableDeclaration","scope":6648,"src":"23201:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6521,"name":"uint256","nodeType":"ElementaryTypeName","src":"23201:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6523,"nodeType":"VariableDeclarationStatement","src":"23201:20:11"},{"assignments":[6525],"declarations":[{"constant":false,"id":6525,"mutability":"mutable","name":"earliest7d","nameLocation":"23334:10:11","nodeType":"VariableDeclaration","scope":6648,"src":"23326:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6524,"name":"uint256","nodeType":"ElementaryTypeName","src":"23326:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6526,"nodeType":"VariableDeclarationStatement","src":"23326:18:11"},{"assignments":[6528],"declarations":[{"constant":false,"id":6528,"mutability":"mutable","name":"earliest30d","nameLocation":"23467:11:11","nodeType":"VariableDeclaration","scope":6648,"src":"23459:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6527,"name":"uint256","nodeType":"ElementaryTypeName","src":"23459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6529,"nodeType":"VariableDeclarationStatement","src":"23459:19:11"},{"body":{"id":6590,"nodeType":"Block","src":"23628:681:11","statements":[{"assignments":[6541],"declarations":[{"constant":false,"id":6541,"mutability":"mutable","name":"t","nameLocation":"23725:1:11","nodeType":"VariableDeclaration","scope":6590,"src":"23717:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6540,"name":"uint256","nodeType":"ElementaryTypeName","src":"23717:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6545,"initialValue":{"baseExpression":{"id":6542,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"23729:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6544,"indexExpression":{"id":6543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"23731:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23717:16:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6546,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"23752:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3330","id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23756:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"23752:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6549,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"23766:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23752:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6589,"nodeType":"IfStatement","src":"23748:550:11","trueBody":{"id":6588,"nodeType":"Block","src":"23773:525:11","statements":[{"expression":{"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"23881:14:11","subExpression":{"id":6551,"name":"monthlyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"23883:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6553,"nodeType":"ExpressionStatement","src":"23881:14:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6554,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"23918:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23933:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23918:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6557,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"23938:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6558,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"23942:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23938:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23918:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6565,"nodeType":"IfStatement","src":"23914:56:11","trueBody":{"expression":{"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6561,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"23955:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6562,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"23969:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23955:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6564,"nodeType":"ExpressionStatement","src":"23955:15:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6566,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"24063:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24067:6:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"24063:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6569,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"24076:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24063:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6587,"nodeType":"IfStatement","src":"24059:224:11","trueBody":{"id":6586,"nodeType":"Block","src":"24083:200:11","statements":[{"expression":{"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"24106:13:11","subExpression":{"id":6571,"name":"weeklyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"24108:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6573,"nodeType":"ExpressionStatement","src":"24106:13:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6574,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"24146:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24160:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24146:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6577,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"24165:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6578,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"24169:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24165:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24146:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6585,"nodeType":"IfStatement","src":"24142:53:11","trueBody":{"expression":{"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6581,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"24181:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6582,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"24194:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24181:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6584,"nodeType":"ExpressionStatement","src":"24181:14:11"}}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"23609:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6534,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"23613:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23615:6:11","memberName":"length","nodeType":"MemberAccess","src":"23613:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23609:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6591,"initializationExpression":{"assignments":[6531],"declarations":[{"constant":false,"id":6531,"mutability":"mutable","name":"i","nameLocation":"23606:1:11","nodeType":"VariableDeclaration","scope":6591,"src":"23598:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6530,"name":"uint256","nodeType":"ElementaryTypeName","src":"23598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6532,"nodeType":"VariableDeclarationStatement","src":"23598:9:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"23623:3:11","subExpression":{"id":6537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"23625:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6539,"nodeType":"ExpressionStatement","src":"23623:3:11"},"nodeType":"ForStatement","src":"23593:716:11"},{"expression":{"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6592,"name":"weekUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"24319:8:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6595,"name":"weeklyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"24338:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24332:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6593,"name":"uint8","nodeType":"ElementaryTypeName","src":"24332:5:11","typeDescriptions":{}}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24332:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"24319:31:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6598,"nodeType":"ExpressionStatement","src":"24319:31:11"},{"expression":{"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6599,"name":"weekMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"24433:7:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6600,"name":"weeklyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"24446:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"24433:24:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6602,"nodeType":"ExpressionStatement","src":"24433:24:11"},{"expression":{"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6603,"name":"monthUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"24546:9:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6606,"name":"monthlyCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"24565:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24559:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6604,"name":"uint8","nodeType":"ElementaryTypeName","src":"24559:5:11","typeDescriptions":{}}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24559:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"24546:32:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6609,"nodeType":"ExpressionStatement","src":"24546:32:11"},{"expression":{"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6610,"name":"monthMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"24661:8:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6611,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"24674:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"24661:25:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6613,"nodeType":"ExpressionStatement","src":"24661:25:11"},{"expression":{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"secToWeek","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"24775:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6615,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"24788:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24803:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24788:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6619,"name":"earliest7d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"24811:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"37","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24825:6:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"24811:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6622,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"24834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24811:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24788:51:11","trueExpression":{"hexValue":"30","id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24807:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24775:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6626,"nodeType":"ExpressionStatement","src":"24775:64:11"},{"expression":{"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6627,"name":"secToMonth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"24900:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6628,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"24913:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24928:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24913:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"earliest30d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"24936:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3330","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24950:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"24936:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6635,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"24960:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24936:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24913:52:11","trueExpression":{"hexValue":"30","id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24932:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24900:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6639,"nodeType":"ExpressionStatement","src":"24900:65:11"},{"expression":{"components":[{"id":6640,"name":"weekUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"25034:8:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6641,"name":"weekMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"25044:7:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6642,"name":"monthUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"25053:9:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6643,"name":"monthMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"25064:8:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6644,"name":"secToWeek","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"25074:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6645,"name":"secToMonth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"25085:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25033:63:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint8,uint8,uint8,uint8,uint256,uint256)"}},"functionReturnParameters":6503,"id":6647,"nodeType":"Return","src":"25026:70:11"}]},"documentation":{"id":6487,"nodeType":"StructuredDocumentation","src":"21846:776:11","text":" @dev Returns the player's enrollment limits and time until next slots.\n This function calculates the number of enrollments a player has made in the last week and month,\n and returns the limits and time until the next slots.\n @param player The address of the player to check.\n @return weekUsed The number of enrollments used in the last week.\n @return weekMax The maximum number of enrollments allowed in a week.\n @return monthUsed The number of enrollments used in the last month.\n @return monthMax The maximum number of enrollments allowed in a month.\n @return secToWeek The number of seconds until the next weekly slot.\n @return secToMonth The number of seconds until the next monthly slot."},"functionSelector":"cbf2080d","id":6649,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerLimits","nameLocation":"22637:15:11","nodeType":"FunctionDefinition","parameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"player","nameLocation":"22661:6:11","nodeType":"VariableDeclaration","scope":6649,"src":"22653:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6488,"name":"address","nodeType":"ElementaryTypeName","src":"22653:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22652:16:11"},"returnParameters":{"id":6503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"weekUsed","nameLocation":"22739:8:11","nodeType":"VariableDeclaration","scope":6649,"src":"22733:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6491,"name":"uint8","nodeType":"ElementaryTypeName","src":"22733:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6494,"mutability":"mutable","name":"weekMax","nameLocation":"22755:7:11","nodeType":"VariableDeclaration","scope":6649,"src":"22749:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6493,"name":"uint8","nodeType":"ElementaryTypeName","src":"22749:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6496,"mutability":"mutable","name":"monthUsed","nameLocation":"22770:9:11","nodeType":"VariableDeclaration","scope":6649,"src":"22764:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6495,"name":"uint8","nodeType":"ElementaryTypeName","src":"22764:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6498,"mutability":"mutable","name":"monthMax","nameLocation":"22787:8:11","nodeType":"VariableDeclaration","scope":6649,"src":"22781:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6497,"name":"uint8","nodeType":"ElementaryTypeName","src":"22781:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6500,"mutability":"mutable","name":"secToWeek","nameLocation":"22805:9:11","nodeType":"VariableDeclaration","scope":6649,"src":"22797:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6499,"name":"uint256","nodeType":"ElementaryTypeName","src":"22797:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6502,"mutability":"mutable","name":"secToMonth","nameLocation":"22824:10:11","nodeType":"VariableDeclaration","scope":6649,"src":"22816:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"22816:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22732:103:11"},"scope":8483,"src":"22628:2523:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6685,"nodeType":"Block","src":"25520:510:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6658,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"25539:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25558:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25550:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6659,"name":"address","nodeType":"ElementaryTypeName","src":"25550:7:11","typeDescriptions":{}}},"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25550:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25539:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25563:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":6657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25531:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25531:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6666,"nodeType":"ExpressionStatement","src":"25531:50:11"},{"expression":{"arguments":[{"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25655:20:11","subExpression":{"baseExpression":{"id":6668,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"25656:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6670,"indexExpression":{"id":6669,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"25667:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25656:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920617574686f72697a6564","id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25679:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2","typeString":"literal_string \"Already authorized\""},"value":"Already authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2","typeString":"literal_string \"Already authorized\""}],"id":6667,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"25647:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25647:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6674,"nodeType":"ExpressionStatement","src":"25647:53:11"},{"expression":{"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6675,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"25780:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6677,"indexExpression":{"id":6676,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"25791:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25780:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25802:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"25780:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6680,"nodeType":"ExpressionStatement","src":"25780:26:11"},{"eventCall":{"arguments":[{"id":6682,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"25932:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6681,"name":"AuthorizedAddressAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"25909:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25909:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6684,"nodeType":"EmitStatement","src":"25904:36:11"}]},"documentation":{"id":6650,"nodeType":"StructuredDocumentation","src":"25284:127:11","text":" @dev Adds an address to the list of authorized addresses.\n @param account The address to authorize."},"functionSelector":"42f1181e","id":6686,"implemented":true,"kind":"function","modifiers":[{"id":6655,"kind":"modifierInvocation","modifierName":{"id":6654,"name":"onlyOwnerOrAuthorized","nameLocations":["25498:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":5874,"src":"25498:21:11"},"nodeType":"ModifierInvocation","src":"25498:21:11"}],"name":"addAuthorizedAddress","nameLocation":"25426:20:11","nodeType":"FunctionDefinition","parameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"account","nameLocation":"25455:7:11","nodeType":"VariableDeclaration","scope":6686,"src":"25447:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6651,"name":"address","nodeType":"ElementaryTypeName","src":"25447:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25446:17:11"},"returnParameters":{"id":6656,"nodeType":"ParameterList","parameters":[],"src":"25520:0:11"},"scope":8483,"src":"25417:613:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6721,"nodeType":"Block","src":"26275:508:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"26294:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26313:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26305:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6696,"name":"address","nodeType":"ElementaryTypeName","src":"26305:7:11","typeDescriptions":{}}},"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26305:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26294:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26318:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":6694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"26286:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26286:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6703,"nodeType":"ExpressionStatement","src":"26286:50:11"},{"expression":{"arguments":[{"baseExpression":{"id":6705,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"26410:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6707,"indexExpression":{"id":6706,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"26421:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26410:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26434:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":6704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"26402:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26402:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6710,"nodeType":"ExpressionStatement","src":"26402:49:11"},{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6711,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"26533:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6713,"indexExpression":{"id":6712,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"26544:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26533:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26555:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"26533:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6716,"nodeType":"ExpressionStatement","src":"26533:27:11"},{"eventCall":{"arguments":[{"id":6718,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"26688:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6717,"name":"AuthorizedAddressRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"26663:24:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26663:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"EmitStatement","src":"26658:38:11"}]},"documentation":{"id":6687,"nodeType":"StructuredDocumentation","src":"26038:128:11","text":" @dev Removes authorization for an address.\n @param account The address to remove authorization from."},"functionSelector":"70712939","id":6722,"implemented":true,"kind":"function","modifiers":[{"id":6692,"kind":"modifierInvocation","modifierName":{"id":6691,"name":"onlyOwnerOrAuthorized","nameLocations":["26253:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":5874,"src":"26253:21:11"},"nodeType":"ModifierInvocation","src":"26253:21:11"}],"name":"removeAuthorizedAddress","nameLocation":"26181:23:11","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"account","nameLocation":"26213:7:11","nodeType":"VariableDeclaration","scope":6722,"src":"26205:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6688,"name":"address","nodeType":"ElementaryTypeName","src":"26205:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26204:17:11"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[],"src":"26275:0:11"},"scope":8483,"src":"26172:611:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6766,"nodeType":"Block","src":"27159:469:11","statements":[{"assignments":[6731],"declarations":[{"constant":false,"id":6731,"mutability":"mutable","name":"nowTs","nameLocation":"27178:5:11","nodeType":"VariableDeclaration","scope":6766,"src":"27170:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6730,"name":"uint256","nodeType":"ElementaryTypeName","src":"27170:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6734,"initialValue":{"expression":{"id":6732,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"27186:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"27186:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27170:31:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"27280:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27300:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27292:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6737,"name":"address","nodeType":"ElementaryTypeName","src":"27292:7:11","typeDescriptions":{}}},"id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27292:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27280:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e6577206f776e6572","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27304:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b","typeString":"literal_string \"Invalid new owner\""},"value":"Invalid new owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77d807957e6ef327ac3d947f90cb9cb99612224c7bf00033b9c2af3945d5174b","typeString":"literal_string \"Invalid new owner\""}],"id":6735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"27272:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27272:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6744,"nodeType":"ExpressionStatement","src":"27272:52:11"},{"expression":{"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6745,"name":"proposedNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"27388:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6746,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"27407:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27388:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6748,"nodeType":"ExpressionStatement","src":"27388:27:11"},{"expression":{"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6749,"name":"proposalProposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"27426:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27445:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27449:6:11","memberName":"sender","nodeType":"MemberAccess","src":"27445:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27426:29:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6753,"nodeType":"ExpressionStatement","src":"27426:29:11"},{"expression":{"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6754,"name":"proposalTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"27466:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6755,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"27486:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27492:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"27486:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27466:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6758,"nodeType":"ExpressionStatement","src":"27466:35:11"},{"eventCall":{"arguments":[{"expression":{"id":6760,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27543:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27547:6:11","memberName":"sender","nodeType":"MemberAccess","src":"27543:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6762,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"27555:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6763,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"27565:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6759,"name":"OwnershipTransferProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"27517:25:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27517:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6765,"nodeType":"EmitStatement","src":"27512:59:11"}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"26791:259:11","text":" @dev Proposes a transfer of ownership to a new address.\n @param newOwner The address of the new owner.\n If the owner is not available anymore or lost access, this function allows an authorized address to propose a new owner."},"functionSelector":"21040fc3","id":6767,"implemented":true,"kind":"function","modifiers":[{"id":6728,"kind":"modifierInvocation","modifierName":{"id":6727,"name":"onlyOwnerOrAuthorized","nameLocations":["27137:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":5874,"src":"27137:21:11"},"nodeType":"ModifierInvocation","src":"27137:21:11"}],"name":"proposeOwnershipTransfer","nameLocation":"27065:24:11","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"newOwner","nameLocation":"27098:8:11","nodeType":"VariableDeclaration","scope":6767,"src":"27090:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6724,"name":"address","nodeType":"ElementaryTypeName","src":"27090:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27089:18:11"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[],"src":"27159:0:11"},"scope":8483,"src":"27056:572:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6816,"nodeType":"Block","src":"27909:1224:11","statements":[{"assignments":[6774],"declarations":[{"constant":false,"id":6774,"mutability":"mutable","name":"nowTs","nameLocation":"27928:5:11","nodeType":"VariableDeclaration","scope":6816,"src":"27920:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6773,"name":"uint256","nodeType":"ElementaryTypeName","src":"27920:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6777,"initialValue":{"expression":{"id":6775,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"27936:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27942:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"27936:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27920:31:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6779,"name":"proposalProposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"28062:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6780,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28082:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28086:6:11","memberName":"sender","nodeType":"MemberAccess","src":"28082:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28062:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420636f6e6669726d20796f7572206f776e2070726f706f73616c","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28094:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e72b8bb4f797de695fe6ff44f9d8e8a247a6b1ad8433f1c05ed756606e1e88bd","typeString":"literal_string \"Cannot confirm your own proposal\""},"value":"Cannot confirm your own proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e72b8bb4f797de695fe6ff44f9d8e8a247a6b1ad8433f1c05ed756606e1e88bd","typeString":"literal_string \"Cannot confirm your own proposal\""}],"id":6778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"28054:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28054:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6785,"nodeType":"ExpressionStatement","src":"28054:75:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6787,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"28211:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28217:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"28211:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"proposalTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"28230:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6790,"name":"OWNERSHIP_PROPOSAL_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"28250:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28230:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28211:64:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c2065787069726564","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28277:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_01a705e410a1149c996b4c69a0f0f64f9427d15b62a650a298a1d030b5a3d544","typeString":"literal_string \"Proposal expired\""},"value":"Proposal expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01a705e410a1149c996b4c69a0f0f64f9427d15b62a650a298a1d030b5a3d544","typeString":"literal_string \"Proposal expired\""}],"id":6786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"28203:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28203:93:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6795,"nodeType":"ExpressionStatement","src":"28203:93:11"},{"expression":{"arguments":[{"id":6797,"name":"proposedNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"28425:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6796,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"28406:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28406:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6799,"nodeType":"ExpressionStatement","src":"28406:36:11"},{"eventCall":{"arguments":[{"expression":{"id":6801,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28587:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28591:6:11","memberName":"sender","nodeType":"MemberAccess","src":"28587:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6803,"name":"proposedNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"28599:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6804,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"28617:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6800,"name":"OwnershipTransferConfirmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"28560:26:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28560:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6806,"nodeType":"EmitStatement","src":"28555:68:11"},{"expression":{"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"28730:23:11","subExpression":{"id":6807,"name":"proposedNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"28737:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6809,"nodeType":"ExpressionStatement","src":"28730:23:11"},{"expression":{"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"28859:23:11","subExpression":{"id":6810,"name":"proposalProposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"28866:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6812,"nodeType":"ExpressionStatement","src":"28859:23:11"},{"expression":{"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"28996:24:11","subExpression":{"id":6813,"name":"proposalTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"29003:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6815,"nodeType":"ExpressionStatement","src":"28996:24:11"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"27636:164:11","text":" @dev Confirms the ownership transfer to a new address.\n This function allows a 2nd authorized address to confirm the ownership transfer."},"functionSelector":"7200b829","id":6817,"implemented":true,"kind":"function","modifiers":[{"id":6771,"kind":"modifierInvocation","modifierName":{"id":6770,"name":"onlyOwnerOrAuthorized","nameLocations":["27887:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":5874,"src":"27887:21:11"},"nodeType":"ModifierInvocation","src":"27887:21:11"}],"name":"confirmOwnershipTransfer","nameLocation":"27815:24:11","nodeType":"FunctionDefinition","parameters":{"id":6769,"nodeType":"ParameterList","parameters":[],"src":"27839:2:11"},"returnParameters":{"id":6772,"nodeType":"ParameterList","parameters":[],"src":"27909:0:11"},"scope":8483,"src":"27806:1327:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7037,"nodeType":"Block","src":"30978:4438:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6851,"name":"_missionRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"31001:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"35","id":6852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31028:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31001:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e20726f756e6473206d7573742062652067726561746572207468616e206f7220657175616c20746f2035","id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31053:51:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa393505bb2ec04b1951f2a2e31469936d6c1e6f9f7d006e4dc241a5e5ef0c0f","typeString":"literal_string \"Mission rounds must be greater than or equal to 5\""},"value":"Mission rounds must be greater than or equal to 5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa393505bb2ec04b1951f2a2e31469936d6c1e6f9f7d006e4dc241a5e5ef0c0f","typeString":"literal_string \"Mission rounds must be greater than or equal to 5\""}],"id":6850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"30993:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30993:112:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6856,"nodeType":"ExpressionStatement","src":"30993:112:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"_enrollmentMinPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"31197:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6859,"name":"_missionRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"31224:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"31197:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e696d756d20706c6179657273206d7573742062652067726561746572207468616e206f7220657175616c20746f206d697373696f6e20726f756e6473","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31249:65:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c0a63f2f94f957fdb1e48ac22da511fb5400c4ccbba28a7afbeb0f6c17d13b6","typeString":"literal_string \"Minimum players must be greater than or equal to mission rounds\""},"value":"Minimum players must be greater than or equal to mission rounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c0a63f2f94f957fdb1e48ac22da511fb5400c4ccbba28a7afbeb0f6c17d13b6","typeString":"literal_string \"Minimum players must be greater than or equal to mission rounds\""}],"id":6857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31189:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31189:126:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6863,"nodeType":"ExpressionStatement","src":"31189:126:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6865,"name":"_enrollmentMaxPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"31400:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6866,"name":"_enrollmentMinPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"31427:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"31400:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178696d756d20706c6179657273206d7573742062652067726561746572207468616e206f7220657175616c20746f206d696e696d756d20706c6179657273","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31452:66:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_950214f5cea83e46b618c4e698ecc170d12453fa70ba6f0d50702a0ffb51b6cf","typeString":"literal_string \"Maximum players must be greater than or equal to minimum players\""},"value":"Maximum players must be greater than or equal to minimum players"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_950214f5cea83e46b618c4e698ecc170d12453fa70ba6f0d50702a0ffb51b6cf","typeString":"literal_string \"Maximum players must be greater than or equal to minimum players\""}],"id":6864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31392:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31392:127:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6870,"nodeType":"ExpressionStatement","src":"31392:127:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"_enrollmentStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"31604:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6873,"name":"_enrollmentEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"31631:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31604:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e726f6c6c6d656e74207374617274206d757374206265206265666f726520656e64","id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31656:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b534dc46f7afa130fce2d7788fd1876a21d8365ab7bfed82e93e4bebc4d2b22b","typeString":"literal_string \"Enrollment start must be before end\""},"value":"Enrollment start must be before end"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b534dc46f7afa130fce2d7788fd1876a21d8365ab7bfed82e93e4bebc4d2b22b","typeString":"literal_string \"Enrollment start must be before end\""}],"id":6871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31596:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31596:98:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6877,"nodeType":"ExpressionStatement","src":"31596:98:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6879,"name":"_missionStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"31786:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6880,"name":"_enrollmentEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"31813:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31786:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e207374617274206d757374206265206f6e206f7220616674657220656e726f6c6c6d656e7420656e64","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31838:50:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c05feb5c2c7cbb44a148b57ed174f82a35952e728f585a3d5442a00a9b05e2b6","typeString":"literal_string \"Mission start must be on or after enrollment end\""},"value":"Mission start must be on or after enrollment end"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c05feb5c2c7cbb44a148b57ed174f82a35952e728f585a3d5442a00a9b05e2b6","typeString":"literal_string \"Mission start must be on or after enrollment end\""}],"id":6878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31778:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31778:111:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6884,"nodeType":"ExpressionStatement","src":"31778:111:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6886,"name":"_missionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"31981:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6887,"name":"_missionStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"32008:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31981:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e207374617274206d757374206265206265666f726520656e64","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32033:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f0b914485830029ea4ddbd7b4e8f7ccbcf99fc4177bff42bd57bf6bee9744896","typeString":"literal_string \"Mission start must be before end\""},"value":"Mission start must be before end"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f0b914485830029ea4ddbd7b4e8f7ccbcf99fc4177bff42bd57bf6bee9744896","typeString":"literal_string \"Mission start must be before end\""}],"id":6885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"31973:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31973:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6891,"nodeType":"ExpressionStatement","src":"31973:95:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"_enrollmentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"32160:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32187:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32160:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e726f6c6c6d656e7420616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32212:45:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_721131c7c747b6fcac55d6be848338e45ac0d10c828a5d3976f706424aa570aa","typeString":"literal_string \"Enrollment amount must be greater than zero\""},"value":"Enrollment amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_721131c7c747b6fcac55d6be848338e45ac0d10c828a5d3976f706424aa570aa","typeString":"literal_string \"Enrollment amount must be greater than zero\""}],"id":6892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"32152:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32152:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6898,"nodeType":"ExpressionStatement","src":"32152:106:11"},{"assignments":[6900],"declarations":[{"constant":false,"id":6900,"mutability":"mutable","name":"clone","nameLocation":"32343:5:11","nodeType":"VariableDeclaration","scope":7037,"src":"32335:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6899,"name":"address","nodeType":"ElementaryTypeName","src":"32335:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6901,"name":"missionImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"32351:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32373:5:11","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":170,"src":"32351:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$attached_to$_t_address_$","typeString":"function (address) returns (address)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32351:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"32335:45:11"},{"expression":{"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"32475:33:11","subExpression":{"baseExpression":{"id":6905,"name":"missionTypeCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"32475:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":6907,"indexExpression":{"id":6906,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"32493:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"32475:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6909,"nodeType":"ExpressionStatement","src":"32475:33:11"},{"assignments":[6911],"declarations":[{"constant":false,"id":6911,"mutability":"mutable","name":"_finalName","nameLocation":"32625:10:11","nodeType":"VariableDeclaration","scope":7037,"src":"32611:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6910,"name":"string","nodeType":"ElementaryTypeName","src":"32611:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6936,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6914,"name":"_missionName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"32644:12:11","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32638:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6912,"name":"bytes","nodeType":"ElementaryTypeName","src":"32638:5:11","typeDescriptions":{}}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32638:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32658:6:11","memberName":"length","nodeType":"MemberAccess","src":"32638:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32667:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32638:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"arguments":[{"id":6925,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"32900:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}],"id":6924,"name":"_toHumanReadableName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"32879:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_MissionType_$5768_$returns$_t_string_memory_ptr_$","typeString":"function (enum MissionType) pure returns (string memory)"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32879:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"202d20","id":6927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32936:5:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e7b109ea8329776b4d3d2e2c2bf39b3f7e02ce64c66994d3a0db4ff2e229f54","typeString":"literal_string \" - \""},"value":" - "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":6928,"name":"missionTypeCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"32964:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":6930,"indexExpression":{"id":6929,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"32982:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32964:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32996:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":932,"src":"32964:40:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32964:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_9e7b109ea8329776b4d3d2e2c2bf39b3f7e02ce64c66994d3a0db4ff2e229f54","typeString":"literal_string \" - \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6922,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"32840:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32844:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"32840:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32840:220:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32833:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6920,"name":"string","nodeType":"ElementaryTypeName","src":"32833:6:11","typeDescriptions":{}}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32833:228:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"32638:423:11","trueExpression":{"id":6919,"name":"_missionName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"32725:12:11","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"32611:450:11"},{"expression":{"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6937,"name":"isMission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"33078:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6939,"indexExpression":{"id":6938,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"33088:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"33078:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"33101:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"33078:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6942,"nodeType":"ExpressionStatement","src":"33078:27:11"},{"expression":{"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6943,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"33170:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":6945,"indexExpression":{"id":6944,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"33184:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"33170:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6946,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"33193:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33200:7:11","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":5770,"src":"33193:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"33170:37:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":6949,"nodeType":"ExpressionStatement","src":"33170:37:11"},{"expression":{"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6950,"name":"missionNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"33287:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":6952,"indexExpression":{"id":6951,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"33300:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"33287:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6953,"name":"_finalName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"33309:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"33287:32:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6955,"nodeType":"ExpressionStatement","src":"33287:32:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6966,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"33480:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33480:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6970,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"33577:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}],"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33569:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6968,"name":"address","nodeType":"ElementaryTypeName","src":"33569:7:11","typeDescriptions":{}}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33569:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6972,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"33646:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},{"id":6973,"name":"_enrollmentStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"33742:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6974,"name":"_enrollmentEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"33840:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6975,"name":"_enrollmentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"33936:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6976,"name":"_enrollmentMinPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"34030:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6977,"name":"_enrollmentMaxPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"34131:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6978,"name":"_missionStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"34231:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6979,"name":"_missionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"34326:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6980,"name":"_missionRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"34419:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6981,"name":"_finalName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"34527:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"arguments":[{"arguments":[{"id":6959,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"33436:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33428:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6957,"name":"address","nodeType":"ElementaryTypeName","src":"33428:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33428:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":6956,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"33420:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33420:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33444:10:11","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":8899,"src":"33420:34:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_enum$_MissionType_$5768_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,enum MissionType,uint256,uint256,uint256,uint8,uint8,uint256,uint256,uint8,string memory) payable external"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":6963,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33462:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33466:5:11","memberName":"value","nodeType":"MemberAccess","src":"33462:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"33420:52:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_enum$_MissionType_$5768_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$returns$__$value","typeString":"function (address,address,enum MissionType,uint256,uint256,uint256,uint8,uint8,uint256,uint256,uint8,string memory) payable external"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33420:1229:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6983,"nodeType":"ExpressionStatement","src":"33420:1229:11"},{"expression":{"arguments":[{"id":6987,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"34676:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6984,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"34662:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34671:4:11","memberName":"push","nodeType":"MemberAccess","src":"34662:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34662:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6989,"nodeType":"ExpressionStatement","src":"34662:20:11"},{"eventCall":{"arguments":[{"id":6991,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"34794:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6992,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"34801:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}],"id":6990,"name":"MissionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"34779:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_MissionType_$5768_$returns$__$","typeString":"function (address,enum MissionType)"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34779:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6994,"nodeType":"EmitStatement","src":"34774:40:11"},{"assignments":[6996],"declarations":[{"constant":false,"id":6996,"mutability":"mutable","name":"allocation","nameLocation":"34939:10:11","nodeType":"VariableDeclaration","scope":7037,"src":"34931:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"34931:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7002,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6997,"name":"reservedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"34952:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":6999,"indexExpression":{"id":6998,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"34966:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34952:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34982:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"34952:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34931:52:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7003,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"35046:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35059:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35046:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7008,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"35072:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}],"id":7007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35064:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7006,"name":"address","nodeType":"ElementaryTypeName","src":"35064:7:11","typeDescriptions":{}}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35064:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35078:7:11","memberName":"balance","nodeType":"MemberAccess","src":"35064:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7011,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"35089:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35064:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"35046:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7032,"nodeType":"IfStatement","src":"35042:244:11","trueBody":{"id":7031,"nodeType":"Block","src":"35101:185:11","statements":[{"expression":{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7014,"name":"reservedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"35116:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":7016,"indexExpression":{"id":7015,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"35130:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"35116:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7017,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"35147:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35116:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7019,"nodeType":"ExpressionStatement","src":"35116:41:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7023,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"35188:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35180:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7021,"name":"address","nodeType":"ElementaryTypeName","src":"35180:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35180:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7020,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"35172:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35172:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35196:11:11","memberName":"increasePot","nodeType":"MemberAccess","referencedDeclaration":9442,"src":"35172:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7027,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"35215:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"35172:54:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35172:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7030,"nodeType":"ExpressionStatement","src":"35172:56:11"}]}},{"expression":{"components":[{"id":7033,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"35306:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7034,"name":"_finalName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"35313:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"35305:19:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_string_memory_ptr_$","typeString":"tuple(address,string memory)"}},"functionReturnParameters":6849,"id":7036,"nodeType":"Return","src":"35298:26:11"}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"29252:754:11","text":" @dev Creates a new mission with the specified parameters.\n @param _missionType          The type of the mission.\n @param _enrollmentStart      The start time for enrollment.\n @param _enrollmentEnd        The end time for enrollment.\n @param _enrollmentAmount     The amount required for enrollment.\n @param _enrollmentMinPlayers The minimum number of players required to start the mission.\n @param _enrollmentMaxPlayers The maxnimum number of players required to start the mission.\n @param _missionStart         The start time for the mission.\n @param _missionEnd           The end time for the mission.\n @param _missionRounds        The number of rounds in the mission."},"functionSelector":"72eecd21","id":7038,"implemented":true,"kind":"function","modifiers":[{"id":6842,"kind":"modifierInvocation","modifierName":{"id":6841,"name":"onlyOwnerOrAuthorized","nameLocations":["30910:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":5874,"src":"30910:21:11"},"nodeType":"ModifierInvocation","src":"30910:21:11"},{"id":6844,"kind":"modifierInvocation","modifierName":{"id":6843,"name":"nonReentrant","nameLocations":["30932:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"30932:12:11"},"nodeType":"ModifierInvocation","src":"30932:12:11"}],"name":"createMission","nameLocation":"30021:13:11","nodeType":"FunctionDefinition","parameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6821,"mutability":"mutable","name":"_missionType","nameLocation":"30062:12:11","nodeType":"VariableDeclaration","scope":7038,"src":"30046:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":6820,"nodeType":"UserDefinedTypeName","pathNode":{"id":6819,"name":"MissionType","nameLocations":["30046:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"30046:11:11"},"referencedDeclaration":5768,"src":"30046:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"},{"constant":false,"id":6823,"mutability":"mutable","name":"_enrollmentStart","nameLocation":"30134:16:11","nodeType":"VariableDeclaration","scope":7038,"src":"30118:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6822,"name":"uint256","nodeType":"ElementaryTypeName","src":"30118:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6825,"mutability":"mutable","name":"_enrollmentEnd","nameLocation":"30212:14:11","nodeType":"VariableDeclaration","scope":7038,"src":"30196:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6824,"name":"uint256","nodeType":"ElementaryTypeName","src":"30196:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6827,"mutability":"mutable","name":"_enrollmentAmount","nameLocation":"30288:17:11","nodeType":"VariableDeclaration","scope":7038,"src":"30272:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6826,"name":"uint256","nodeType":"ElementaryTypeName","src":"30272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6829,"mutability":"mutable","name":"_enrollmentMinPlayers","nameLocation":"30371:21:11","nodeType":"VariableDeclaration","scope":7038,"src":"30355:37:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6828,"name":"uint8","nodeType":"ElementaryTypeName","src":"30355:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6831,"mutability":"mutable","name":"_enrollmentMaxPlayers","nameLocation":"30479:21:11","nodeType":"VariableDeclaration","scope":7038,"src":"30463:37:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6830,"name":"uint8","nodeType":"ElementaryTypeName","src":"30463:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6833,"mutability":"mutable","name":"_missionStart","nameLocation":"30587:13:11","nodeType":"VariableDeclaration","scope":7038,"src":"30571:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"30571:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6835,"mutability":"mutable","name":"_missionEnd","nameLocation":"30666:11:11","nodeType":"VariableDeclaration","scope":7038,"src":"30650:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6834,"name":"uint256","nodeType":"ElementaryTypeName","src":"30650:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6837,"mutability":"mutable","name":"_missionRounds","nameLocation":"30743:14:11","nodeType":"VariableDeclaration","scope":7038,"src":"30727:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6836,"name":"uint8","nodeType":"ElementaryTypeName","src":"30727:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6839,"mutability":"mutable","name":"_missionName","nameLocation":"30827:12:11","nodeType":"VariableDeclaration","scope":7038,"src":"30811:28:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6838,"name":"string","nodeType":"ElementaryTypeName","src":"30811:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30035:857:11"},"returnParameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7038,"src":"30954:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6845,"name":"address","nodeType":"ElementaryTypeName","src":"30954:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7038,"src":"30963:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6847,"name":"string","nodeType":"ElementaryTypeName","src":"30963:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30953:24:11"},"scope":8483,"src":"30012:5404:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7072,"nodeType":"Block","src":"35642:409:11","statements":[{"expression":{"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7047,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"35647:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":7050,"indexExpression":{"expression":{"id":7048,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"35661:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35665:6:11","memberName":"sender","nodeType":"MemberAccess","src":"35661:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"35647:25:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7051,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"35675:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"35647:37:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7053,"nodeType":"ExpressionStatement","src":"35647:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7054,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"35737:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7055,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"35750:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35757:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"35750:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"35737:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7062,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"35898:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7063,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"35911:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35918:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"35911:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"35898:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7070,"nodeType":"IfStatement","src":"35894:150:11","trueBody":{"id":7069,"nodeType":"Block","src":"35926:118:11","statements":[{"expression":{"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"35941:22:11","subExpression":{"id":7066,"name":"totalMissionFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"35941:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7068,"nodeType":"ExpressionStatement","src":"35941:22:11"}]}},"id":7071,"nodeType":"IfStatement","src":"35733:311:11","trueBody":{"id":7061,"nodeType":"Block","src":"35766:122:11","statements":[{"expression":{"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"35781:23:11","subExpression":{"id":7058,"name":"totalMissionSuccesses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"35781:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7060,"nodeType":"ExpressionStatement","src":"35781:23:11"}]}}]},"documentation":{"id":7039,"nodeType":"StructuredDocumentation","src":"35424:119:11","text":" @dev Sets the status of a mission.\n @param newStatus The new status to set for the mission."},"functionSelector":"d8d6e8ff","id":7073,"implemented":true,"kind":"function","modifiers":[{"id":7045,"kind":"modifierInvocation","modifierName":{"id":7044,"name":"onlyMission","nameLocations":["35630:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5887,"src":"35630:11:11"},"nodeType":"ModifierInvocation","src":"35630:11:11"}],"name":"setMissionStatus","nameLocation":"35558:16:11","nodeType":"FunctionDefinition","parameters":{"id":7043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"newStatus","nameLocation":"35582:9:11","nodeType":"VariableDeclaration","scope":7073,"src":"35575:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":7041,"nodeType":"UserDefinedTypeName","pathNode":{"id":7040,"name":"Status","nameLocations":["35575:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"35575:6:11"},"referencedDeclaration":5778,"src":"35575:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"src":"35574:18:11"},"returnParameters":{"id":7046,"nodeType":"ParameterList","parameters":[],"src":"35642:0:11"},"scope":8483,"src":"35549:502:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7142,"nodeType":"Block","src":"36427:1259:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36446:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36450:5:11","memberName":"value","nodeType":"MemberAccess","src":"36446:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36458:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36446:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"36461:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":7084,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"36438:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36438:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7091,"nodeType":"ExpressionStatement","src":"36438:58:11"},{"assignments":[7093],"declarations":[{"constant":false,"id":7093,"mutability":"mutable","name":"isEndedMission","nameLocation":"36610:14:11","nodeType":"VariableDeclaration","scope":7142,"src":"36605:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7092,"name":"bool","nodeType":"ElementaryTypeName","src":"36605:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7109,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7094,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"36627:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":7097,"indexExpression":{"expression":{"id":7095,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36641:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36645:6:11","memberName":"sender","nodeType":"MemberAccess","src":"36641:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36627:25:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7098,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"36656:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36663:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"36656:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"36627:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7101,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"36674:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":7104,"indexExpression":{"expression":{"id":7102,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36688:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36692:6:11","memberName":"sender","nodeType":"MemberAccess","src":"36688:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36674:25:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7105,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"36703:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"36710:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"36703:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"36674:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36627:89:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"36605:111:11"},{"expression":{"arguments":[{"id":7111,"name":"isEndedMission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"36795:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206e6f742061206d697373696f6e","id":7112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"36811:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3da3acf1a9b09e881799cbffaa27ba1352d2bda7cb3adde397873c4ee913cbd0","typeString":"literal_string \"Caller not a mission\""},"value":"Caller not a mission"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3da3acf1a9b09e881799cbffaa27ba1352d2bda7cb3adde397873c4ee913cbd0","typeString":"literal_string \"Caller not a mission\""}],"id":7110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"36787:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36787:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7114,"nodeType":"ExpressionStatement","src":"36787:47:11"},{"expression":{"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7115,"name":"reservedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"36968:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":7117,"indexExpression":{"id":7116,"name":"missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"36982:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"36968:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":7118,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36998:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37002:5:11","memberName":"value","nodeType":"MemberAccess","src":"36998:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36968:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7121,"nodeType":"ExpressionStatement","src":"36968:39:11"},{"expression":{"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7122,"name":"totalMissionFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"37164:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":7123,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37185:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37189:5:11","memberName":"value","nodeType":"MemberAccess","src":"37185:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37164:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7126,"nodeType":"ExpressionStatement","src":"37164:30:11"},{"expression":{"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7127,"name":"totalOwnerEarnedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"37323:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37348:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37352:5:11","memberName":"value","nodeType":"MemberAccess","src":"37348:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37360:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"37348:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37323:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7133,"nodeType":"ExpressionStatement","src":"37323:38:11"},{"eventCall":{"arguments":[{"expression":{"id":7135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37542:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37546:5:11","memberName":"value","nodeType":"MemberAccess","src":"37542:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7137,"name":"missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7077,"src":"37553:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},{"expression":{"id":7138,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37566:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37570:6:11","memberName":"sender","nodeType":"MemberAccess","src":"37566:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7134,"name":"MissionFundsRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"37519:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_MissionType_$5768_$_t_address_$returns$__$","typeString":"function (uint256,enum MissionType,address)"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37519:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7141,"nodeType":"EmitStatement","src":"37514:63:11"}]},"documentation":{"id":7074,"nodeType":"StructuredDocumentation","src":"36177:130:11","text":" @dev Registers mission funds for a specific mission type.\n @param missionType The type of the mission."},"functionSelector":"a9bea789","id":7143,"implemented":true,"kind":"function","modifiers":[{"id":7080,"kind":"modifierInvocation","modifierName":{"id":7079,"name":"onlyMission","nameLocations":["36402:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5887,"src":"36402:11:11"},"nodeType":"ModifierInvocation","src":"36402:11:11"},{"id":7082,"kind":"modifierInvocation","modifierName":{"id":7081,"name":"nonReentrant","nameLocations":["36414:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"36414:12:11"},"nodeType":"ModifierInvocation","src":"36414:12:11"}],"name":"registerMissionFunds","nameLocation":"36322:20:11","nodeType":"FunctionDefinition","parameters":{"id":7078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7077,"mutability":"mutable","name":"missionType","nameLocation":"36355:11:11","nodeType":"VariableDeclaration","scope":7143,"src":"36343:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":7076,"nodeType":"UserDefinedTypeName","pathNode":{"id":7075,"name":"MissionType","nameLocations":["36343:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"36343:11:11"},"referencedDeclaration":5768,"src":"36343:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"}],"src":"36342:25:11"},"returnParameters":{"id":7083,"nodeType":"ParameterList","parameters":[],"src":"36427:0:11"},"scope":8483,"src":"36313:1373:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7182,"nodeType":"Block","src":"38082:422:11","statements":[{"assignments":[7156],"declarations":[{"constant":false,"id":7156,"mutability":"mutable","name":"breakdown","nameLocation":"38111:9:11","nodeType":"VariableDeclaration","scope":7182,"src":"38093:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":7154,"name":"uint256","nodeType":"ElementaryTypeName","src":"38093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7155,"length":{"hexValue":"37","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38101:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"38093:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"id":7157,"nodeType":"VariableDeclarationStatement","src":"38093:27:11"},{"body":{"id":7178,"nodeType":"Block","src":"38257:137:11","statements":[{"expression":{"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7168,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"38272:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"id":7170,"indexExpression":{"id":7169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"38282:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38272:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7171,"name":"reservedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"38287:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":7175,"indexExpression":{"arguments":[{"id":7173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"38313:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7172,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"38301:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38301:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38287:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38272:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7177,"nodeType":"ExpressionStatement","src":"38272:44:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"38245:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"37","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38249:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"38245:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7179,"initializationExpression":{"assignments":[7159],"declarations":[{"constant":false,"id":7159,"mutability":"mutable","name":"i","nameLocation":"38238:1:11","nodeType":"VariableDeclaration","scope":7179,"src":"38230:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7158,"name":"uint256","nodeType":"ElementaryTypeName","src":"38230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7161,"initialValue":{"hexValue":"30","id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38242:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"38230:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"38252:3:11","subExpression":{"id":7165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"38252:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7167,"nodeType":"ExpressionStatement","src":"38252:3:11"},"nodeType":"ForStatement","src":"38225:169:11"},{"expression":{"id":7180,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"38411:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7] memory"}},"functionReturnParameters":7150,"id":7181,"nodeType":"Return","src":"38404:16:11"}]},"documentation":{"id":7144,"nodeType":"StructuredDocumentation","src":"37694:268:11","text":" @dev Returns the breakdown of reserved funds for each mission type.\n This function returns an array containing the reserved funds for each mission type.\n @return breakdown An array containing the reserved funds for each mission type."},"functionSelector":"df4db463","id":7183,"implemented":true,"kind":"function","modifiers":[],"name":"reservedFundsBreakdown","nameLocation":"37977:22:11","nodeType":"FunctionDefinition","parameters":{"id":7145,"nodeType":"ParameterList","parameters":[],"src":"37999:2:11"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7183,"src":"38063:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_memory_ptr","typeString":"uint256[7]"},"typeName":{"baseType":{"id":7146,"name":"uint256","nodeType":"ElementaryTypeName","src":"38063:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7148,"length":{"hexValue":"37","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38071:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"ArrayTypeName","src":"38063:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$7_storage_ptr","typeString":"uint256[7]"}},"visibility":"internal"}],"src":"38062:19:11"},"scope":8483,"src":"37968:536:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7187,"nodeType":"Block","src":"38806:2:11","statements":[]},"documentation":{"id":7184,"nodeType":"StructuredDocumentation","src":"38512:199:11","text":" @dev Receives funds sent to the contract.\n This function is called when the contract receives CRO without any data.\n It allows the contract to accept CRO transfers."},"id":7188,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7185,"nodeType":"ParameterList","parameters":[],"src":"38724:2:11"},"returnParameters":{"id":7186,"nodeType":"ParameterList","parameters":[],"src":"38806:0:11"},"scope":8483,"src":"38717:91:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7192,"nodeType":"Block","src":"39107:2:11","statements":[]},"documentation":{"id":7189,"nodeType":"StructuredDocumentation","src":"38816:196:11","text":" @dev Fallback function to receive CRO.\n This function is called when the contract receives CRO without any data.\n It allows the contract to accept CRO transfers."},"id":7193,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7190,"nodeType":"ParameterList","parameters":[],"src":"39026:2:11"},"returnParameters":{"id":7191,"nodeType":"ParameterList","parameters":[],"src":"39107:0:11"},"scope":8483,"src":"39018:91:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7264,"nodeType":"Block","src":"39701:1049:11","statements":[{"assignments":[7204],"declarations":[{"constant":false,"id":7204,"mutability":"mutable","name":"mgrOwner","nameLocation":"39720:8:11","nodeType":"VariableDeclaration","scope":7264,"src":"39712:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7203,"name":"address","nodeType":"ElementaryTypeName","src":"39712:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7207,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"39731:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39731:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"39712:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7209,"name":"mgrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"39865:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39885:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39877:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7210,"name":"address","nodeType":"ElementaryTypeName","src":"39877:7:11","typeDescriptions":{}}},"id":7213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39877:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"39865:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d616e61676572206f776e6572","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"39889:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_99318da37b4016501c4c3f863dca477c9eb03a8d893f40ef131ef2086b5518b2","typeString":"literal_string \"Invalid manager owner\""},"value":"Invalid manager owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99318da37b4016501c4c3f863dca477c9eb03a8d893f40ef131ef2086b5518b2","typeString":"literal_string \"Invalid manager owner\""}],"id":7208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"39857:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39857:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7217,"nodeType":"ExpressionStatement","src":"39857:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7218,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"39995:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40005:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39995:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7230,"nodeType":"IfStatement","src":"39991:172:11","trueBody":{"id":7229,"nodeType":"Block","src":"40008:155:11","statements":[{"expression":{"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"40023:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":7224,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"40040:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}],"id":7223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40032:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7222,"name":"address","nodeType":"ElementaryTypeName","src":"40032:7:11","typeDescriptions":{}}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40032:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40046:7:11","memberName":"balance","nodeType":"MemberAccess","src":"40032:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40023:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7228,"nodeType":"ExpressionStatement","src":"40023:30:11"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7232,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"40181:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":7235,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"40199:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}],"id":7234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40191:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7233,"name":"address","nodeType":"ElementaryTypeName","src":"40191:7:11","typeDescriptions":{}}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40191:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40205:7:11","memberName":"balance","nodeType":"MemberAccess","src":"40191:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40181:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":7239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"40214:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":7231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"40173:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40173:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7241,"nodeType":"ExpressionStatement","src":"40173:64:11"},{"assignments":[7243,null],"declarations":[{"constant":false,"id":7243,"mutability":"mutable","name":"ok","nameLocation":"40330:2:11","nodeType":"VariableDeclaration","scope":7264,"src":"40325:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7242,"name":"bool","nodeType":"ElementaryTypeName","src":"40325:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7253,"initialValue":{"arguments":[{"hexValue":"","id":7251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"40378:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7246,"name":"mgrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"40346:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40338:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7244,"name":"address","nodeType":"ElementaryTypeName","src":"40338:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40338:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40356:4:11","memberName":"call","nodeType":"MemberAccess","src":"40338:22:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7249,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"40369:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"40338:39:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40338:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"40324:57:11"},{"expression":{"arguments":[{"id":7255,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"40494:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":7256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"40498:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":7254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"40486:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40486:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7258,"nodeType":"ExpressionStatement","src":"40486:30:11"},{"eventCall":{"arguments":[{"id":7260,"name":"mgrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"40641:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7261,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"40651:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7259,"name":"FundsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"40626:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40626:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7263,"nodeType":"EmitStatement","src":"40621:37:11"}]},"documentation":{"id":7194,"nodeType":"StructuredDocumentation","src":"39117:474:11","text":" @dev Withdraws funds from the MissionFactory contract.\n This function allows the owner or an authorized address to withdraw funds from the contract.\n This function shall only be called if the contract is not in use anymore and all missions have ended.\n It transfers the specified amount of funds to the owner of the MissionFactory contract.\n @param amount The amount of funds to withdraw. If 0, withdraws all available funds."},"functionSelector":"155dd5ee","id":7265,"implemented":true,"kind":"function","modifiers":[{"id":7199,"kind":"modifierInvocation","modifierName":{"id":7198,"name":"onlyOwner","nameLocations":["39678:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"39678:9:11"},"nodeType":"ModifierInvocation","src":"39678:9:11"},{"id":7201,"kind":"modifierInvocation","modifierName":{"id":7200,"name":"nonReentrant","nameLocations":["39688:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"39688:12:11"},"nodeType":"ModifierInvocation","src":"39688:12:11"}],"name":"withdrawFunds","nameLocation":"39606:13:11","nodeType":"FunctionDefinition","parameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7196,"mutability":"mutable","name":"amount","nameLocation":"39628:6:11","nodeType":"VariableDeclaration","scope":7265,"src":"39620:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7195,"name":"uint256","nodeType":"ElementaryTypeName","src":"39620:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39619:16:11"},"returnParameters":{"id":7202,"nodeType":"ParameterList","parameters":[],"src":"39701:0:11"},"scope":8483,"src":"39597:1153:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7422,"nodeType":"Block","src":"41449:2343:11","statements":[{"assignments":[7282],"declarations":[{"constant":false,"id":7282,"mutability":"mutable","name":"len","nameLocation":"41468:3:11","nodeType":"VariableDeclaration","scope":7422,"src":"41460:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"41460:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7285,"initialValue":{"expression":{"id":7283,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"41474:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41483:6:11","memberName":"length","nodeType":"MemberAccess","src":"41474:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"41460:29:11"},{"assignments":[7287],"declarations":[{"constant":false,"id":7287,"mutability":"mutable","name":"count","nameLocation":"41581:5:11","nodeType":"VariableDeclaration","scope":7422,"src":"41573:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7286,"name":"uint256","nodeType":"ElementaryTypeName","src":"41573:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7288,"nodeType":"VariableDeclarationStatement","src":"41573:13:11"},{"body":{"id":7317,"nodeType":"Block","src":"41807:263:11","statements":[{"condition":{"arguments":[{"id":7310,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"41952:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":7302,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"41925:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7306,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"41934:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41938:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"41934:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"41925:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41917:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7300,"name":"address","nodeType":"ElementaryTypeName","src":"41917:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41917:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7299,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"41909:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41909:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41943:8:11","memberName":"isPlayer","nodeType":"MemberAccess","referencedDeclaration":9534,"src":"41909:42:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41909:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7316,"nodeType":"IfStatement","src":"41905:154:11","trueBody":{"id":7315,"nodeType":"Block","src":"41961:98:11","statements":[{"expression":{"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"42036:7:11","subExpression":{"id":7312,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"42036:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7314,"nodeType":"ExpressionStatement","src":"42036:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"41795:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41799:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"41795:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7318,"initializationExpression":{"assignments":[7290],"declarations":[{"constant":false,"id":7290,"mutability":"mutable","name":"i","nameLocation":"41786:1:11","nodeType":"VariableDeclaration","scope":7318,"src":"41778:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7289,"name":"uint256","nodeType":"ElementaryTypeName","src":"41778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7292,"initialValue":{"id":7291,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"41790:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"41778:15:11"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"41802:3:11","subExpression":{"id":7296,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"41802:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7298,"nodeType":"ExpressionStatement","src":"41802:3:11"},"nodeType":"ForStatement","src":"41773:297:11"},{"assignments":[7323],"declarations":[{"constant":false,"id":7323,"mutability":"mutable","name":"joined","nameLocation":"42134:6:11","nodeType":"VariableDeclaration","scope":7422,"src":"42117:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7321,"name":"address","nodeType":"ElementaryTypeName","src":"42117:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7322,"nodeType":"ArrayTypeName","src":"42117:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7329,"initialValue":{"arguments":[{"id":7327,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"42161:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"42147:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":7324,"name":"address","nodeType":"ElementaryTypeName","src":"42151:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7325,"nodeType":"ArrayTypeName","src":"42151:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42147:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"42117:50:11"},{"assignments":[7334],"declarations":[{"constant":false,"id":7334,"mutability":"mutable","name":"statuses","nameLocation":"42285:8:11","nodeType":"VariableDeclaration","scope":7422,"src":"42268:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[]"},"typeName":{"baseType":{"id":7332,"nodeType":"UserDefinedTypeName","pathNode":{"id":7331,"name":"Status","nameLocations":["42268:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"42268:6:11"},"referencedDeclaration":5778,"src":"42268:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7333,"nodeType":"ArrayTypeName","src":"42268:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_storage_ptr","typeString":"enum Status[]"}},"visibility":"internal"}],"id":7341,"initialValue":{"arguments":[{"id":7339,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"42311:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"42298:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_Status_$5778_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (enum Status[] memory)"},"typeName":{"baseType":{"id":7336,"nodeType":"UserDefinedTypeName","pathNode":{"id":7335,"name":"Status","nameLocations":["42302:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"42302:6:11"},"referencedDeclaration":5778,"src":"42302:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7337,"nodeType":"ArrayTypeName","src":"42302:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_storage_ptr","typeString":"enum Status[]"}}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42298:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[] memory"}},"nodeType":"VariableDeclarationStatement","src":"42268:49:11"},{"assignments":[7346],"declarations":[{"constant":false,"id":7346,"mutability":"mutable","name":"names","nameLocation":"42439:5:11","nodeType":"VariableDeclaration","scope":7422,"src":"42422:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7344,"name":"string","nodeType":"ElementaryTypeName","src":"42422:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7345,"nodeType":"ArrayTypeName","src":"42422:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":7352,"initialValue":{"arguments":[{"id":7350,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"42465:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"42452:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":7347,"name":"string","nodeType":"ElementaryTypeName","src":"42456:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7348,"nodeType":"ArrayTypeName","src":"42456:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42452:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"42422:49:11"},{"assignments":[7354],"declarations":[{"constant":false,"id":7354,"mutability":"mutable","name":"idx","nameLocation":"42552:3:11","nodeType":"VariableDeclaration","scope":7422,"src":"42544:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7353,"name":"uint256","nodeType":"ElementaryTypeName","src":"42544:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7355,"nodeType":"VariableDeclarationStatement","src":"42544:11:11"},{"body":{"id":7415,"nodeType":"Block","src":"42730:901:11","statements":[{"assignments":[7367],"declarations":[{"constant":false,"id":7367,"mutability":"mutable","name":"m","nameLocation":"42836:1:11","nodeType":"VariableDeclaration","scope":7415,"src":"42828:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7366,"name":"address","nodeType":"ElementaryTypeName","src":"42828:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7373,"initialValue":{"baseExpression":{"id":7368,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"42840:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7372,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"42849:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42853:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"42849:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"42840:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"42828:27:11"},{"condition":{"arguments":[{"id":7381,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"42980:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":7377,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"42967:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42959:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7375,"name":"address","nodeType":"ElementaryTypeName","src":"42959:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42959:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7374,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"42951:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42951:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42971:8:11","memberName":"isPlayer","nodeType":"MemberAccess","referencedDeclaration":9534,"src":"42951:28:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42951:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7414,"nodeType":"IfStatement","src":"42947:673:11","trueBody":{"id":7413,"nodeType":"Block","src":"42989:631:11","statements":[{"expression":{"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7383,"name":"joined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"43078:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7385,"indexExpression":{"id":7384,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"43085:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"43078:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7386,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"43094:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"43078:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7388,"nodeType":"ExpressionStatement","src":"43078:17:11"},{"expression":{"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7389,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"43228:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[] memory"}},"id":7391,"indexExpression":{"id":7390,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"43237:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"43228:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7395,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"43260:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43252:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7393,"name":"address","nodeType":"ElementaryTypeName","src":"43252:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43252:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7392,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"43244:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43244:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43264:17:11","memberName":"getRealtimeStatus","nodeType":"MemberAccess","referencedDeclaration":9816,"src":"43244:37:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view external returns (enum Status)"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43244:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"43228:55:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7401,"nodeType":"ExpressionStatement","src":"43228:55:11"},{"expression":{"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7402,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"43380:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7404,"indexExpression":{"id":7403,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"43386:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"43380:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7405,"name":"missionNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"43393:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":7407,"indexExpression":{"id":7406,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"43406:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"43393:15:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"43380:28:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7409,"nodeType":"ExpressionStatement","src":"43380:28:11"},{"expression":{"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"43501:5:11","subExpression":{"id":7410,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"43501:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7412,"nodeType":"ExpressionStatement","src":"43501:5:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"42718:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42722:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"42718:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7416,"initializationExpression":{"assignments":[7357],"declarations":[{"constant":false,"id":7357,"mutability":"mutable","name":"i","nameLocation":"42709:1:11","nodeType":"VariableDeclaration","scope":7416,"src":"42701:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"42701:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7359,"initialValue":{"id":7358,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"42713:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"42701:15:11"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"42725:3:11","subExpression":{"id":7363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"42725:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7365,"nodeType":"ExpressionStatement","src":"42725:3:11"},"nodeType":"ForStatement","src":"42696:935:11"},{"expression":{"components":[{"id":7417,"name":"joined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"43649:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":7418,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"43657:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[] memory"}},{"id":7419,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"43667:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":7420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"43648:25:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_enum$_Status_$5778_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,enum Status[] memory,string memory[] memory)"}},"functionReturnParameters":7280,"id":7421,"nodeType":"Return","src":"43641:32:11"}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"40881:417:11","text":" @dev Returns the missions a player is participating in and their statuses.\n This function retrieves all missions the player is enrolled in and their current statuses.\n @param player The address of the player to check.\n @return joined An array of addresses of the missions the player is enrolled in.\n @return statuses An array of statuses corresponding to each mission."},"functionSelector":"503c0b88","id":7423,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerParticipation","nameLocation":"41313:22:11","nodeType":"FunctionDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"player","nameLocation":"41344:6:11","nodeType":"VariableDeclaration","scope":7423,"src":"41336:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7267,"name":"address","nodeType":"ElementaryTypeName","src":"41336:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41335:16:11"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7423,"src":"41397:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7270,"name":"address","nodeType":"ElementaryTypeName","src":"41397:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7271,"nodeType":"ArrayTypeName","src":"41397:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7423,"src":"41415:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[]"},"typeName":{"baseType":{"id":7274,"nodeType":"UserDefinedTypeName","pathNode":{"id":7273,"name":"Status","nameLocations":["41415:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"41415:6:11"},"referencedDeclaration":5778,"src":"41415:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7275,"nodeType":"ArrayTypeName","src":"41415:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_storage_ptr","typeString":"enum Status[]"}},"visibility":"internal"},{"constant":false,"id":7279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7423,"src":"41432:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7277,"name":"string","nodeType":"ElementaryTypeName","src":"41432:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7278,"nodeType":"ArrayTypeName","src":"41432:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"41396:52:11"},"scope":8483,"src":"41304:2488:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7513,"nodeType":"Block","src":"45326:1227:11","statements":[{"assignments":[7451],"declarations":[{"constant":false,"id":7451,"mutability":"mutable","name":"enumLength","nameLocation":"45345:10:11","nodeType":"VariableDeclaration","scope":7513,"src":"45337:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7450,"name":"uint256","nodeType":"ElementaryTypeName","src":"45337:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7461,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"arguments":[{"id":7455,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"45371:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}],"id":7454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"45366:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45366:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_enum$_MissionType_$5768","typeString":"type(enum MissionType)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45384:3:11","memberName":"max","nodeType":"MemberAccess","src":"45366:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}],"id":7453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45358:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7452,"name":"uint256","nodeType":"ElementaryTypeName","src":"45358:7:11","typeDescriptions":{}}},"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45358:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45391:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"45358:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"45337:55:11"},{"assignments":[7466],"declarations":[{"constant":false,"id":7466,"mutability":"mutable","name":"breakdown","nameLocation":"45414:9:11","nodeType":"VariableDeclaration","scope":7513,"src":"45397:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7464,"name":"uint256","nodeType":"ElementaryTypeName","src":"45397:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7465,"nodeType":"ArrayTypeName","src":"45397:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7472,"initialValue":{"arguments":[{"id":7470,"name":"enumLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"45440:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"45426:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7467,"name":"uint256","nodeType":"ElementaryTypeName","src":"45430:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7468,"nodeType":"ArrayTypeName","src":"45430:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45426:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"45397:54:11"},{"body":{"id":7493,"nodeType":"Block","src":"45497:56:11","statements":[{"expression":{"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7483,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"45503:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7485,"indexExpression":{"id":7484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"45513:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"45503:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7486,"name":"reservedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"45518:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":7490,"indexExpression":{"arguments":[{"id":7488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"45544:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7487,"name":"MissionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"45532:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MissionType_$5768_$","typeString":"type(enum MissionType)"}},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45532:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"45518:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"45503:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7492,"nodeType":"ExpressionStatement","src":"45503:44:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"45476:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7478,"name":"enumLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"45480:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"45476:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7494,"initializationExpression":{"assignments":[7474],"declarations":[{"constant":false,"id":7474,"mutability":"mutable","name":"i","nameLocation":"45469:1:11","nodeType":"VariableDeclaration","scope":7494,"src":"45461:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7473,"name":"uint256","nodeType":"ElementaryTypeName","src":"45461:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7476,"initialValue":{"hexValue":"30","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45473:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"45461:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"45492:3:11","subExpression":{"id":7480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"45492:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7482,"nodeType":"ExpressionStatement","src":"45492:3:11"},"nodeType":"ForStatement","src":"45456:97:11"},{"expression":{"components":[{"arguments":[],"expression":{"argumentTypes":[],"id":7495,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"45585:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45585:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"45689:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}],"id":7498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45681:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7497,"name":"address","nodeType":"ElementaryTypeName","src":"45681:7:11","typeDescriptions":{}}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45681:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7501,"name":"missionImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"45764:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7502,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"45862:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45871:6:11","memberName":"length","nodeType":"MemberAccess","src":"45862:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7504,"name":"weeklyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"45938:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7505,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"46002:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7506,"name":"totalMissionFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"46079:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7507,"name":"totalOwnerEarnedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"46165:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7508,"name":"totalMissionSuccesses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"46275:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7509,"name":"totalMissionFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"46362:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7510,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"46460:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":7511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"45570:975:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint8_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address,address,address,uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256[] memory)"}},"functionReturnParameters":7449,"id":7512,"nodeType":"Return","src":"45563:982:11"}]},"documentation":{"id":7424,"nodeType":"StructuredDocumentation","src":"43800:1023:11","text":" @dev Returns a summary of the factory's state.\n This function returns various details about the factory, including owner address, implementation address, total missions, limits, funds, and mission success/failure counts.\n @return ownerAddress The address of the owner of the factory.\n @return factoryAddress The address of the factory contract.\n @return implementation The address of the mission implementation contract.\n @return totalMissions The total number of missions created.\n @return weekly The weekly enrollment limit.\n @return monthly The monthly enrollment limit.\n @return missionFunds The total funds registered by missions.\n @return ownerFunds The total funds earned by the owner from missions.\n @return successes The total number of successful missions.\n @return failures The total number of failed missions.\n @return fundsPerTypeArray An array containing the reserved funds for each mission type (1–6)."},"functionSelector":"e5047770","id":7514,"implemented":true,"kind":"function","modifiers":[],"name":"getFactorySummary","nameLocation":"44838:17:11","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[],"src":"44855:2:11"},"returnParameters":{"id":7449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"ownerAddress","nameLocation":"44953:12:11","nodeType":"VariableDeclaration","scope":7514,"src":"44945:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7426,"name":"address","nodeType":"ElementaryTypeName","src":"44945:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7429,"mutability":"mutable","name":"factoryAddress","nameLocation":"44988:14:11","nodeType":"VariableDeclaration","scope":7514,"src":"44980:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7428,"name":"address","nodeType":"ElementaryTypeName","src":"44980:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7431,"mutability":"mutable","name":"implementation","nameLocation":"45025:14:11","nodeType":"VariableDeclaration","scope":7514,"src":"45017:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7430,"name":"address","nodeType":"ElementaryTypeName","src":"45017:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7433,"mutability":"mutable","name":"totalMissions","nameLocation":"45062:13:11","nodeType":"VariableDeclaration","scope":7514,"src":"45054:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7432,"name":"uint256","nodeType":"ElementaryTypeName","src":"45054:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7435,"mutability":"mutable","name":"weekly","nameLocation":"45098:6:11","nodeType":"VariableDeclaration","scope":7514,"src":"45090:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"45090:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7437,"mutability":"mutable","name":"monthly","nameLocation":"45127:7:11","nodeType":"VariableDeclaration","scope":7514,"src":"45119:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7436,"name":"uint256","nodeType":"ElementaryTypeName","src":"45119:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7439,"mutability":"mutable","name":"missionFunds","nameLocation":"45157:12:11","nodeType":"VariableDeclaration","scope":7514,"src":"45149:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7438,"name":"uint256","nodeType":"ElementaryTypeName","src":"45149:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7441,"mutability":"mutable","name":"ownerFunds","nameLocation":"45192:10:11","nodeType":"VariableDeclaration","scope":7514,"src":"45184:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7440,"name":"uint256","nodeType":"ElementaryTypeName","src":"45184:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7443,"mutability":"mutable","name":"successes","nameLocation":"45225:9:11","nodeType":"VariableDeclaration","scope":7514,"src":"45217:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7442,"name":"uint256","nodeType":"ElementaryTypeName","src":"45217:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7445,"mutability":"mutable","name":"failures","nameLocation":"45257:8:11","nodeType":"VariableDeclaration","scope":7514,"src":"45249:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7444,"name":"uint256","nodeType":"ElementaryTypeName","src":"45249:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7448,"mutability":"mutable","name":"fundsPerTypeArray","nameLocation":"45297:17:11","nodeType":"VariableDeclaration","scope":7514,"src":"45280:34:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7446,"name":"uint256","nodeType":"ElementaryTypeName","src":"45280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7447,"nodeType":"ArrayTypeName","src":"45280:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"44930:395:11"},"scope":8483,"src":"44829:1724:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7542,"nodeType":"Block","src":"46860:273:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7524,"name":"missionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"46879:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46905:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46897:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7525,"name":"address","nodeType":"ElementaryTypeName","src":"46897:7:11","typeDescriptions":{}}},"id":7528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46897:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"46879:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d697373696f6e2061646472657373","id":7530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"46909:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b8a0c3967ba6d8ceaa92f6d00e7f86101e6a716473ed8cc992af1e30e830d5e","typeString":"literal_string \"Invalid mission address\""},"value":"Invalid mission address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b8a0c3967ba6d8ceaa92f6d00e7f86101e6a716473ed8cc992af1e30e830d5e","typeString":"literal_string \"Invalid mission address\""}],"id":7523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"46871:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46871:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7532,"nodeType":"ExpressionStatement","src":"46871:64:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7536,"name":"missionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"47013:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47005:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7534,"name":"address","nodeType":"ElementaryTypeName","src":"47005:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47005:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7533,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"46997:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46997:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"47030:14:11","memberName":"getMissionData","nodeType":"MemberAccess","referencedDeclaration":9805,"src":"46997:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_struct$_MissionData_$8686_memory_ptr_$","typeString":"function () view external returns (struct Mission.MissionData memory)"}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46997:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"functionReturnParameters":7522,"id":7541,"nodeType":"Return","src":"46990:56:11"}]},"documentation":{"id":7515,"nodeType":"StructuredDocumentation","src":"46561:170:11","text":" @dev Returns the status of a mission.\n @param missionAddress The address of the mission to check.\n @return mission data of the mission."},"functionSelector":"20c5718f","id":7543,"implemented":true,"kind":"function","modifiers":[],"name":"getMissionData","nameLocation":"46746:14:11","nodeType":"FunctionDefinition","parameters":{"id":7518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7517,"mutability":"mutable","name":"missionAddress","nameLocation":"46769:14:11","nodeType":"VariableDeclaration","scope":7543,"src":"46761:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7516,"name":"address","nodeType":"ElementaryTypeName","src":"46761:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46760:24:11"},"returnParameters":{"id":7522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7543,"src":"46832:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData"},"typeName":{"id":7520,"nodeType":"UserDefinedTypeName","pathNode":{"id":7519,"name":"Mission.MissionData","nameLocations":["46832:7:11","46840:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"46832:19:11"},"referencedDeclaration":8686,"src":"46832:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage_ptr","typeString":"struct Mission.MissionData"}},"visibility":"internal"}],"src":"46831:28:11"},"scope":8483,"src":"46737:396:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7552,"nodeType":"Block","src":"47462:92:11","statements":[{"expression":{"expression":{"id":7549,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"47480:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"47489:6:11","memberName":"length","nodeType":"MemberAccess","src":"47480:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7548,"id":7551,"nodeType":"Return","src":"47473:22:11"}]},"documentation":{"id":7544,"nodeType":"StructuredDocumentation","src":"47141:211:11","text":" @dev Returns the total number of missions.\n This function returns the length of the missions array, which contains all mission addresses.\n @return The total number of missions."},"functionSelector":"5c5bb6f2","id":7553,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalMissions","nameLocation":"47367:16:11","nodeType":"FunctionDefinition","parameters":{"id":7545,"nodeType":"ParameterList","parameters":[],"src":"47383:2:11"},"returnParameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7553,"src":"47453:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7546,"name":"uint256","nodeType":"ElementaryTypeName","src":"47453:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47452:9:11"},"scope":8483,"src":"47358:196:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7830,"nodeType":"Block","src":"47977:4018:11","statements":[{"assignments":[7568],"declarations":[{"constant":false,"id":7568,"mutability":"mutable","name":"nowTs","nameLocation":"47996:5:11","nodeType":"VariableDeclaration","scope":7830,"src":"47988:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7567,"name":"uint256","nodeType":"ElementaryTypeName","src":"47988:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7571,"initialValue":{"expression":{"id":7569,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"48004:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"48010:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"48004:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"47988:31:11"},{"assignments":[7573],"declarations":[{"constant":false,"id":7573,"mutability":"mutable","name":"len","nameLocation":"48110:3:11","nodeType":"VariableDeclaration","scope":7830,"src":"48102:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7572,"name":"uint256","nodeType":"ElementaryTypeName","src":"48102:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7576,"initialValue":{"expression":{"id":7574,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"48116:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"48125:6:11","memberName":"length","nodeType":"MemberAccess","src":"48116:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"48102:29:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7577,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"48146:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48153:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"48146:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7599,"nodeType":"IfStatement","src":"48142:209:11","trueBody":{"id":7598,"nodeType":"Block","src":"48156:195:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":7583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48302:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"48288:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":7580,"name":"address","nodeType":"ElementaryTypeName","src":"48292:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7581,"nodeType":"ArrayTypeName","src":"48292:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":7584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48288:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"hexValue":"30","id":7589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48319:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"48306:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_Status_$5778_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (enum Status[] memory)"},"typeName":{"baseType":{"id":7586,"nodeType":"UserDefinedTypeName","pathNode":{"id":7585,"name":"Status","nameLocations":["48310:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"48310:6:11"},"referencedDeclaration":5778,"src":"48310:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7587,"nodeType":"ArrayTypeName","src":"48310:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_storage_ptr","typeString":"enum Status[]"}}},"id":7590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48306:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[] memory"}},{"arguments":[{"hexValue":"30","id":7594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48336:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"48323:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":7591,"name":"string","nodeType":"ElementaryTypeName","src":"48327:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7592,"nodeType":"ArrayTypeName","src":"48327:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48323:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":7596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"48287:52:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_enum$_Status_$5778_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,enum Status[] memory,string memory[] memory)"}},"functionReturnParameters":7566,"id":7597,"nodeType":"Return","src":"48280:59:11"}]}},{"assignments":[7601],"declarations":[{"constant":false,"id":7601,"mutability":"mutable","name":"startCutoff","nameLocation":"48371:11:11","nodeType":"VariableDeclaration","scope":7830,"src":"48363:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7600,"name":"uint256","nodeType":"ElementaryTypeName","src":"48363:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7602,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"48385:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3630","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48393:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_5184000_by_1","typeString":"int_const 5184000"},"value":"60"},"src":"48385:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"48363:37:11"},{"assignments":[7607],"declarations":[{"constant":false,"id":7607,"mutability":"mutable","name":"endCutoff","nameLocation":"48494:9:11","nodeType":"VariableDeclaration","scope":7830,"src":"48486:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7606,"name":"uint256","nodeType":"ElementaryTypeName","src":"48486:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7611,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7608,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"48508:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3330","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48516:7:11","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"48508:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"48486:37:11"},{"assignments":[7613],"declarations":[{"constant":false,"id":7613,"mutability":"mutable","name":"count","nameLocation":"48621:5:11","nodeType":"VariableDeclaration","scope":7830,"src":"48613:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7612,"name":"uint256","nodeType":"ElementaryTypeName","src":"48613:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7614,"nodeType":"VariableDeclarationStatement","src":"48613:13:11"},{"body":{"id":7687,"nodeType":"Block","src":"48752:951:11","statements":[{"id":7625,"nodeType":"UncheckedBlock","src":"48767:18:11","statements":[{"expression":{"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"48779:3:11","subExpression":{"id":7622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"48781:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7624,"nodeType":"ExpressionStatement","src":"48779:3:11"}]},{"assignments":[7627],"declarations":[{"constant":false,"id":7627,"mutability":"mutable","name":"m","nameLocation":"48895:1:11","nodeType":"VariableDeclaration","scope":7687,"src":"48887:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7626,"name":"address","nodeType":"ElementaryTypeName","src":"48887:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7631,"initialValue":{"baseExpression":{"id":7628,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"48899:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7630,"indexExpression":{"id":7629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"48908:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"48899:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"48887:23:11"},{"assignments":[7634],"declarations":[{"constant":false,"id":7634,"mutability":"mutable","name":"s","nameLocation":"48933:1:11","nodeType":"VariableDeclaration","scope":7687,"src":"48925:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":7633,"nodeType":"UserDefinedTypeName","pathNode":{"id":7632,"name":"Status","nameLocations":["48925:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"48925:6:11"},"referencedDeclaration":5778,"src":"48925:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":7638,"initialValue":{"baseExpression":{"id":7635,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"48937:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":7637,"indexExpression":{"id":7636,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"48951:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"48937:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"48925:28:11"},{"assignments":[7643],"declarations":[{"constant":false,"id":7643,"mutability":"mutable","name":"md","nameLocation":"48995:2:11","nodeType":"VariableDeclaration","scope":7687,"src":"48968:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData"},"typeName":{"id":7642,"nodeType":"UserDefinedTypeName","pathNode":{"id":7641,"name":"Mission.MissionData","nameLocations":["48968:7:11","48976:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"48968:19:11"},"referencedDeclaration":8686,"src":"48968:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage_ptr","typeString":"struct Mission.MissionData"}},"visibility":"internal"}],"id":7652,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7647,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"49016:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49008:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7645,"name":"address","nodeType":"ElementaryTypeName","src":"49008:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49008:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7644,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"49000:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49000:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"49020:14:11","memberName":"getMissionData","nodeType":"MemberAccess","referencedDeclaration":9805,"src":"49000:34:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_struct$_MissionData_$8686_memory_ptr_$","typeString":"function () view external returns (struct Mission.MissionData memory)"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49000:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"nodeType":"VariableDeclarationStatement","src":"48968:68:11"},{"assignments":[7654],"declarations":[{"constant":false,"id":7654,"mutability":"mutable","name":"tooOld","nameLocation":"49058:6:11","nodeType":"VariableDeclaration","scope":7687,"src":"49053:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7653,"name":"bool","nodeType":"ElementaryTypeName","src":"49053:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7679,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7655,"name":"md","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"49084:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"id":7656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49087:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"49084:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7657,"name":"startCutoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"49102:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49084:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7659,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"49195:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7660,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"49200:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"49207:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"49200:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"49195:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7663,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"49218:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7664,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"49223:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"49230:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"49223:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"49218:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"49195:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"49194:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"49084:153:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7674,"name":"md","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"49383:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"id":7675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49386:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"49383:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7676,"name":"startCutoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"49401:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49383:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"49084:328:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7670,"name":"md","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"49261:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"id":7671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49264:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"49261:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7672,"name":"endCutoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"49277:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49261:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"49053:359:11"},{"condition":{"id":7680,"name":"tooOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"49513:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7683,"nodeType":"IfStatement","src":"49509:161:11","trueBody":{"id":7682,"nodeType":"Block","src":"49521:149:11","statements":[{"id":7681,"nodeType":"Break","src":"49540:5:11"}]}},{"expression":{"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"49684:7:11","subExpression":{"id":7684,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"49684:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7686,"nodeType":"ExpressionStatement","src":"49684:7:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"48744:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48748:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"48744:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7688,"initializationExpression":{"assignments":[7616],"declarations":[{"constant":false,"id":7616,"mutability":"mutable","name":"i","nameLocation":"48735:1:11","nodeType":"VariableDeclaration","scope":7688,"src":"48727:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"48727:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7618,"initialValue":{"id":7617,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"48739:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"48727:15:11"},"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"48722:981:11"},{"assignments":[7693],"declarations":[{"constant":false,"id":7693,"mutability":"mutable","name":"outAddrs","nameLocation":"49813:8:11","nodeType":"VariableDeclaration","scope":7830,"src":"49796:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7691,"name":"address","nodeType":"ElementaryTypeName","src":"49796:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7692,"nodeType":"ArrayTypeName","src":"49796:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7699,"initialValue":{"arguments":[{"id":7697,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"49839:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"49825:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":7694,"name":"address","nodeType":"ElementaryTypeName","src":"49829:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7695,"nodeType":"ArrayTypeName","src":"49829:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49825:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"49796:49:11"},{"assignments":[7704],"declarations":[{"constant":false,"id":7704,"mutability":"mutable","name":"outStatus","nameLocation":"49955:9:11","nodeType":"VariableDeclaration","scope":7830,"src":"49938:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[]"},"typeName":{"baseType":{"id":7702,"nodeType":"UserDefinedTypeName","pathNode":{"id":7701,"name":"Status","nameLocations":["49938:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"49938:6:11"},"referencedDeclaration":5778,"src":"49938:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7703,"nodeType":"ArrayTypeName","src":"49938:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_storage_ptr","typeString":"enum Status[]"}},"visibility":"internal"}],"id":7711,"initialValue":{"arguments":[{"id":7709,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"49980:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"49967:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_Status_$5778_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (enum Status[] memory)"},"typeName":{"baseType":{"id":7706,"nodeType":"UserDefinedTypeName","pathNode":{"id":7705,"name":"Status","nameLocations":["49971:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"49971:6:11"},"referencedDeclaration":5778,"src":"49971:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7707,"nodeType":"ArrayTypeName","src":"49971:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_storage_ptr","typeString":"enum Status[]"}}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49967:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[] memory"}},"nodeType":"VariableDeclarationStatement","src":"49938:48:11"},{"assignments":[7716],"declarations":[{"constant":false,"id":7716,"mutability":"mutable","name":"names","nameLocation":"50096:5:11","nodeType":"VariableDeclaration","scope":7830,"src":"50079:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7714,"name":"string","nodeType":"ElementaryTypeName","src":"50079:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7715,"nodeType":"ArrayTypeName","src":"50079:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":7722,"initialValue":{"arguments":[{"id":7720,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"50121:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"50108:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":7717,"name":"string","nodeType":"ElementaryTypeName","src":"50112:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7718,"nodeType":"ArrayTypeName","src":"50112:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50108:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"50079:48:11"},{"assignments":[7724],"declarations":[{"constant":false,"id":7724,"mutability":"mutable","name":"j","nameLocation":"50217:1:11","nodeType":"VariableDeclaration","scope":7830,"src":"50209:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7723,"name":"uint256","nodeType":"ElementaryTypeName","src":"50209:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7725,"nodeType":"VariableDeclarationStatement","src":"50209:9:11"},{"body":{"id":7823,"nodeType":"Block","src":"50274:1550:11","statements":[{"id":7740,"nodeType":"UncheckedBlock","src":"50371:18:11","statements":[{"expression":{"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"50383:3:11","subExpression":{"id":7737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"50385:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7739,"nodeType":"ExpressionStatement","src":"50383:3:11"}]},{"assignments":[7742],"declarations":[{"constant":false,"id":7742,"mutability":"mutable","name":"m","nameLocation":"50411:1:11","nodeType":"VariableDeclaration","scope":7823,"src":"50403:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7741,"name":"address","nodeType":"ElementaryTypeName","src":"50403:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7746,"initialValue":{"baseExpression":{"id":7743,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"50415:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7745,"indexExpression":{"id":7744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"50424:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"50415:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"50403:23:11"},{"assignments":[7749],"declarations":[{"constant":false,"id":7749,"mutability":"mutable","name":"s","nameLocation":"50538:1:11","nodeType":"VariableDeclaration","scope":7823,"src":"50530:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":7748,"nodeType":"UserDefinedTypeName","pathNode":{"id":7747,"name":"Status","nameLocations":["50530:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"50530:6:11"},"referencedDeclaration":5778,"src":"50530:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":7753,"initialValue":{"baseExpression":{"id":7750,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"50542:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":7752,"indexExpression":{"id":7751,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"50556:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"50542:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"50530:28:11"},{"assignments":[7758],"declarations":[{"constant":false,"id":7758,"mutability":"mutable","name":"md","nameLocation":"50687:2:11","nodeType":"VariableDeclaration","scope":7823,"src":"50660:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData"},"typeName":{"id":7757,"nodeType":"UserDefinedTypeName","pathNode":{"id":7756,"name":"Mission.MissionData","nameLocations":["50660:7:11","50668:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"50660:19:11"},"referencedDeclaration":8686,"src":"50660:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage_ptr","typeString":"struct Mission.MissionData"}},"visibility":"internal"}],"id":7767,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7762,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"50708:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50700:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7760,"name":"address","nodeType":"ElementaryTypeName","src":"50700:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50700:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7759,"name":"Mission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10581,"src":"50692:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Mission_$10581_$","typeString":"type(contract Mission)"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50692:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"50712:14:11","memberName":"getMissionData","nodeType":"MemberAccess","referencedDeclaration":9805,"src":"50692:34:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_struct$_MissionData_$8686_memory_ptr_$","typeString":"function () view external returns (struct Mission.MissionData memory)"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50692:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"nodeType":"VariableDeclarationStatement","src":"50660:68:11"},{"assignments":[7769],"declarations":[{"constant":false,"id":7769,"mutability":"mutable","name":"tooOld","nameLocation":"50800:6:11","nodeType":"VariableDeclaration","scope":7823,"src":"50795:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7768,"name":"bool","nodeType":"ElementaryTypeName","src":"50795:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7794,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7770,"name":"md","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"50826:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"id":7771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"50829:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"50826:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7772,"name":"startCutoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"50844:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50826:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7774,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"50877:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7775,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"50882:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"50889:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"50882:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"50877:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7778,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"50900:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7779,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"50905:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"50912:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"50905:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"50900:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"50877:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"50876:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"50826:93:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7789,"name":"md","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"51095:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"id":7790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"51098:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"51095:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7791,"name":"startCutoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"51113:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51095:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"50826:298:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7785,"name":"md","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"51046:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData memory"}},"id":7786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"51049:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"51046:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7787,"name":"endCutoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"51062:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51046:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"50795:329:11"},{"condition":{"id":7795,"name":"tooOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"51145:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7798,"nodeType":"IfStatement","src":"51141:148:11","trueBody":{"id":7797,"nodeType":"Block","src":"51153:136:11","statements":[{"id":7796,"nodeType":"Break","src":"51268:5:11"}]}},{"expression":{"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7799,"name":"outAddrs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"51303:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7801,"indexExpression":{"id":7800,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"51312:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"51303:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7802,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"51318:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"51303:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7804,"nodeType":"ExpressionStatement","src":"51303:16:11"},{"expression":{"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7805,"name":"outStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"51437:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[] memory"}},"id":7807,"indexExpression":{"id":7806,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"51447:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"51437:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7808,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"51452:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"51437:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7810,"nodeType":"ExpressionStatement","src":"51437:16:11"},{"expression":{"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7811,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7716,"src":"51568:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7813,"indexExpression":{"id":7812,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"51574:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"51568:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7814,"name":"missionNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"51579:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":7816,"indexExpression":{"id":7815,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"51592:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"51579:15:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"51568:26:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7818,"nodeType":"ExpressionStatement","src":"51568:26:11"},{"id":7822,"nodeType":"UncheckedBlock","src":"51697:18:11","statements":[{"expression":{"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"51709:3:11","subExpression":{"id":7819,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"51711:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7821,"nodeType":"ExpressionStatement","src":"51709:3:11"}]}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"50253:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50257:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"50253:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7733,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"50262:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7734,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"50266:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50262:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"50253:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7824,"initializationExpression":{"assignments":[7727],"declarations":[{"constant":false,"id":7727,"mutability":"mutable","name":"i","nameLocation":"50244:1:11","nodeType":"VariableDeclaration","scope":7824,"src":"50236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7726,"name":"uint256","nodeType":"ElementaryTypeName","src":"50236:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7729,"initialValue":{"id":7728,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"50248:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"50236:15:11"},"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"50231:1593:11"},{"expression":{"components":[{"id":7825,"name":"outAddrs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"51844:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":7826,"name":"outStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"51854:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[] memory"}},{"id":7827,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7716,"src":"51865:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":7828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"51843:28:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_enum$_Status_$5778_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,enum Status[] memory,string memory[] memory)"}},"functionReturnParameters":7566,"id":7829,"nodeType":"Return","src":"51836:35:11"}]},"documentation":{"id":7554,"nodeType":"StructuredDocumentation","src":"47562:262:11","text":" @dev Returns the addresses and statuses of all missions.\n This function retrieves all missions and their statuses, filtering out old missions.\n @return An array of mission addresses and an array of their corresponding statuses."},"functionSelector":"6d8a1390","id":7831,"implemented":true,"kind":"function","modifiers":[],"name":"getAllMissions","nameLocation":"47839:14:11","nodeType":"FunctionDefinition","parameters":{"id":7555,"nodeType":"ParameterList","parameters":[],"src":"47853:2:11"},"returnParameters":{"id":7566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7831,"src":"47925:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7556,"name":"address","nodeType":"ElementaryTypeName","src":"47925:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7557,"nodeType":"ArrayTypeName","src":"47925:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7831,"src":"47943:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_memory_ptr","typeString":"enum Status[]"},"typeName":{"baseType":{"id":7560,"nodeType":"UserDefinedTypeName","pathNode":{"id":7559,"name":"Status","nameLocations":["47943:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"47943:6:11"},"referencedDeclaration":5778,"src":"47943:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":7561,"nodeType":"ArrayTypeName","src":"47943:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_Status_$5778_$dyn_storage_ptr","typeString":"enum Status[]"}},"visibility":"internal"},{"constant":false,"id":7565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7831,"src":"47960:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7563,"name":"string","nodeType":"ElementaryTypeName","src":"47960:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7564,"nodeType":"ArrayTypeName","src":"47960:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"47924:52:11"},"scope":8483,"src":"47830:4165:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7971,"nodeType":"Block","src":"52513:1741:11","statements":[{"assignments":[7848],"declarations":[{"constant":false,"id":7848,"mutability":"mutable","name":"len","nameLocation":"52532:3:11","nodeType":"VariableDeclaration","scope":7971,"src":"52524:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7847,"name":"uint256","nodeType":"ElementaryTypeName","src":"52524:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7851,"initialValue":{"expression":{"id":7849,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"52538:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"52547:6:11","memberName":"length","nodeType":"MemberAccess","src":"52538:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"52524:29:11"},{"assignments":[7853],"declarations":[{"constant":false,"id":7853,"mutability":"mutable","name":"count","nameLocation":"52637:5:11","nodeType":"VariableDeclaration","scope":7971,"src":"52629:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7852,"name":"uint256","nodeType":"ElementaryTypeName","src":"52629:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7854,"nodeType":"VariableDeclarationStatement","src":"52629:13:11"},{"body":{"id":7877,"nodeType":"Block","src":"52754:316:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7865,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"52826:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":7869,"indexExpression":{"baseExpression":{"id":7866,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"52840:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7868,"indexExpression":{"id":7867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"52849:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"52840:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"52826:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7870,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"52856:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"52826:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7876,"nodeType":"IfStatement","src":"52822:237:11","trueBody":{"id":7875,"nodeType":"Block","src":"52859:200:11","statements":[{"expression":{"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"52949:7:11","subExpression":{"id":7872,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"52949:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7874,"nodeType":"ExpressionStatement","src":"52949:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"52740:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7860,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"52744:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"52740:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7878,"initializationExpression":{"assignments":[7856],"declarations":[{"constant":false,"id":7856,"mutability":"mutable","name":"i","nameLocation":"52733:1:11","nodeType":"VariableDeclaration","scope":7878,"src":"52725:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7855,"name":"uint256","nodeType":"ElementaryTypeName","src":"52725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7858,"initialValue":{"hexValue":"30","id":7857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52737:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"52725:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"52749:3:11","subExpression":{"id":7862,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"52749:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7864,"nodeType":"ExpressionStatement","src":"52749:3:11"},"nodeType":"ForStatement","src":"52720:350:11"},{"assignments":[7883],"declarations":[{"constant":false,"id":7883,"mutability":"mutable","name":"filteredMissions","nameLocation":"53147:16:11","nodeType":"VariableDeclaration","scope":7971,"src":"53130:33:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7881,"name":"address","nodeType":"ElementaryTypeName","src":"53130:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7882,"nodeType":"ArrayTypeName","src":"53130:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7889,"initialValue":{"arguments":[{"id":7887,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"53180:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"53166:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":7884,"name":"address","nodeType":"ElementaryTypeName","src":"53170:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7885,"nodeType":"ArrayTypeName","src":"53170:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53166:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"53130:56:11"},{"assignments":[7894],"declarations":[{"constant":false,"id":7894,"mutability":"mutable","name":"statuses","nameLocation":"53278:8:11","nodeType":"VariableDeclaration","scope":7971,"src":"53261:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":7892,"name":"uint8","nodeType":"ElementaryTypeName","src":"53261:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7893,"nodeType":"ArrayTypeName","src":"53261:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"}],"id":7900,"initialValue":{"arguments":[{"id":7898,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"53309:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"53297:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint8[] memory)"},"typeName":{"baseType":{"id":7895,"name":"uint8","nodeType":"ElementaryTypeName","src":"53301:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7896,"nodeType":"ArrayTypeName","src":"53301:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}}},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53297:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"nodeType":"VariableDeclarationStatement","src":"53261:54:11"},{"assignments":[7905],"declarations":[{"constant":false,"id":7905,"mutability":"mutable","name":"names","nameLocation":"53387:5:11","nodeType":"VariableDeclaration","scope":7971,"src":"53370:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7903,"name":"string","nodeType":"ElementaryTypeName","src":"53370:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7904,"nodeType":"ArrayTypeName","src":"53370:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":7911,"initialValue":{"arguments":[{"id":7909,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"53419:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"53406:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":7906,"name":"string","nodeType":"ElementaryTypeName","src":"53410:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7907,"nodeType":"ArrayTypeName","src":"53410:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53406:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"53370:55:11"},{"assignments":[7913],"declarations":[{"constant":false,"id":7913,"mutability":"mutable","name":"index","nameLocation":"53492:5:11","nodeType":"VariableDeclaration","scope":7971,"src":"53484:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7912,"name":"uint256","nodeType":"ElementaryTypeName","src":"53484:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7914,"nodeType":"VariableDeclarationStatement","src":"53484:13:11"},{"body":{"id":7964,"nodeType":"Block","src":"53542:557:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7925,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"53620:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":7929,"indexExpression":{"baseExpression":{"id":7926,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"53634:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7928,"indexExpression":{"id":7927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"53643:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"53634:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"53620:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7930,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"53650:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"53620:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7963,"nodeType":"IfStatement","src":"53616:472:11","trueBody":{"id":7962,"nodeType":"Block","src":"53653:435:11","statements":[{"expression":{"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7932,"name":"filteredMissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"53743:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7934,"indexExpression":{"id":7933,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"53760:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"53743:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7935,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"53769:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7937,"indexExpression":{"id":7936,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"53778:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"53769:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"53743:37:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7939,"nodeType":"ExpressionStatement","src":"53743:37:11"},{"expression":{"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7940,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"53859:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"id":7942,"indexExpression":{"id":7941,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"53868:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"53859:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7945,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"53883:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":7944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53877:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7943,"name":"uint8","nodeType":"ElementaryTypeName","src":"53877:5:11","typeDescriptions":{}}},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53877:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"53859:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7948,"nodeType":"ExpressionStatement","src":"53859:26:11"},{"expression":{"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7949,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"53952:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7951,"indexExpression":{"id":7950,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"53958:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"53952:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7952,"name":"missionNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"53967:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":7956,"indexExpression":{"baseExpression":{"id":7953,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"53980:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7955,"indexExpression":{"id":7954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"53989:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"53980:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"53967:25:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"53952:40:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7958,"nodeType":"ExpressionStatement","src":"53952:40:11"},{"expression":{"id":7960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"54065:7:11","subExpression":{"id":7959,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"54065:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7961,"nodeType":"ExpressionStatement","src":"54065:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7919,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"53528:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7920,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"53532:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"53528:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7965,"initializationExpression":{"assignments":[7916],"declarations":[{"constant":false,"id":7916,"mutability":"mutable","name":"i","nameLocation":"53521:1:11","nodeType":"VariableDeclaration","scope":7965,"src":"53513:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7915,"name":"uint256","nodeType":"ElementaryTypeName","src":"53513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7918,"initialValue":{"hexValue":"30","id":7917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53525:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"53513:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"53537:3:11","subExpression":{"id":7922,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"53537:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7924,"nodeType":"ExpressionStatement","src":"53537:3:11"},"nodeType":"ForStatement","src":"53508:591:11"},{"expression":{"components":[{"id":7966,"name":"filteredMissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"54119:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":7967,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"54137:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},{"id":7968,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"54147:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":7969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"54118:35:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint8[] memory,string memory[] memory)"}},"functionReturnParameters":7846,"id":7970,"nodeType":"Return","src":"54111:42:11"}]},"documentation":{"id":7832,"nodeType":"StructuredDocumentation","src":"52003:358:11","text":" @dev Returns the addresses of missions filtered by status.\n This function filters missions based on their status and returns an array of mission addresses that match the specified status.\n @param s The status to filter missions by.\n @return An array of mission addresses and an array of their corresponding statuses."},"functionSelector":"1e59d584","id":7972,"implemented":true,"kind":"function","modifiers":[],"name":"getMissionsByStatus","nameLocation":"52376:19:11","nodeType":"FunctionDefinition","parameters":{"id":7836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7835,"mutability":"mutable","name":"s","nameLocation":"52403:1:11","nodeType":"VariableDeclaration","scope":7972,"src":"52396:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":7834,"nodeType":"UserDefinedTypeName","pathNode":{"id":7833,"name":"Status","nameLocations":["52396:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"52396:6:11"},"referencedDeclaration":5778,"src":"52396:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"src":"52395:10:11"},"returnParameters":{"id":7846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7972,"src":"52462:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7837,"name":"address","nodeType":"ElementaryTypeName","src":"52462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7838,"nodeType":"ArrayTypeName","src":"52462:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7972,"src":"52480:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":7840,"name":"uint8","nodeType":"ElementaryTypeName","src":"52480:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7841,"nodeType":"ArrayTypeName","src":"52480:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":7845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7972,"src":"52496:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7843,"name":"string","nodeType":"ElementaryTypeName","src":"52496:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7844,"nodeType":"ArrayTypeName","src":"52496:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"52461:51:11"},"scope":8483,"src":"52367:1887:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8131,"nodeType":"Block","src":"54679:1884:11","statements":[{"assignments":[7986],"declarations":[{"constant":false,"id":7986,"mutability":"mutable","name":"len","nameLocation":"54698:3:11","nodeType":"VariableDeclaration","scope":8131,"src":"54690:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7985,"name":"uint256","nodeType":"ElementaryTypeName","src":"54690:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7989,"initialValue":{"expression":{"id":7987,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"54704:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"54713:6:11","memberName":"length","nodeType":"MemberAccess","src":"54704:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"54690:29:11"},{"assignments":[7991],"declarations":[{"constant":false,"id":7991,"mutability":"mutable","name":"count","nameLocation":"54800:5:11","nodeType":"VariableDeclaration","scope":8131,"src":"54792:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7990,"name":"uint256","nodeType":"ElementaryTypeName","src":"54792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7992,"nodeType":"VariableDeclarationStatement","src":"54792:13:11"},{"body":{"id":8026,"nodeType":"Block","src":"55012:276:11","statements":[{"assignments":[8005],"declarations":[{"constant":false,"id":8005,"mutability":"mutable","name":"s","nameLocation":"55087:1:11","nodeType":"VariableDeclaration","scope":8026,"src":"55080:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":8004,"nodeType":"UserDefinedTypeName","pathNode":{"id":8003,"name":"Status","nameLocations":["55080:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"55080:6:11"},"referencedDeclaration":5778,"src":"55080:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":8011,"initialValue":{"baseExpression":{"id":8006,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"55091:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":8010,"indexExpression":{"baseExpression":{"id":8007,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"55105:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8009,"indexExpression":{"id":8008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"55114:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"55105:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"55091:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"55080:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8012,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"55136:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8013,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"55141:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"55148:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"55141:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"55136:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8016,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"55159:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8017,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"55164:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"55171:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"55164:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"55159:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"55136:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8025,"nodeType":"IfStatement","src":"55132:145:11","trueBody":{"id":8024,"nodeType":"Block","src":"55179:98:11","statements":[{"expression":{"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"55254:7:11","subExpression":{"id":8021,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"55254:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8023,"nodeType":"ExpressionStatement","src":"55254:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"54998:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7998,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"55002:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"54998:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8027,"initializationExpression":{"assignments":[7994],"declarations":[{"constant":false,"id":7994,"mutability":"mutable","name":"i","nameLocation":"54991:1:11","nodeType":"VariableDeclaration","scope":8027,"src":"54983:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7993,"name":"uint256","nodeType":"ElementaryTypeName","src":"54983:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7996,"initialValue":{"hexValue":"30","id":7995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"54995:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"54983:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"55007:3:11","subExpression":{"id":8000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"55007:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8002,"nodeType":"ExpressionStatement","src":"55007:3:11"},"nodeType":"ForStatement","src":"54978:310:11"},{"assignments":[8032],"declarations":[{"constant":false,"id":8032,"mutability":"mutable","name":"result","nameLocation":"55358:6:11","nodeType":"VariableDeclaration","scope":8131,"src":"55341:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8030,"name":"address","nodeType":"ElementaryTypeName","src":"55341:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8031,"nodeType":"ArrayTypeName","src":"55341:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":8038,"initialValue":{"arguments":[{"id":8036,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"55383:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"55369:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":8033,"name":"address","nodeType":"ElementaryTypeName","src":"55373:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8034,"nodeType":"ArrayTypeName","src":"55373:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55369:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"55341:48:11"},{"assignments":[8043],"declarations":[{"constant":false,"id":8043,"mutability":"mutable","name":"statuses","nameLocation":"55495:8:11","nodeType":"VariableDeclaration","scope":8131,"src":"55478:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":8041,"name":"uint8","nodeType":"ElementaryTypeName","src":"55478:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8042,"nodeType":"ArrayTypeName","src":"55478:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"}],"id":8049,"initialValue":{"arguments":[{"id":8047,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"55518:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"55506:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint8[] memory)"},"typeName":{"baseType":{"id":8044,"name":"uint8","nodeType":"ElementaryTypeName","src":"55510:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8045,"nodeType":"ArrayTypeName","src":"55510:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55506:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"nodeType":"VariableDeclarationStatement","src":"55478:46:11"},{"assignments":[8054],"declarations":[{"constant":false,"id":8054,"mutability":"mutable","name":"names","nameLocation":"55600:5:11","nodeType":"VariableDeclaration","scope":8131,"src":"55583:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8052,"name":"string","nodeType":"ElementaryTypeName","src":"55583:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8053,"nodeType":"ArrayTypeName","src":"55583:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":8060,"initialValue":{"arguments":[{"id":8058,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"55624:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"55611:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":8055,"name":"string","nodeType":"ElementaryTypeName","src":"55615:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8056,"nodeType":"ArrayTypeName","src":"55615:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55611:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"55583:47:11"},{"assignments":[8062],"declarations":[{"constant":false,"id":8062,"mutability":"mutable","name":"index","nameLocation":"55701:5:11","nodeType":"VariableDeclaration","scope":8131,"src":"55693:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"55693:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8063,"nodeType":"VariableDeclarationStatement","src":"55693:13:11"},{"body":{"id":8124,"nodeType":"Block","src":"55753:658:11","statements":[{"assignments":[8076],"declarations":[{"constant":false,"id":8076,"mutability":"mutable","name":"s","nameLocation":"55830:1:11","nodeType":"VariableDeclaration","scope":8124,"src":"55823:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":8075,"nodeType":"UserDefinedTypeName","pathNode":{"id":8074,"name":"Status","nameLocations":["55823:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"55823:6:11"},"referencedDeclaration":5778,"src":"55823:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":8082,"initialValue":{"baseExpression":{"id":8077,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"55834:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":8081,"indexExpression":{"baseExpression":{"id":8078,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"55848:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8080,"indexExpression":{"id":8079,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"55857:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"55848:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"55834:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"55823:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8083,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"55933:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8084,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"55938:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"55945:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"55938:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"55933:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8087,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"55956:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8088,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"55961:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"55968:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"55961:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"55956:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"55933:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8123,"nodeType":"IfStatement","src":"55929:471:11","trueBody":{"id":8122,"nodeType":"Block","src":"55976:424:11","statements":[{"expression":{"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"56051:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8094,"indexExpression":{"id":8093,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"56058:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"56051:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8095,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"56067:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8097,"indexExpression":{"id":8096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"56076:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"56067:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"56051:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8099,"nodeType":"ExpressionStatement","src":"56051:27:11"},{"expression":{"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8100,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"56163:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"id":8102,"indexExpression":{"id":8101,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"56172:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"56163:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8105,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"56187:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":8104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"56181:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8103,"name":"uint8","nodeType":"ElementaryTypeName","src":"56181:5:11","typeDescriptions":{}}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56181:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"56163:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8108,"nodeType":"ExpressionStatement","src":"56163:26:11"},{"expression":{"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8109,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"56268:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8111,"indexExpression":{"id":8110,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"56274:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"56268:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8112,"name":"missionNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"56283:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":8116,"indexExpression":{"baseExpression":{"id":8113,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"56296:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8115,"indexExpression":{"id":8114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"56305:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"56296:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"56283:25:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"56268:40:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8118,"nodeType":"ExpressionStatement","src":"56268:40:11"},{"expression":{"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"56377:7:11","subExpression":{"id":8119,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"56377:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8121,"nodeType":"ExpressionStatement","src":"56377:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"55739:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8069,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"55743:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"55739:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8125,"initializationExpression":{"assignments":[8065],"declarations":[{"constant":false,"id":8065,"mutability":"mutable","name":"i","nameLocation":"55732:1:11","nodeType":"VariableDeclaration","scope":8125,"src":"55724:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8064,"name":"uint256","nodeType":"ElementaryTypeName","src":"55724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8067,"initialValue":{"hexValue":"30","id":8066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"55736:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"55724:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"55748:3:11","subExpression":{"id":8071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"55748:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8073,"nodeType":"ExpressionStatement","src":"55748:3:11"},"nodeType":"ForStatement","src":"55719:692:11"},{"expression":{"components":[{"id":8126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"56431:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":8127,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"56439:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},{"id":8128,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"56449:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":8129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"56430:25:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint8[] memory,string memory[] memory)"}},"functionReturnParameters":7984,"id":8130,"nodeType":"Return","src":"56423:32:11"}]},"documentation":{"id":7973,"nodeType":"StructuredDocumentation","src":"54266:255:11","text":" @dev Returns the addresses of missions that have not ended.\n This function filters out missions that are in the Ended or Failed status.\n @return An array of mission addresses and an array of their corresponding statuses."},"functionSelector":"6805036d","id":8132,"implemented":true,"kind":"function","modifiers":[],"name":"getMissionsNotEnded","nameLocation":"54542:19:11","nodeType":"FunctionDefinition","parameters":{"id":7974,"nodeType":"ParameterList","parameters":[],"src":"54561:2:11"},"returnParameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8132,"src":"54628:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7975,"name":"address","nodeType":"ElementaryTypeName","src":"54628:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7976,"nodeType":"ArrayTypeName","src":"54628:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8132,"src":"54646:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":7978,"name":"uint8","nodeType":"ElementaryTypeName","src":"54646:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7979,"nodeType":"ArrayTypeName","src":"54646:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":7983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8132,"src":"54662:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7981,"name":"string","nodeType":"ElementaryTypeName","src":"54662:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7982,"nodeType":"ArrayTypeName","src":"54662:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"54627:51:11"},"scope":8483,"src":"54533:2030:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8291,"nodeType":"Block","src":"56974:1913:11","statements":[{"assignments":[8146],"declarations":[{"constant":false,"id":8146,"mutability":"mutable","name":"len","nameLocation":"56993:3:11","nodeType":"VariableDeclaration","scope":8291,"src":"56985:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8145,"name":"uint256","nodeType":"ElementaryTypeName","src":"56985:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8149,"initialValue":{"expression":{"id":8147,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"56999:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"57008:6:11","memberName":"length","nodeType":"MemberAccess","src":"56999:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"56985:29:11"},{"assignments":[8151],"declarations":[{"constant":false,"id":8151,"mutability":"mutable","name":"count","nameLocation":"57094:5:11","nodeType":"VariableDeclaration","scope":8291,"src":"57086:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8150,"name":"uint256","nodeType":"ElementaryTypeName","src":"57086:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8152,"nodeType":"VariableDeclarationStatement","src":"57086:13:11"},{"body":{"id":8186,"nodeType":"Block","src":"57295:322:11","statements":[{"assignments":[8165],"declarations":[{"constant":false,"id":8165,"mutability":"mutable","name":"s","nameLocation":"57366:1:11","nodeType":"VariableDeclaration","scope":8186,"src":"57359:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":8164,"nodeType":"UserDefinedTypeName","pathNode":{"id":8163,"name":"Status","nameLocations":["57359:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"57359:6:11"},"referencedDeclaration":5778,"src":"57359:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":8171,"initialValue":{"baseExpression":{"id":8166,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"57370:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":8170,"indexExpression":{"baseExpression":{"id":8167,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"57384:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8169,"indexExpression":{"id":8168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"57393:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"57384:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"57370:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"57359:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8172,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"57469:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8173,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"57474:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"57481:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"57474:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"57469:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8176,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"57492:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8177,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"57497:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"57504:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"57497:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"57492:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"57469:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8185,"nodeType":"IfStatement","src":"57465:141:11","trueBody":{"id":8184,"nodeType":"Block","src":"57512:94:11","statements":[{"expression":{"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"57583:7:11","subExpression":{"id":8181,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"57583:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8183,"nodeType":"ExpressionStatement","src":"57583:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"57281:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8158,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"57285:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"57281:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8187,"initializationExpression":{"assignments":[8154],"declarations":[{"constant":false,"id":8154,"mutability":"mutable","name":"i","nameLocation":"57274:1:11","nodeType":"VariableDeclaration","scope":8187,"src":"57266:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8153,"name":"uint256","nodeType":"ElementaryTypeName","src":"57266:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8156,"initialValue":{"hexValue":"30","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"57278:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"57266:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"57290:3:11","subExpression":{"id":8160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"57290:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8162,"nodeType":"ExpressionStatement","src":"57290:3:11"},"nodeType":"ForStatement","src":"57261:356:11"},{"assignments":[8192],"declarations":[{"constant":false,"id":8192,"mutability":"mutable","name":"result","nameLocation":"57687:6:11","nodeType":"VariableDeclaration","scope":8291,"src":"57670:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8190,"name":"address","nodeType":"ElementaryTypeName","src":"57670:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8191,"nodeType":"ArrayTypeName","src":"57670:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":8198,"initialValue":{"arguments":[{"id":8196,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"57712:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"57698:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":8193,"name":"address","nodeType":"ElementaryTypeName","src":"57702:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8194,"nodeType":"ArrayTypeName","src":"57702:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57698:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"57670:48:11"},{"assignments":[8203],"declarations":[{"constant":false,"id":8203,"mutability":"mutable","name":"statuses","nameLocation":"57821:8:11","nodeType":"VariableDeclaration","scope":8291,"src":"57804:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":8201,"name":"uint8","nodeType":"ElementaryTypeName","src":"57804:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8202,"nodeType":"ArrayTypeName","src":"57804:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"}],"id":8209,"initialValue":{"arguments":[{"id":8207,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"57844:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"57832:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint8[] memory)"},"typeName":{"baseType":{"id":8204,"name":"uint8","nodeType":"ElementaryTypeName","src":"57836:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8205,"nodeType":"ArrayTypeName","src":"57836:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57832:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"nodeType":"VariableDeclarationStatement","src":"57804:46:11"},{"assignments":[8214],"declarations":[{"constant":false,"id":8214,"mutability":"mutable","name":"names","nameLocation":"57926:5:11","nodeType":"VariableDeclaration","scope":8291,"src":"57909:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8212,"name":"string","nodeType":"ElementaryTypeName","src":"57909:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8213,"nodeType":"ArrayTypeName","src":"57909:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":8220,"initialValue":{"arguments":[{"id":8218,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"57950:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"57937:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":8215,"name":"string","nodeType":"ElementaryTypeName","src":"57941:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8216,"nodeType":"ArrayTypeName","src":"57941:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57937:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"57909:47:11"},{"assignments":[8222],"declarations":[{"constant":false,"id":8222,"mutability":"mutable","name":"index","nameLocation":"58027:5:11","nodeType":"VariableDeclaration","scope":8291,"src":"58019:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8221,"name":"uint256","nodeType":"ElementaryTypeName","src":"58019:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8223,"nodeType":"VariableDeclarationStatement","src":"58019:13:11"},{"body":{"id":8284,"nodeType":"Block","src":"58079:656:11","statements":[{"assignments":[8236],"declarations":[{"constant":false,"id":8236,"mutability":"mutable","name":"s","nameLocation":"58156:1:11","nodeType":"VariableDeclaration","scope":8284,"src":"58149:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":8235,"nodeType":"UserDefinedTypeName","pathNode":{"id":8234,"name":"Status","nameLocations":["58149:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"58149:6:11"},"referencedDeclaration":5778,"src":"58149:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":8242,"initialValue":{"baseExpression":{"id":8237,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"58160:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":8241,"indexExpression":{"baseExpression":{"id":8238,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"58174:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8240,"indexExpression":{"id":8239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"58183:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"58174:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"58160:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"58149:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8243,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"58259:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8244,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"58264:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"58271:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"58264:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"58259:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8247,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"58282:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8248,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"58287:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":8249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"58294:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"58287:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"58282:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"58259:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8283,"nodeType":"IfStatement","src":"58255:469:11","trueBody":{"id":8282,"nodeType":"Block","src":"58302:422:11","statements":[{"expression":{"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"58373:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8254,"indexExpression":{"id":8253,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"58380:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"58373:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8255,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"58389:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8257,"indexExpression":{"id":8256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"58398:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"58389:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"58373:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8259,"nodeType":"ExpressionStatement","src":"58373:27:11"},{"expression":{"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8260,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"58487:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"id":8262,"indexExpression":{"id":8261,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"58496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"58487:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8265,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"58511:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":8264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"58505:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8263,"name":"uint8","nodeType":"ElementaryTypeName","src":"58505:5:11","typeDescriptions":{}}},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58505:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"58487:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8268,"nodeType":"ExpressionStatement","src":"58487:26:11"},{"expression":{"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8269,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"58592:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8271,"indexExpression":{"id":8270,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"58598:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"58592:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8272,"name":"missionNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"58607:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":8276,"indexExpression":{"baseExpression":{"id":8273,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"58620:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8275,"indexExpression":{"id":8274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"58629:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"58620:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"58607:25:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"58592:40:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8278,"nodeType":"ExpressionStatement","src":"58592:40:11"},{"expression":{"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"58701:7:11","subExpression":{"id":8279,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"58701:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8281,"nodeType":"ExpressionStatement","src":"58701:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"58065:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8229,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"58069:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"58065:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8285,"initializationExpression":{"assignments":[8225],"declarations":[{"constant":false,"id":8225,"mutability":"mutable","name":"i","nameLocation":"58058:1:11","nodeType":"VariableDeclaration","scope":8285,"src":"58050:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8224,"name":"uint256","nodeType":"ElementaryTypeName","src":"58050:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8227,"initialValue":{"hexValue":"30","id":8226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"58062:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"58050:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"58074:3:11","subExpression":{"id":8231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"58074:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8233,"nodeType":"ExpressionStatement","src":"58074:3:11"},"nodeType":"ForStatement","src":"58045:690:11"},{"expression":{"components":[{"id":8286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"58755:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":8287,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"58763:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},{"id":8288,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"58773:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":8289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"58754:25:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint8[] memory,string memory[] memory)"}},"functionReturnParameters":8144,"id":8290,"nodeType":"Return","src":"58747:32:11"}]},"documentation":{"id":8133,"nodeType":"StructuredDocumentation","src":"56571:251:11","text":" @dev Returns the addresses of missions that have ended.\n This function filters out missions that are in the Ended or Failed status.\n @return An array of mission addresses and an array of their corresponding statuses."},"functionSelector":"b6202913","id":8292,"implemented":true,"kind":"function","modifiers":[],"name":"getMissionsEnded","nameLocation":"56837:16:11","nodeType":"FunctionDefinition","parameters":{"id":8134,"nodeType":"ParameterList","parameters":[],"src":"56853:2:11"},"returnParameters":{"id":8144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8292,"src":"56923:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8135,"name":"address","nodeType":"ElementaryTypeName","src":"56923:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8136,"nodeType":"ArrayTypeName","src":"56923:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8292,"src":"56941:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":8138,"name":"uint8","nodeType":"ElementaryTypeName","src":"56941:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8139,"nodeType":"ArrayTypeName","src":"56941:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":8143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8292,"src":"56957:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8141,"name":"string","nodeType":"ElementaryTypeName","src":"56957:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8142,"nodeType":"ArrayTypeName","src":"56957:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"56922:51:11"},"scope":8483,"src":"56828:2059:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8407,"nodeType":"Block","src":"59353:1248:11","statements":[{"assignments":[8308],"declarations":[{"constant":false,"id":8308,"mutability":"mutable","name":"total","nameLocation":"59372:5:11","nodeType":"VariableDeclaration","scope":8407,"src":"59364:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8307,"name":"uint256","nodeType":"ElementaryTypeName","src":"59364:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8311,"initialValue":{"expression":{"id":8309,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"59380:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"59389:6:11","memberName":"length","nodeType":"MemberAccess","src":"59380:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"59364:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8312,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"59465:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8313,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"59469:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"59465:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8319,"nodeType":"IfStatement","src":"59461:24:11","trueBody":{"expression":{"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8315,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"59476:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8316,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"59480:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"59476:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8318,"nodeType":"ExpressionStatement","src":"59476:9:11"}},{"assignments":[8324],"declarations":[{"constant":false,"id":8324,"mutability":"mutable","name":"result","nameLocation":"59613:6:11","nodeType":"VariableDeclaration","scope":8407,"src":"59596:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8322,"name":"address","nodeType":"ElementaryTypeName","src":"59596:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8323,"nodeType":"ArrayTypeName","src":"59596:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":8330,"initialValue":{"arguments":[{"id":8328,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"59638:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"59624:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":8325,"name":"address","nodeType":"ElementaryTypeName","src":"59628:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8326,"nodeType":"ArrayTypeName","src":"59628:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"59624:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"59596:44:11"},{"assignments":[8335],"declarations":[{"constant":false,"id":8335,"mutability":"mutable","name":"statuses","nameLocation":"59738:8:11","nodeType":"VariableDeclaration","scope":8407,"src":"59721:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":8333,"name":"uint8","nodeType":"ElementaryTypeName","src":"59721:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8334,"nodeType":"ArrayTypeName","src":"59721:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"}],"id":8341,"initialValue":{"arguments":[{"id":8339,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"59761:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"59749:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint8[] memory)"},"typeName":{"baseType":{"id":8336,"name":"uint8","nodeType":"ElementaryTypeName","src":"59753:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8337,"nodeType":"ArrayTypeName","src":"59753:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}}},"id":8340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"59749:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"nodeType":"VariableDeclarationStatement","src":"59721:42:11"},{"assignments":[8346],"declarations":[{"constant":false,"id":8346,"mutability":"mutable","name":"names","nameLocation":"59839:5:11","nodeType":"VariableDeclaration","scope":8407,"src":"59822:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8344,"name":"string","nodeType":"ElementaryTypeName","src":"59822:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8345,"nodeType":"ArrayTypeName","src":"59822:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":8352,"initialValue":{"arguments":[{"id":8350,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"59863:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"59850:12:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":8347,"name":"string","nodeType":"ElementaryTypeName","src":"59854:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8348,"nodeType":"ArrayTypeName","src":"59854:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"59850:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"59822:43:11"},{"body":{"id":8400,"nodeType":"Block","src":"59962:491:11","statements":[{"assignments":[8364],"declarations":[{"constant":false,"id":8364,"mutability":"mutable","name":"m","nameLocation":"60039:1:11","nodeType":"VariableDeclaration","scope":8400,"src":"60031:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8363,"name":"address","nodeType":"ElementaryTypeName","src":"60031:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8372,"initialValue":{"baseExpression":{"id":8365,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"60043:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8371,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8366,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"60052:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"60060:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"60052:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"60064:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60052:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"60043:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"60031:35:11"},{"expression":{"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"60126:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8375,"indexExpression":{"id":8374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"60133:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"60126:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8376,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"60138:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"60126:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8378,"nodeType":"ExpressionStatement","src":"60126:13:11"},{"expression":{"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8379,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"60236:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"id":8381,"indexExpression":{"id":8380,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"60245:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"60236:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":8384,"name":"missionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"60256:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_Status_$5778_$","typeString":"mapping(address => enum Status)"}},"id":8386,"indexExpression":{"id":8385,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"60270:1:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"60256:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":8383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"60250:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8382,"name":"uint8","nodeType":"ElementaryTypeName","src":"60250:5:11","typeDescriptions":{}}},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60250:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"60236:37:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8389,"nodeType":"ExpressionStatement","src":"60236:37:11"},{"expression":{"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8390,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8346,"src":"60352:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8392,"indexExpression":{"id":8391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"60358:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"60352:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8393,"name":"missionNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"60363:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":8397,"indexExpression":{"baseExpression":{"id":8394,"name":"missions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"60376:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8396,"indexExpression":{"id":8395,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"60385:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"60376:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"60363:25:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"60352:36:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8399,"nodeType":"ExpressionStatement","src":"60352:36:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"59950:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8358,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"59954:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"59950:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8401,"initializationExpression":{"assignments":[8354],"declarations":[{"constant":false,"id":8354,"mutability":"mutable","name":"i","nameLocation":"59943:1:11","nodeType":"VariableDeclaration","scope":8401,"src":"59935:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8353,"name":"uint256","nodeType":"ElementaryTypeName","src":"59935:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8356,"initialValue":{"hexValue":"30","id":8355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"59947:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"59935:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"59957:3:11","subExpression":{"id":8360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"59957:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8362,"nodeType":"ExpressionStatement","src":"59957:3:11"},"nodeType":"ForStatement","src":"59930:523:11"},{"expression":{"components":[{"id":8402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"60473:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":8403,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"60481:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},{"id":8404,"name":"names","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8346,"src":"60491:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"id":8405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"60472:25:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint8[] memory,string memory[] memory)"}},"functionReturnParameters":8306,"id":8406,"nodeType":"Return","src":"60465:32:11"}]},"documentation":{"id":8293,"nodeType":"StructuredDocumentation","src":"58895:306:11","text":" @dev Returns the addresses of the latest n missions.\n This function retrieves the last n missions from the list of all missions.\n @param n The number of latest missions to return.\n @return An array of mission addresses and an array of their corresponding statuses."},"functionSelector":"7e9eae50","id":8408,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestMissions","nameLocation":"59216:17:11","nodeType":"FunctionDefinition","parameters":{"id":8296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8295,"mutability":"mutable","name":"n","nameLocation":"59242:1:11","nodeType":"VariableDeclaration","scope":8408,"src":"59234:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8294,"name":"uint256","nodeType":"ElementaryTypeName","src":"59234:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59233:11:11"},"returnParameters":{"id":8306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8408,"src":"59302:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8297,"name":"address","nodeType":"ElementaryTypeName","src":"59302:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8298,"nodeType":"ArrayTypeName","src":"59302:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8408,"src":"59320:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":8300,"name":"uint8","nodeType":"ElementaryTypeName","src":"59320:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8301,"nodeType":"ArrayTypeName","src":"59320:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":8305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8408,"src":"59336:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8303,"name":"string","nodeType":"ElementaryTypeName","src":"59336:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8304,"nodeType":"ArrayTypeName","src":"59336:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"59301:51:11"},"scope":8483,"src":"59207:1394:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8421,"nodeType":"Block","src":"60932:153:11","statements":[{"expression":{"baseExpression":{"id":8417,"name":"reservedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"60950:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_MissionType_$5768_$_t_uint256_$","typeString":"mapping(enum MissionType => uint256)"}},"id":8419,"indexExpression":{"id":8418,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"60964:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"60950:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8416,"id":8420,"nodeType":"Return","src":"60943:27:11"}]},"documentation":{"id":8409,"nodeType":"StructuredDocumentation","src":"60609:213:11","text":" @dev Returns the reserved funds for a specific mission type.\n @param _type The type of the mission to check.\n @return The amount of reserved funds for the specified mission type."},"functionSelector":"2e33b07f","id":8422,"implemented":true,"kind":"function","modifiers":[],"name":"getFundsByType","nameLocation":"60837:14:11","nodeType":"FunctionDefinition","parameters":{"id":8413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8412,"mutability":"mutable","name":"_type","nameLocation":"60864:5:11","nodeType":"VariableDeclaration","scope":8422,"src":"60852:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":8411,"nodeType":"UserDefinedTypeName","pathNode":{"id":8410,"name":"MissionType","nameLocations":["60852:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"60852:11:11"},"referencedDeclaration":5768,"src":"60852:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"}],"src":"60851:19:11"},"returnParameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8422,"src":"60923:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8414,"name":"uint256","nodeType":"ElementaryTypeName","src":"60923:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60922:9:11"},"scope":8483,"src":"60828:257:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8481,"nodeType":"Block","src":"61503:656:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8434,"name":"proposalTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"61518:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61539:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"61518:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8450,"nodeType":"IfStatement","src":"61514:143:11","trueBody":{"id":8449,"nodeType":"Block","src":"61542:115:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61573:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"61565:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8437,"name":"address","nodeType":"ElementaryTypeName","src":"61565:7:11","typeDescriptions":{}}},"id":8440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61565:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":8443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61585:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"61577:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8441,"name":"address","nodeType":"ElementaryTypeName","src":"61577:7:11","typeDescriptions":{}}},"id":8444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61577:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":8445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61589:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61592:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"61564:30:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(address,address,int_const 0,int_const 0)"}},"functionReturnParameters":8433,"id":8448,"nodeType":"Return","src":"61557:37:11"}]}},{"assignments":[8452],"declarations":[{"constant":false,"id":8452,"mutability":"mutable","name":"expiry","nameLocation":"61677:6:11","nodeType":"VariableDeclaration","scope":8481,"src":"61669:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8451,"name":"uint256","nodeType":"ElementaryTypeName","src":"61669:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8453,"name":"proposalTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"61686:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8454,"name":"OWNERSHIP_PROPOSAL_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"61706:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"61686:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"61669:62:11"},{"assignments":[8458],"declarations":[{"constant":false,"id":8458,"mutability":"mutable","name":"nowTs","nameLocation":"61750:5:11","nodeType":"VariableDeclaration","scope":8481,"src":"61742:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8457,"name":"uint256","nodeType":"ElementaryTypeName","src":"61742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8461,"initialValue":{"expression":{"id":8459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"61758:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"61764:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"61758:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"61742:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8462,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8458,"src":"61790:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8463,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8452,"src":"61799:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"61790:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8472,"nodeType":"IfStatement","src":"61786:125:11","trueBody":{"id":8471,"nodeType":"Block","src":"61807:104:11","statements":[{"expression":{"components":[{"id":8465,"name":"proposedNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"61830:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8466,"name":"proposalProposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"61848:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8467,"name":"proposalTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"61866:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":8468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"61885:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"61829:58:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_rational_0_by_1_$","typeString":"tuple(address,address,uint256,int_const 0)"}},"functionReturnParameters":8433,"id":8470,"nodeType":"Return","src":"61822:65:11"}]}},{"expression":{"components":[{"id":8473,"name":"proposedNewOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"61945:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8474,"name":"proposalProposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"61976:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8475,"name":"proposalTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"62007:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8476,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8452,"src":"62039:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8477,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8458,"src":"62048:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"62039:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"61930:221:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,address,uint256,uint256)"}},"functionReturnParameters":8433,"id":8480,"nodeType":"Return","src":"61923:228:11"}]},"documentation":{"id":8423,"nodeType":"StructuredDocumentation","src":"61093:233:11","text":" @dev Returns the proposal data\n @return newOwner the stored newOwner proposal\n @return proposer the proposer\n @return timestamp the time of the proposal\n @return timeLeft the time left"},"functionSelector":"8c09b7c3","id":8482,"implemented":true,"kind":"function","modifiers":[],"name":"getOwnershipProposal","nameLocation":"61344:20:11","nodeType":"FunctionDefinition","parameters":{"id":8424,"nodeType":"ParameterList","parameters":[],"src":"61364:2:11"},"returnParameters":{"id":8433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8426,"mutability":"mutable","name":"newOwner","nameLocation":"61438:8:11","nodeType":"VariableDeclaration","scope":8482,"src":"61430:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8425,"name":"address","nodeType":"ElementaryTypeName","src":"61430:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8428,"mutability":"mutable","name":"proposer","nameLocation":"61456:8:11","nodeType":"VariableDeclaration","scope":8482,"src":"61448:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8427,"name":"address","nodeType":"ElementaryTypeName","src":"61448:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8430,"mutability":"mutable","name":"timestamp","nameLocation":"61474:9:11","nodeType":"VariableDeclaration","scope":8482,"src":"61466:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8429,"name":"uint256","nodeType":"ElementaryTypeName","src":"61466:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8432,"mutability":"mutable","name":"timeLeft","nameLocation":"61493:8:11","nodeType":"VariableDeclaration","scope":8482,"src":"61485:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8431,"name":"uint256","nodeType":"ElementaryTypeName","src":"61485:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61429:73:11"},"scope":8483,"src":"61335:824:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10582,"src":"6380:55784:11","usedErrors":[13,18,685,691,763],"usedEvents":[24,5795,5799,5806,5812,5821,5827,5835,5843,5849,5855]},{"abstract":false,"baseContracts":[{"baseName":{"id":8484,"name":"Ownable","nameLocations":["62326:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"62326:7:11"},"id":8485,"nodeType":"InheritanceSpecifier","src":"62326:7:11"},{"baseName":{"id":8486,"name":"ReentrancyGuard","nameLocations":["62335:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":818,"src":"62335:15:11"},"id":8487,"nodeType":"InheritanceSpecifier","src":"62335:15:11"}],"canonicalName":"Mission","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10581,"linearizedBaseContracts":[10581,818,147,576],"name":"Mission","nameLocation":"62308:7:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"39ba628632d48c45c7f562c07db20a44cf68423691d5d79b20f87ba84138aedf","id":8497,"name":"MissionStatusChanged","nameLocation":"62513:20:11","nodeType":"EventDefinition","parameters":{"id":8496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"indexed":true,"mutability":"mutable","name":"previousStatus","nameLocation":"62555:14:11","nodeType":"VariableDeclaration","scope":8497,"src":"62536:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":8489,"nodeType":"UserDefinedTypeName","pathNode":{"id":8488,"name":"Status","nameLocations":["62536:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"62536:6:11"},"referencedDeclaration":5778,"src":"62536:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"},{"constant":false,"id":8493,"indexed":true,"mutability":"mutable","name":"newStatus","nameLocation":"62591:9:11","nodeType":"VariableDeclaration","scope":8497,"src":"62571:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":8492,"nodeType":"UserDefinedTypeName","pathNode":{"id":8491,"name":"Status","nameLocations":["62571:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"62571:6:11"},"referencedDeclaration":5778,"src":"62571:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"},{"constant":false,"id":8495,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"62615:9:11","nodeType":"VariableDeclaration","scope":8497,"src":"62607:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8494,"name":"uint256","nodeType":"ElementaryTypeName","src":"62607:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62535:109:11"},"src":"62507:138:11"},{"anonymous":false,"eventSelector":"bedd10d90b8962eb521114c7e2b49019403d371ffa1e46afbda7a3f1fde8f06f","id":8505,"name":"PlayerEnrolled","nameLocation":"62657:14:11","nodeType":"EventDefinition","parameters":{"id":8504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8499,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"62699:6:11","nodeType":"VariableDeclaration","scope":8505,"src":"62680:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8498,"name":"address","nodeType":"ElementaryTypeName","src":"62680:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8501,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"62735:6:11","nodeType":"VariableDeclaration","scope":8505,"src":"62715:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8500,"name":"uint256","nodeType":"ElementaryTypeName","src":"62715:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8503,"indexed":false,"mutability":"mutable","name":"totalPlayers","nameLocation":"62759:12:11","nodeType":"VariableDeclaration","scope":8505,"src":"62751:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8502,"name":"uint256","nodeType":"ElementaryTypeName","src":"62751:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62679:109:11"},"src":"62651:138:11"},{"anonymous":false,"eventSelector":"bbdd894f5e6d754c18172761a1a461095c26de58905e706a8c33657573d40672","id":8515,"name":"RoundCalled","nameLocation":"62801:11:11","nodeType":"EventDefinition","parameters":{"id":8514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8507,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"62843:6:11","nodeType":"VariableDeclaration","scope":8515,"src":"62824:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8506,"name":"address","nodeType":"ElementaryTypeName","src":"62824:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8509,"indexed":true,"mutability":"mutable","name":"roundNumber","nameLocation":"62879:11:11","nodeType":"VariableDeclaration","scope":8515,"src":"62859:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8508,"name":"uint8","nodeType":"ElementaryTypeName","src":"62859:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8511,"indexed":false,"mutability":"mutable","name":"payout","nameLocation":"62903:6:11","nodeType":"VariableDeclaration","scope":8515,"src":"62895:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8510,"name":"uint256","nodeType":"ElementaryTypeName","src":"62895:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8513,"indexed":false,"mutability":"mutable","name":"croRemaining","nameLocation":"62919:12:11","nodeType":"VariableDeclaration","scope":8515,"src":"62911:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8512,"name":"uint256","nodeType":"ElementaryTypeName","src":"62911:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62823:109:11"},"src":"62795:138:11"},{"anonymous":false,"eventSelector":"48d31f1c958cd44f1f83a52ae2dfaf61e88a1b82c07a6d5711a4abef60b6531e","id":8521,"name":"PlayerRefunded","nameLocation":"62945:14:11","nodeType":"EventDefinition","parameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8517,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"62987:6:11","nodeType":"VariableDeclaration","scope":8521,"src":"62968:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8516,"name":"address","nodeType":"ElementaryTypeName","src":"62968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8519,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"63023:6:11","nodeType":"VariableDeclaration","scope":8521,"src":"63003:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8518,"name":"uint256","nodeType":"ElementaryTypeName","src":"63003:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62967:109:11"},"src":"62939:138:11"},{"anonymous":false,"eventSelector":"d66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c4","id":8527,"name":"FundsWithdrawn","nameLocation":"63089:14:11","nodeType":"EventDefinition","parameters":{"id":8526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8523,"indexed":false,"mutability":"mutable","name":"ownerAmount","nameLocation":"63131:11:11","nodeType":"VariableDeclaration","scope":8527,"src":"63112:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8522,"name":"uint256","nodeType":"ElementaryTypeName","src":"63112:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8525,"indexed":false,"mutability":"mutable","name":"factoryAmount","nameLocation":"63167:13:11","nodeType":"VariableDeclaration","scope":8527,"src":"63147:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8524,"name":"uint256","nodeType":"ElementaryTypeName","src":"63147:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63111:109:11"},"src":"63083:138:11"},{"anonymous":false,"eventSelector":"af73b0b217208b61be286bbc37095bce7eb8b9ccf617244c2f0f154e8e04e3ff","id":8533,"name":"RefundFailed","nameLocation":"63233:12:11","nodeType":"EventDefinition","parameters":{"id":8532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8529,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"63275:6:11","nodeType":"VariableDeclaration","scope":8533,"src":"63256:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8528,"name":"address","nodeType":"ElementaryTypeName","src":"63256:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8531,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"63311:6:11","nodeType":"VariableDeclaration","scope":8533,"src":"63291:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8530,"name":"uint256","nodeType":"ElementaryTypeName","src":"63291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63255:109:11"},"src":"63227:138:11"},{"anonymous":false,"eventSelector":"bb93c7c839bddd97272c8e974d54d30adfa3aa55df63a52f02b7192efd361a24","id":8544,"name":"MissionRefunded","nameLocation":"63378:15:11","nodeType":"EventDefinition","parameters":{"id":8543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8535,"indexed":true,"mutability":"mutable","name":"nrOfPlayers","nameLocation":"63420:11:11","nodeType":"VariableDeclaration","scope":8544,"src":"63401:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8534,"name":"uint256","nodeType":"ElementaryTypeName","src":"63401:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8537,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"63456:6:11","nodeType":"VariableDeclaration","scope":8544,"src":"63436:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8536,"name":"uint256","nodeType":"ElementaryTypeName","src":"63436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8540,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"63490:6:11","nodeType":"VariableDeclaration","scope":8544,"src":"63472:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8538,"name":"address","nodeType":"ElementaryTypeName","src":"63472:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8539,"nodeType":"ArrayTypeName","src":"63472:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8542,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"63507:9:11","nodeType":"VariableDeclaration","scope":8544,"src":"63499:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8541,"name":"uint256","nodeType":"ElementaryTypeName","src":"63499:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63400:117:11"},"src":"63372:146:11"},{"anonymous":false,"eventSelector":"e9597995b7a2af444cc28b2b776b88b1253d701282a9bcf902d4f59750df7c57","id":8553,"name":"MissionInitialized","nameLocation":"63573:18:11","nodeType":"EventDefinition","parameters":{"id":8552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"63615:5:11","nodeType":"VariableDeclaration","scope":8553,"src":"63596:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8545,"name":"address","nodeType":"ElementaryTypeName","src":"63596:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8549,"indexed":true,"mutability":"mutable","name":"missionType","nameLocation":"63651:11:11","nodeType":"VariableDeclaration","scope":8553,"src":"63631:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":8548,"nodeType":"UserDefinedTypeName","pathNode":{"id":8547,"name":"MissionType","nameLocations":["63631:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"63631:11:11"},"referencedDeclaration":5768,"src":"63631:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"},{"constant":false,"id":8551,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"63675:9:11","nodeType":"VariableDeclaration","scope":8553,"src":"63667:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8550,"name":"uint256","nodeType":"ElementaryTypeName","src":"63667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63595:109:11"},"src":"63567:138:11"},{"anonymous":false,"eventSelector":"7272b264c9ef2a1e8e9303944736f4977b14a5761227b7b9869fecaa60f89387","id":8559,"name":"PotIncreased","nameLocation":"63714:12:11","nodeType":"EventDefinition","parameters":{"id":8558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8555,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"63740:5:11","nodeType":"VariableDeclaration","scope":8559,"src":"63730:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8554,"name":"uint256","nodeType":"ElementaryTypeName","src":"63730:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8557,"indexed":false,"mutability":"mutable","name":"croCurrent","nameLocation":"63760:10:11","nodeType":"VariableDeclaration","scope":8559,"src":"63749:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8556,"name":"uint256","nodeType":"ElementaryTypeName","src":"63749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63729:53:11"},"src":"63708:75:11"},{"errorSelector":"99a03df6","id":8565,"name":"EnrollmentNotStarted","nameLocation":"63898:20:11","nodeType":"ErrorDefinition","parameters":{"id":8564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8561,"mutability":"mutable","name":"nowTs","nameLocation":"63927:5:11","nodeType":"VariableDeclaration","scope":8565,"src":"63919:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8560,"name":"uint256","nodeType":"ElementaryTypeName","src":"63919:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8563,"mutability":"mutable","name":"startTs","nameLocation":"63942:7:11","nodeType":"VariableDeclaration","scope":8565,"src":"63934:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8562,"name":"uint256","nodeType":"ElementaryTypeName","src":"63934:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63918:32:11"},"src":"63892:59:11"},{"errorSelector":"b3228648","id":8571,"name":"EnrollmentClosed","nameLocation":"64002:16:11","nodeType":"ErrorDefinition","parameters":{"id":8570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8567,"mutability":"mutable","name":"nowTs","nameLocation":"64027:5:11","nodeType":"VariableDeclaration","scope":8571,"src":"64019:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8566,"name":"uint256","nodeType":"ElementaryTypeName","src":"64019:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8569,"mutability":"mutable","name":"endTs","nameLocation":"64042:5:11","nodeType":"VariableDeclaration","scope":8571,"src":"64034:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8568,"name":"uint256","nodeType":"ElementaryTypeName","src":"64034:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64018:30:11"},"src":"63996:53:11"},{"errorSelector":"647bcfa1","id":8575,"name":"MaxPlayers","nameLocation":"64096:10:11","nodeType":"ErrorDefinition","parameters":{"id":8574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8573,"mutability":"mutable","name":"maxPlayers","nameLocation":"64113:10:11","nodeType":"VariableDeclaration","scope":8575,"src":"64107:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8572,"name":"uint8","nodeType":"ElementaryTypeName","src":"64107:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"64106:18:11"},"src":"64090:35:11"},{"errorSelector":"54d7a6b3","id":8581,"name":"WrongEntryFee","nameLocation":"64214:13:11","nodeType":"ErrorDefinition","parameters":{"id":8580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8577,"mutability":"mutable","name":"expected","nameLocation":"64236:8:11","nodeType":"VariableDeclaration","scope":8581,"src":"64228:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8576,"name":"uint256","nodeType":"ElementaryTypeName","src":"64228:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8579,"mutability":"mutable","name":"sent","nameLocation":"64254:4:11","nodeType":"VariableDeclaration","scope":8581,"src":"64246:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8578,"name":"uint256","nodeType":"ElementaryTypeName","src":"64246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64227:32:11"},"src":"64208:52:11"},{"errorSelector":"003b2682","id":8583,"name":"AlreadyJoined","nameLocation":"64341:13:11","nodeType":"ErrorDefinition","parameters":{"id":8582,"nodeType":"ParameterList","parameters":[],"src":"64354:2:11"},"src":"64335:22:11"},{"errorSelector":"db13c3c8","id":8587,"name":"WeeklyLimit","nameLocation":"64452:11:11","nodeType":"ErrorDefinition","parameters":{"id":8586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8585,"mutability":"mutable","name":"secondsLeft","nameLocation":"64472:11:11","nodeType":"VariableDeclaration","scope":8587,"src":"64464:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8584,"name":"uint256","nodeType":"ElementaryTypeName","src":"64464:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64463:21:11"},"src":"64446:39:11"},{"errorSelector":"a3e73378","id":8591,"name":"MonthlyLimit","nameLocation":"64580:12:11","nodeType":"ErrorDefinition","parameters":{"id":8590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8589,"mutability":"mutable","name":"secondsLeft","nameLocation":"64601:11:11","nodeType":"VariableDeclaration","scope":8591,"src":"64593:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8588,"name":"uint256","nodeType":"ElementaryTypeName","src":"64593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64592:21:11"},"src":"64574:40:11"},{"errorSelector":"ff658a1c","id":8595,"name":"Cooldown","nameLocation":"64708:8:11","nodeType":"ErrorDefinition","parameters":{"id":8594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8593,"mutability":"mutable","name":"secondsLeft","nameLocation":"64725:11:11","nodeType":"VariableDeclaration","scope":8595,"src":"64717:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8592,"name":"uint256","nodeType":"ElementaryTypeName","src":"64717:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64716:21:11"},"src":"64702:36:11"},{"errorSelector":"5bd78edc","id":8601,"name":"NotActive","nameLocation":"64840:9:11","nodeType":"ErrorDefinition","parameters":{"id":8600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8597,"mutability":"mutable","name":"nowTs","nameLocation":"64858:5:11","nodeType":"VariableDeclaration","scope":8601,"src":"64850:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8596,"name":"uint256","nodeType":"ElementaryTypeName","src":"64850:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8599,"mutability":"mutable","name":"missionStart","nameLocation":"64873:12:11","nodeType":"VariableDeclaration","scope":8601,"src":"64865:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8598,"name":"uint256","nodeType":"ElementaryTypeName","src":"64865:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64849:37:11"},"src":"64834:53:11"},{"errorSelector":"d6a05df0","id":8603,"name":"MissionEnded","nameLocation":"64939:12:11","nodeType":"ErrorDefinition","parameters":{"id":8602,"nodeType":"ParameterList","parameters":[],"src":"64951:2:11"},"src":"64933:21:11"},{"errorSelector":"05571f12","id":8605,"name":"AlreadyWon","nameLocation":"65038:10:11","nodeType":"ErrorDefinition","parameters":{"id":8604,"nodeType":"ParameterList","parameters":[],"src":"65048:2:11"},"src":"65032:19:11"},{"errorSelector":"c394a433","id":8607,"name":"NotJoined","nameLocation":"65154:9:11","nodeType":"ErrorDefinition","parameters":{"id":8606,"nodeType":"ParameterList","parameters":[],"src":"65163:2:11"},"src":"65148:18:11"},{"errorSelector":"86e53dec","id":8609,"name":"AllRoundsDone","nameLocation":"65261:13:11","nodeType":"ErrorDefinition","parameters":{"id":8608,"nodeType":"ParameterList","parameters":[],"src":"65274:2:11"},"src":"65255:22:11"},{"errorSelector":"d086db43","id":8617,"name":"PayoutFailed","nameLocation":"65380:12:11","nodeType":"ErrorDefinition","parameters":{"id":8616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8611,"mutability":"mutable","name":"winner","nameLocation":"65401:6:11","nodeType":"VariableDeclaration","scope":8617,"src":"65393:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8610,"name":"address","nodeType":"ElementaryTypeName","src":"65393:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8613,"mutability":"mutable","name":"amount","nameLocation":"65417:6:11","nodeType":"VariableDeclaration","scope":8617,"src":"65409:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8612,"name":"uint256","nodeType":"ElementaryTypeName","src":"65409:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8615,"mutability":"mutable","name":"data","nameLocation":"65431:4:11","nodeType":"VariableDeclaration","scope":8617,"src":"65425:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8614,"name":"bytes","nodeType":"ElementaryTypeName","src":"65425:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"65392:44:11"},"src":"65374:63:11"},{"errorSelector":"008b5315","id":8619,"name":"ContractsNotAllowed","nameLocation":"65479:19:11","nodeType":"ErrorDefinition","parameters":{"id":8618,"nodeType":"ParameterList","parameters":[],"src":"65498:2:11"},"src":"65473:28:11"},{"body":{"id":8638,"nodeType":"Block","src":"65963:166:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"65996:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"66000:6:11","memberName":"sender","nodeType":"MemberAccess","src":"65996:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8625,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"66010:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66010:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"65996:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":8630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"66047:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"66051:6:11","memberName":"sender","nodeType":"MemberAccess","src":"66047:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8628,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"66021:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"66036:10:11","memberName":"authorized","nodeType":"MemberAccess","referencedDeclaration":5920,"src":"66021:25:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66021:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"65996:62:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572206f7220617574686f72697a6564","id":8634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"66073:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad5e0e69e6cd78c3a1ddb80220a5e03a4c8e3adc079e83de8372b139ae1d3792","typeString":"literal_string \"Not owner or authorized\""},"value":"Not owner or authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad5e0e69e6cd78c3a1ddb80220a5e03a4c8e3adc079e83de8372b139ae1d3792","typeString":"literal_string \"Not owner or authorized\""}],"id":8622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"65974:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"65974:135:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8636,"nodeType":"ExpressionStatement","src":"65974:135:11"},{"id":8637,"nodeType":"PlaceholderStatement","src":"66120:1:11"}]},"documentation":{"id":8620,"nodeType":"StructuredDocumentation","src":"65734:190:11","text":" @dev Modifier to restrict access to the owner or an authorized address.\n This is used for functions that can only be called by the owner or an authorized address."},"id":8639,"name":"onlyOwnerOrAuthorized","nameLocation":"65939:21:11","nodeType":"ModifierDefinition","parameters":{"id":8621,"nodeType":"ParameterList","parameters":[],"src":"65960:2:11"},"src":"65930:199:11","virtual":false,"visibility":"internal"},{"canonicalName":"Mission.PlayersWon","documentation":{"id":8640,"nodeType":"StructuredDocumentation","src":"66279:150:11","text":" @dev Struct to hold information about players who won the mission.\n Contains the player's address and the amount they won."},"id":8645,"members":[{"constant":false,"id":8642,"mutability":"mutable","name":"player","nameLocation":"66472:6:11","nodeType":"VariableDeclaration","scope":8645,"src":"66464:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8641,"name":"address","nodeType":"ElementaryTypeName","src":"66464:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8644,"mutability":"mutable","name":"amountWon","nameLocation":"66550:9:11","nodeType":"VariableDeclaration","scope":8645,"src":"66542:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8643,"name":"uint256","nodeType":"ElementaryTypeName","src":"66542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PlayersWon","nameLocation":"66442:10:11","nodeType":"StructDefinition","scope":10581,"src":"66435:177:11","visibility":"public"},{"canonicalName":"Mission.MissionData","documentation":{"id":8646,"nodeType":"StructuredDocumentation","src":"66620:154:11","text":" @dev Struct to hold all mission data.\n Contains information about players, mission status, enrollment details, and financials."},"id":8686,"members":[{"constant":false,"id":8649,"mutability":"mutable","name":"players","nameLocation":"66826:7:11","nodeType":"VariableDeclaration","scope":8686,"src":"66810:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8647,"name":"address","nodeType":"ElementaryTypeName","src":"66810:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8648,"nodeType":"ArrayTypeName","src":"66810:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8652,"mutability":"mutable","name":"missionType","nameLocation":"66945:11:11","nodeType":"VariableDeclaration","scope":8686,"src":"66929:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":8651,"nodeType":"UserDefinedTypeName","pathNode":{"id":8650,"name":"MissionType","nameLocations":["66929:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"66929:11:11"},"referencedDeclaration":5768,"src":"66929:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"},{"constant":false,"id":8654,"mutability":"mutable","name":"enrollmentStart","nameLocation":"67025:15:11","nodeType":"VariableDeclaration","scope":8686,"src":"67009:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8653,"name":"uint256","nodeType":"ElementaryTypeName","src":"67009:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8656,"mutability":"mutable","name":"enrollmentEnd","nameLocation":"67120:13:11","nodeType":"VariableDeclaration","scope":8686,"src":"67104:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8655,"name":"uint256","nodeType":"ElementaryTypeName","src":"67104:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8658,"mutability":"mutable","name":"enrollmentAmount","nameLocation":"67215:16:11","nodeType":"VariableDeclaration","scope":8686,"src":"67199:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8657,"name":"uint256","nodeType":"ElementaryTypeName","src":"67199:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8660,"mutability":"mutable","name":"enrollmentMinPlayers","nameLocation":"67306:20:11","nodeType":"VariableDeclaration","scope":8686,"src":"67290:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8659,"name":"uint8","nodeType":"ElementaryTypeName","src":"67290:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8662,"mutability":"mutable","name":"enrollmentMaxPlayers","nameLocation":"67422:20:11","nodeType":"VariableDeclaration","scope":8686,"src":"67406:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8661,"name":"uint8","nodeType":"ElementaryTypeName","src":"67406:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8664,"mutability":"mutable","name":"missionStart","nameLocation":"67531:12:11","nodeType":"VariableDeclaration","scope":8686,"src":"67515:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8663,"name":"uint256","nodeType":"ElementaryTypeName","src":"67515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8666,"mutability":"mutable","name":"missionEnd","nameLocation":"67618:10:11","nodeType":"VariableDeclaration","scope":8686,"src":"67602:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8665,"name":"uint256","nodeType":"ElementaryTypeName","src":"67602:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8668,"mutability":"mutable","name":"missionRounds","nameLocation":"67703:13:11","nodeType":"VariableDeclaration","scope":8686,"src":"67687:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8667,"name":"uint8","nodeType":"ElementaryTypeName","src":"67687:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8670,"mutability":"mutable","name":"roundCount","nameLocation":"67801:10:11","nodeType":"VariableDeclaration","scope":8686,"src":"67785:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8669,"name":"uint8","nodeType":"ElementaryTypeName","src":"67785:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8672,"mutability":"mutable","name":"croStart","nameLocation":"67883:8:11","nodeType":"VariableDeclaration","scope":8686,"src":"67867:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8671,"name":"uint256","nodeType":"ElementaryTypeName","src":"67867:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8674,"mutability":"mutable","name":"croCurrent","nameLocation":"67990:10:11","nodeType":"VariableDeclaration","scope":8686,"src":"67974:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8673,"name":"uint256","nodeType":"ElementaryTypeName","src":"67974:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8678,"mutability":"mutable","name":"playersWon","nameLocation":"68084:10:11","nodeType":"VariableDeclaration","scope":8686,"src":"68068:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage_ptr","typeString":"struct Mission.PlayersWon[]"},"typeName":{"baseType":{"id":8676,"nodeType":"UserDefinedTypeName","pathNode":{"id":8675,"name":"PlayersWon","nameLocations":["68068:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":8645,"src":"68068:10:11"},"referencedDeclaration":8645,"src":"68068:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_PlayersWon_$8645_storage_ptr","typeString":"struct Mission.PlayersWon"}},"id":8677,"nodeType":"ArrayTypeName","src":"68068:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage_ptr","typeString":"struct Mission.PlayersWon[]"}},"visibility":"internal"},{"constant":false,"id":8680,"mutability":"mutable","name":"pauseTimestamp","nameLocation":"68194:14:11","nodeType":"VariableDeclaration","scope":8686,"src":"68178:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8679,"name":"uint256","nodeType":"ElementaryTypeName","src":"68178:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8683,"mutability":"mutable","name":"refundedPlayers","nameLocation":"68287:15:11","nodeType":"VariableDeclaration","scope":8686,"src":"68271:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8681,"name":"address","nodeType":"ElementaryTypeName","src":"68271:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8682,"nodeType":"ArrayTypeName","src":"68271:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":8685,"mutability":"mutable","name":"name","nameLocation":"68384:4:11","nodeType":"VariableDeclaration","scope":8686,"src":"68368:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8684,"name":"string","nodeType":"ElementaryTypeName","src":"68368:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"MissionData","nameLocation":"66787:11:11","nodeType":"StructDefinition","scope":10581,"src":"66780:1665:11","visibility":"public"},{"constant":false,"documentation":{"id":8687,"nodeType":"StructuredDocumentation","src":"68578:152:11","text":" @dev Reference to the MissionFactory contract.\n This contract manages the overall mission lifecycle and player interactions."},"functionSelector":"fa4cf5a1","id":8690,"mutability":"mutable","name":"missionFactory","nameLocation":"68772:14:11","nodeType":"VariableDeclaration","scope":10581,"src":"68736:50:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"},"typeName":{"id":8689,"nodeType":"UserDefinedTypeName","pathNode":{"id":8688,"name":"MissionFactory","nameLocations":["68736:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":8483,"src":"68736:14:11"},"referencedDeclaration":8483,"src":"68736:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"visibility":"public"},{"constant":false,"functionSelector":"10eb0e0e","id":8694,"mutability":"mutable","name":"enrolled","nameLocation":"68878:8:11","nodeType":"VariableDeclaration","scope":10581,"src":"68842:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8693,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8691,"name":"address","nodeType":"ElementaryTypeName","src":"68850:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"68842:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8692,"name":"bool","nodeType":"ElementaryTypeName","src":"68861:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"a52b2b88","id":8698,"mutability":"mutable","name":"hasWon","nameLocation":"68988:6:11","nodeType":"VariableDeclaration","scope":10581,"src":"68952:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8697,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8695,"name":"address","nodeType":"ElementaryTypeName","src":"68960:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"68952:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8696,"name":"bool","nodeType":"ElementaryTypeName","src":"68971:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"c033a490","id":8702,"mutability":"mutable","name":"refunded","nameLocation":"69092:8:11","nodeType":"VariableDeclaration","scope":10581,"src":"69056:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8701,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8699,"name":"address","nodeType":"ElementaryTypeName","src":"69064:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"69056:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8700,"name":"bool","nodeType":"ElementaryTypeName","src":"69075:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"b2a4a5d2","id":8706,"mutability":"mutable","name":"failedRefundAmounts","nameLocation":"69193:19:11","nodeType":"VariableDeclaration","scope":10581,"src":"69157:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8705,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8703,"name":"address","nodeType":"ElementaryTypeName","src":"69165:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"69157:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8704,"name":"uint256","nodeType":"ElementaryTypeName","src":"69176:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8f1c3151","id":8708,"mutability":"mutable","name":"ownerShare","nameLocation":"69298:10:11","nodeType":"VariableDeclaration","scope":10581,"src":"69262:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8707,"name":"uint256","nodeType":"ElementaryTypeName","src":"69262:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"003e16a5","id":8710,"mutability":"mutable","name":"factoryShare","nameLocation":"69398:12:11","nodeType":"VariableDeclaration","scope":10581,"src":"69362:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8709,"name":"uint256","nodeType":"ElementaryTypeName","src":"69362:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"293c2213","id":8713,"mutability":"mutable","name":"missionStartConditionChecked","nameLocation":"69507:28:11","nodeType":"VariableDeclaration","scope":10581,"src":"69471:72:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8711,"name":"bool","nodeType":"ElementaryTypeName","src":"69471:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":8712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"69538:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"public"},{"constant":false,"id":8716,"mutability":"mutable","name":"_missionData","nameLocation":"69651:12:11","nodeType":"VariableDeclaration","scope":10581,"src":"69615:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData"},"typeName":{"id":8715,"nodeType":"UserDefinedTypeName","pathNode":{"id":8714,"name":"MissionData","nameLocations":["69615:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"69615:11:11"},"referencedDeclaration":8686,"src":"69615:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage_ptr","typeString":"struct Mission.MissionData"}},"visibility":"private"},{"constant":false,"id":8718,"mutability":"mutable","name":"_initialized","nameLocation":"69750:12:11","nodeType":"VariableDeclaration","scope":10581,"src":"69714:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8717,"name":"bool","nodeType":"ElementaryTypeName","src":"69714:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"id":8721,"mutability":"mutable","name":"_previousStatus","nameLocation":"69866:15:11","nodeType":"VariableDeclaration","scope":10581,"src":"69830:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":8720,"nodeType":"UserDefinedTypeName","pathNode":{"id":8719,"name":"Status","nameLocations":["69830:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"69830:6:11"},"referencedDeclaration":5778,"src":"69830:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"private"},{"body":{"id":8729,"nodeType":"Block","src":"70347:2:11","statements":[]},"documentation":{"id":8722,"nodeType":"StructuredDocumentation","src":"70071:236:11","text":" @dev Constructor for the Mission contract.\n Initializes the contract with the owner set to address(0) to prevent accidental ownership.\n The actual ownership will be set during the initialization phase."},"id":8730,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"70335:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"70339:6:11","memberName":"sender","nodeType":"MemberAccess","src":"70335:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8727,"kind":"baseConstructorSpecifier","modifierName":{"id":8724,"name":"Ownable","nameLocations":["70327:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"70327:7:11"},"nodeType":"ModifierInvocation","src":"70327:19:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8723,"nodeType":"ParameterList","parameters":[],"src":"70324:2:11"},"returnParameters":{"id":8728,"nodeType":"ParameterList","parameters":[],"src":"70347:0:11"},"scope":10581,"src":"70313:36:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8898,"nodeType":"Block","src":"72146:1798:11","statements":[{"expression":{"arguments":[{"id":8763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"72165:13:11","subExpression":{"id":8762,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"72166:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920696e697469616c697a6564","id":8764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"72180:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""},"value":"Already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""}],"id":8761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"72157:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72157:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8766,"nodeType":"ExpressionStatement","src":"72157:45:11"},{"expression":{"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8767,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"72290:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"72305:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"72290:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8770,"nodeType":"ExpressionStatement","src":"72290:19:11"},{"expression":{"arguments":[{"id":8772,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"72341:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8771,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"72322:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72322:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8774,"nodeType":"ExpressionStatement","src":"72322:26:11"},{"expression":{"id":8782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8775,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"72359:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":8779,"name":"_missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8735,"src":"72399:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"72391:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8777,"name":"address","nodeType":"ElementaryTypeName","src":"72391:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72391:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":8776,"name":"MissionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"72376:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MissionFactory_$8483_$","typeString":"type(contract MissionFactory)"}},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72376:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"src":"72359:57:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":8783,"nodeType":"ExpressionStatement","src":"72359:57:11"},{"expression":{"id":8788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8784,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72523:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"72536:11:11","memberName":"missionType","nodeType":"MemberAccess","referencedDeclaration":8652,"src":"72523:24:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8787,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"72562:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"src":"72523:51:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"id":8789,"nodeType":"ExpressionStatement","src":"72523:51:11"},{"expression":{"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8790,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72585:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"72598:15:11","memberName":"enrollmentStart","nodeType":"MemberAccess","referencedDeclaration":8654,"src":"72585:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8793,"name":"_enrollmentStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"72624:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"72585:55:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8795,"nodeType":"ExpressionStatement","src":"72585:55:11"},{"expression":{"id":8800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8796,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72651:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"72664:13:11","memberName":"enrollmentEnd","nodeType":"MemberAccess","referencedDeclaration":8656,"src":"72651:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8799,"name":"_enrollmentEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"72690:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"72651:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8801,"nodeType":"ExpressionStatement","src":"72651:53:11"},{"expression":{"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8802,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72715:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"72728:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"72715:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8805,"name":"_enrollmentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"72754:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"72715:56:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8807,"nodeType":"ExpressionStatement","src":"72715:56:11"},{"expression":{"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8808,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72782:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"72795:20:11","memberName":"enrollmentMinPlayers","nodeType":"MemberAccess","referencedDeclaration":8660,"src":"72782:33:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8811,"name":"_enrollmentMinPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"72821:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"72782:60:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8813,"nodeType":"ExpressionStatement","src":"72782:60:11"},{"expression":{"id":8818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8814,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72853:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"72866:20:11","memberName":"enrollmentMaxPlayers","nodeType":"MemberAccess","referencedDeclaration":8662,"src":"72853:33:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8817,"name":"_enrollmentMaxPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8748,"src":"72892:21:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"72853:60:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8819,"nodeType":"ExpressionStatement","src":"72853:60:11"},{"expression":{"id":8824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8820,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72924:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"72937:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"72924:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8823,"name":"_missionStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8750,"src":"72963:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"72924:52:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8825,"nodeType":"ExpressionStatement","src":"72924:52:11"},{"expression":{"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8826,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"72987:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73000:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"72987:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8829,"name":"_missionEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"73026:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"72987:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8831,"nodeType":"ExpressionStatement","src":"72987:50:11"},{"expression":{"id":8836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8832,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73048:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73061:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"73048:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8835,"name":"_missionRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"73087:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"73048:53:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8837,"nodeType":"ExpressionStatement","src":"73048:53:11"},{"expression":{"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8838,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73112:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73125:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"73112:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"73151:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"73112:40:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8843,"nodeType":"ExpressionStatement","src":"73112:40:11"},{"expression":{"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8844,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73163:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73176:8:11","memberName":"croStart","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"73163:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"73202:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"73206:5:11","memberName":"value","nodeType":"MemberAccess","src":"73202:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"73163:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8850,"nodeType":"ExpressionStatement","src":"73163:48:11"},{"expression":{"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8851,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73310:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73323:10:11","memberName":"croCurrent","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"73310:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"73349:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"73353:5:11","memberName":"value","nodeType":"MemberAccess","src":"73349:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"73310:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8857,"nodeType":"ExpressionStatement","src":"73310:48:11"},{"expression":{"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8858,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73457:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73470:14:11","memberName":"pauseTimestamp","nodeType":"MemberAccess","referencedDeclaration":8680,"src":"73457:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"73496:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"73457:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8863,"nodeType":"ExpressionStatement","src":"73457:40:11"},{"expression":{"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8864,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73568:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73581:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"73568:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":8870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"73621:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"73607:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":8867,"name":"address","nodeType":"ElementaryTypeName","src":"73611:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8868,"nodeType":"ArrayTypeName","src":"73611:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":8871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73607:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"73568:55:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8873,"nodeType":"ExpressionStatement","src":"73568:55:11"},{"expression":{"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8874,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73677:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73690:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"73677:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":8881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"73733:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"73716:16:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PlayersWon_$8645_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Mission.PlayersWon memory[] memory)"},"typeName":{"baseType":{"id":8878,"nodeType":"UserDefinedTypeName","pathNode":{"id":8877,"name":"PlayersWon","nameLocations":["73720:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":8645,"src":"73720:10:11"},"referencedDeclaration":8645,"src":"73720:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_PlayersWon_$8645_storage_ptr","typeString":"struct Mission.PlayersWon"}},"id":8879,"nodeType":"ArrayTypeName","src":"73720:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage_ptr","typeString":"struct Mission.PlayersWon[]"}}},"id":8882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73716:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_memory_ptr_$dyn_memory_ptr","typeString":"struct Mission.PlayersWon memory[] memory"}},"src":"73677:58:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":8884,"nodeType":"ExpressionStatement","src":"73677:58:11"},{"expression":{"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8885,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"73789:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"73802:4:11","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":8685,"src":"73789:17:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8888,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"73809:5:11","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"73789:25:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8890,"nodeType":"ExpressionStatement","src":"73789:25:11"},{"eventCall":{"arguments":[{"id":8892,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"73849:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8893,"name":"_missionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"73857:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},{"expression":{"id":8894,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"73871:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"73877:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"73871:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8891,"name":"MissionInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"73830:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_MissionType_$5768_$_t_uint256_$returns$__$","typeString":"function (address,enum MissionType,uint256)"}},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73830:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8897,"nodeType":"EmitStatement","src":"73825:62:11"}]},"documentation":{"id":8731,"nodeType":"StructuredDocumentation","src":"70496:1059:11","text":" @dev Initializes the Mission contract.\n This function sets the initial values for the mission and registers it with the MissionFactory.\n It can only be called once during contract deployment.\n @param _owner                The address of the owner of the contract.\n @param _missionFactory            The address of the MissionFactory contract.\n @param _missionType          The type of the mission.\n @param _enrollmentStart      The start time for enrollment.\n @param _enrollmentEnd        The end time for enrollment.\n @param _enrollmentAmount     The amount required for enrollment.\n @param _enrollmentMinPlayers The minimum number of players required to start the mission.\n @param _enrollmentMaxPlayers The maximum number of players allowed in the mission.\n @param _missionStart         The start time for the mission.\n @param _missionEnd           The end time for the mission.\n @param _missionRounds        The number of rounds in the mission."},"functionSelector":"5e83e15c","id":8899,"implemented":true,"kind":"function","modifiers":[{"id":8759,"kind":"modifierInvocation","modifierName":{"id":8758,"name":"nonReentrant","nameLocations":["72133:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"72133:12:11"},"nodeType":"ModifierInvocation","src":"72133:12:11"}],"name":"initialize","nameLocation":"71571:10:11","nodeType":"FunctionDefinition","parameters":{"id":8757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8733,"mutability":"mutable","name":"_owner","nameLocation":"71608:6:11","nodeType":"VariableDeclaration","scope":8899,"src":"71592:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8732,"name":"address","nodeType":"ElementaryTypeName","src":"71592:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8735,"mutability":"mutable","name":"_missionFactory","nameLocation":"71641:15:11","nodeType":"VariableDeclaration","scope":8899,"src":"71625:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8734,"name":"address","nodeType":"ElementaryTypeName","src":"71625:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8738,"mutability":"mutable","name":"_missionType","nameLocation":"71683:12:11","nodeType":"VariableDeclaration","scope":8899,"src":"71667:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"},"typeName":{"id":8737,"nodeType":"UserDefinedTypeName","pathNode":{"id":8736,"name":"MissionType","nameLocations":["71667:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":5768,"src":"71667:11:11"},"referencedDeclaration":5768,"src":"71667:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}},"visibility":"internal"},{"constant":false,"id":8740,"mutability":"mutable","name":"_enrollmentStart","nameLocation":"71722:16:11","nodeType":"VariableDeclaration","scope":8899,"src":"71706:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8739,"name":"uint256","nodeType":"ElementaryTypeName","src":"71706:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8742,"mutability":"mutable","name":"_enrollmentEnd","nameLocation":"71765:14:11","nodeType":"VariableDeclaration","scope":8899,"src":"71749:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8741,"name":"uint256","nodeType":"ElementaryTypeName","src":"71749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8744,"mutability":"mutable","name":"_enrollmentAmount","nameLocation":"71806:17:11","nodeType":"VariableDeclaration","scope":8899,"src":"71790:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8743,"name":"uint256","nodeType":"ElementaryTypeName","src":"71790:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8746,"mutability":"mutable","name":"_enrollmentMinPlayers","nameLocation":"71850:21:11","nodeType":"VariableDeclaration","scope":8899,"src":"71834:37:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8745,"name":"uint8","nodeType":"ElementaryTypeName","src":"71834:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8748,"mutability":"mutable","name":"_enrollmentMaxPlayers","nameLocation":"71898:21:11","nodeType":"VariableDeclaration","scope":8899,"src":"71882:37:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8747,"name":"uint8","nodeType":"ElementaryTypeName","src":"71882:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8750,"mutability":"mutable","name":"_missionStart","nameLocation":"71946:13:11","nodeType":"VariableDeclaration","scope":8899,"src":"71930:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8749,"name":"uint256","nodeType":"ElementaryTypeName","src":"71930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8752,"mutability":"mutable","name":"_missionEnd","nameLocation":"71986:11:11","nodeType":"VariableDeclaration","scope":8899,"src":"71970:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8751,"name":"uint256","nodeType":"ElementaryTypeName","src":"71970:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8754,"mutability":"mutable","name":"_missionRounds","nameLocation":"72024:14:11","nodeType":"VariableDeclaration","scope":8899,"src":"72008:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8753,"name":"uint8","nodeType":"ElementaryTypeName","src":"72008:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8756,"mutability":"mutable","name":"_name","nameLocation":"72065:5:11","nodeType":"VariableDeclaration","scope":8899,"src":"72049:21:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8755,"name":"string","nodeType":"ElementaryTypeName","src":"72049:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71581:496:11"},"returnParameters":{"id":8760,"nodeType":"ParameterList","parameters":[],"src":"72146:0:11"},"scope":10581,"src":"71562:2382:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9066,"nodeType":"Block","src":"74582:3263:11","statements":[{"assignments":[8906],"declarations":[{"constant":false,"id":8906,"mutability":"mutable","name":"nowTs","nameLocation":"74601:5:11","nodeType":"VariableDeclaration","scope":9066,"src":"74593:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8905,"name":"uint256","nodeType":"ElementaryTypeName","src":"74593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8909,"initialValue":{"expression":{"id":8907,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"74609:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74615:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"74609:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"74593:31:11"},{"assignments":[8911],"declarations":[{"constant":false,"id":8911,"mutability":"mutable","name":"player","nameLocation":"74723:6:11","nodeType":"VariableDeclaration","scope":9066,"src":"74715:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8910,"name":"address","nodeType":"ElementaryTypeName","src":"74715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8914,"initialValue":{"expression":{"id":8912,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"74732:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74736:6:11","memberName":"sender","nodeType":"MemberAccess","src":"74732:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"74715:27:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8915,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"74859:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74866:4:11","memberName":"code","nodeType":"MemberAccess","src":"74859:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74871:6:11","memberName":"length","nodeType":"MemberAccess","src":"74859:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"74880:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"74859:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8924,"nodeType":"IfStatement","src":"74855:187:11","trueBody":{"id":8923,"nodeType":"Block","src":"74883:159:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8920,"name":"ContractsNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8619,"src":"74905:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74905:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8922,"nodeType":"RevertStatement","src":"74898:28:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8925,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"75056:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8926,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75064:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75077:15:11","memberName":"enrollmentStart","nodeType":"MemberAccess","referencedDeclaration":8654,"src":"75064:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"75056:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8936,"nodeType":"IfStatement","src":"75052:182:11","trueBody":{"id":8935,"nodeType":"Block","src":"75094:140:11","statements":[{"errorCall":{"arguments":[{"id":8930,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"75137:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8931,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75144:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75157:15:11","memberName":"enrollmentStart","nodeType":"MemberAccess","referencedDeclaration":8654,"src":"75144:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8929,"name":"EnrollmentNotStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"75116:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75116:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8934,"nodeType":"RevertStatement","src":"75109:64:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8937,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"75248:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8938,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75256:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75269:13:11","memberName":"enrollmentEnd","nodeType":"MemberAccess","referencedDeclaration":8656,"src":"75256:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"75248:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8948,"nodeType":"IfStatement","src":"75244:178:11","trueBody":{"id":8947,"nodeType":"Block","src":"75284:138:11","statements":[{"errorCall":{"arguments":[{"id":8942,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"75323:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8943,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75330:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75343:13:11","memberName":"enrollmentEnd","nodeType":"MemberAccess","referencedDeclaration":8656,"src":"75330:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8941,"name":"EnrollmentClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"75306:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75306:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8946,"nodeType":"RevertStatement","src":"75299:58:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8949,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75438:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75451:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"75438:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"75459:6:11","memberName":"length","nodeType":"MemberAccess","src":"75438:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8952,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75469:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75482:20:11","memberName":"enrollmentMaxPlayers","nodeType":"MemberAccess","referencedDeclaration":8662,"src":"75469:33:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"75438:64:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8961,"nodeType":"IfStatement","src":"75434:226:11","trueBody":{"id":8960,"nodeType":"Block","src":"75504:156:11","statements":[{"errorCall":{"arguments":[{"expression":{"id":8956,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75537:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75550:20:11","memberName":"enrollmentMaxPlayers","nodeType":"MemberAccess","referencedDeclaration":8662,"src":"75537:33:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":8955,"name":"MaxPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"75526:10:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$returns$_t_error_$","typeString":"function (uint8) pure returns (error)"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75526:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8959,"nodeType":"RevertStatement","src":"75519:52:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"75674:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"75678:5:11","memberName":"value","nodeType":"MemberAccess","src":"75674:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":8964,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75687:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75700:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"75687:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"75674:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8975,"nodeType":"IfStatement","src":"75670:217:11","trueBody":{"id":8974,"nodeType":"Block","src":"75718:169:11","statements":[{"errorCall":{"arguments":[{"expression":{"id":8968,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"75754:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":8969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75767:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"75754:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8970,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"75785:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"75789:5:11","memberName":"value","nodeType":"MemberAccess","src":"75785:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8967,"name":"WrongEntryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"75740:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":8972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75740:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8973,"nodeType":"RevertStatement","src":"75733:62:11"}]}},{"condition":{"baseExpression":{"id":8976,"name":"enrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"75901:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8978,"indexExpression":{"id":8977,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"75910:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"75901:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8982,"nodeType":"IfStatement","src":"75897:44:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8979,"name":"AlreadyJoined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"75926:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75926:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8981,"nodeType":"RevertStatement","src":"75919:22:11"}},{"assignments":[8984,8987],"declarations":[{"constant":false,"id":8984,"mutability":"mutable","name":"ok","nameLocation":"75960:2:11","nodeType":"VariableDeclaration","scope":9066,"src":"75955:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8983,"name":"bool","nodeType":"ElementaryTypeName","src":"75955:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8987,"mutability":"mutable","name":"breach","nameLocation":"75970:6:11","nodeType":"VariableDeclaration","scope":9066,"src":"75964:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"},"typeName":{"id":8986,"nodeType":"UserDefinedTypeName","pathNode":{"id":8985,"name":"Limit","nameLocations":["75964:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":5783,"src":"75964:5:11"},"referencedDeclaration":5783,"src":"75964:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}},"visibility":"internal"}],"id":8992,"initialValue":{"arguments":[{"id":8990,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"76005:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8988,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"75980:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":8989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"75995:9:11","memberName":"canEnroll","nodeType":"MemberAccess","referencedDeclaration":6371,"src":"75980:24:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$_t_enum$_Limit_$5783_$","typeString":"function (address) view external returns (bool,enum Limit)"}},"id":8991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75980:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_Limit_$5783_$","typeString":"tuple(bool,enum Limit)"}},"nodeType":"VariableDeclarationStatement","src":"75954:58:11"},{"condition":{"id":8994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"76120:3:11","subExpression":{"id":8993,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8984,"src":"76121:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9017,"nodeType":"IfStatement","src":"76116:743:11","trueBody":{"id":9016,"nodeType":"Block","src":"76125:734:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"},"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8995,"name":"breach","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"76296:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8996,"name":"Limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"76306:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Limit_$5783_$","typeString":"type(enum Limit)"}},"id":8997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"76312:6:11","memberName":"Weekly","nodeType":"MemberAccess","referencedDeclaration":5781,"src":"76306:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_Limit_$5783","typeString":"enum Limit"}},"src":"76296:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9014,"nodeType":"Block","src":"76599:249:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":9010,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"76719:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9008,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"76681:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"76696:22:11","memberName":"secondsTillMonthlySlot","nodeType":"MemberAccess","referencedDeclaration":6177,"src":"76681:37:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76681:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9007,"name":"MonthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"76646:12:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76646:186:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9013,"nodeType":"RevertStatement","src":"76639:193:11"}]},"id":9015,"nodeType":"IfStatement","src":"76292:556:11","trueBody":{"id":9006,"nodeType":"Block","src":"76320:273:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":9002,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"76468:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9000,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"76431:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"76446:21:11","memberName":"secondsTillWeeklySlot","nodeType":"MemberAccess","referencedDeclaration":6102,"src":"76431:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76431:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8999,"name":"WeeklyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"76397:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76397:180:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9005,"nodeType":"RevertStatement","src":"76390:187:11"}]}}]}},{"expression":{"arguments":[{"id":9023,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"76897:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":9018,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"76871:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"76884:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"76871:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"76892:4:11","memberName":"push","nodeType":"MemberAccess","src":"76871:25:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76871:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9025,"nodeType":"ExpressionStatement","src":"76871:33:11"},{"expression":{"id":9030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9026,"name":"enrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"77003:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9028,"indexExpression":{"id":9027,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"77012:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"77003:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"77022:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"77003:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9031,"nodeType":"ExpressionStatement","src":"77003:23:11"},{"expression":{"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9032,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"77127:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"77140:8:11","memberName":"croStart","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"77127:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":9035,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"77152:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"77156:5:11","memberName":"value","nodeType":"MemberAccess","src":"77152:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"77127:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9038,"nodeType":"ExpressionStatement","src":"77127:34:11"},{"expression":{"id":9044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9039,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"77277:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"77290:10:11","memberName":"croCurrent","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"77277:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":9042,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"77304:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"77308:5:11","memberName":"value","nodeType":"MemberAccess","src":"77304:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"77277:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9045,"nodeType":"ExpressionStatement","src":"77277:36:11"},{"expression":{"arguments":[{"expression":{"id":9047,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"77440:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"77447:9:11","memberName":"Enrolling","nodeType":"MemberAccess","referencedDeclaration":5771,"src":"77440:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":9046,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"77429:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"77429:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9050,"nodeType":"ExpressionStatement","src":"77429:28:11"},{"expression":{"arguments":[{"id":9054,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"77593:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9051,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"77561:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"77576:16:11","memberName":"recordEnrollment","nodeType":"MemberAccess","referencedDeclaration":6486,"src":"77561:31:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"77561:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9056,"nodeType":"ExpressionStatement","src":"77561:39:11"},{"eventCall":{"arguments":[{"id":9058,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"77739:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9059,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"77747:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"77751:5:11","memberName":"value","nodeType":"MemberAccess","src":"77747:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":9061,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"77758:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"77771:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"77758:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"77779:6:11","memberName":"length","nodeType":"MemberAccess","src":"77758:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9057,"name":"PlayerEnrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"77724:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"77724:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9065,"nodeType":"EmitStatement","src":"77719:67:11"}]},"documentation":{"id":8900,"nodeType":"StructuredDocumentation","src":"74063:443:11","text":" @notice Allows a player to enroll by paying the enrollment fee.\n @dev Player can enroll only during the enrollment window and only once.\n @dev Reverts if:\n      - Player is a contract\n      - Enrollment period not open\n      - Max players reached\n      - Insufficient CRO sent\n      - Player has already enrolled\n      - Player has reached their weekly/monthly limit"},"functionSelector":"987c543a","id":9067,"implemented":true,"kind":"function","modifiers":[{"id":8903,"kind":"modifierInvocation","modifierName":{"id":8902,"name":"nonReentrant","nameLocations":["74569:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"74569:12:11"},"nodeType":"ModifierInvocation","src":"74569:12:11"}],"name":"enrollPlayer","nameLocation":"74521:12:11","nodeType":"FunctionDefinition","parameters":{"id":8901,"nodeType":"ParameterList","parameters":[],"src":"74533:2:11"},"returnParameters":{"id":8904,"nodeType":"ParameterList","parameters":[],"src":"74582:0:11"},"scope":10581,"src":"74512:3333:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9137,"nodeType":"Block","src":"78429:1433:11","statements":[{"assignments":[9076],"declarations":[{"constant":false,"id":9076,"mutability":"mutable","name":"nowTs","nameLocation":"78449:5:11","nodeType":"VariableDeclaration","scope":9137,"src":"78441:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9075,"name":"uint256","nodeType":"ElementaryTypeName","src":"78441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9079,"initialValue":{"expression":{"id":9077,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"78457:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"78463:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"78457:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"78441:31:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9081,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9076,"src":"78571:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9082,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"78579:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"78592:13:11","memberName":"enrollmentEnd","nodeType":"MemberAccess","referencedDeclaration":8656,"src":"78579:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"78571:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9085,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9076,"src":"78609:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9086,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"78617:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"78630:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"78617:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"78609:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"78571:71:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e206e6f7420696e2061726d696e672077696e646f772e2043616c6c20726566756e64506c617965727320696e7374656164","id":9090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"78663:58:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_55b9b824c0eb600f531280333f9b17fa75c575f8ca2aebf3de2059c15a04c2c1","typeString":"literal_string \"Mission not in arming window. Call refundPlayers instead\""},"value":"Mission not in arming window. Call refundPlayers instead"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55b9b824c0eb600f531280333f9b17fa75c575f8ca2aebf3de2059c15a04c2c1","typeString":"literal_string \"Mission not in arming window. Call refundPlayers instead\""}],"id":9080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"78563:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"78563:159:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9092,"nodeType":"ExpressionStatement","src":"78563:159:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9094,"name":"missionStartConditionChecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"78829:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":9095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"78861:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"78829:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636865636b656420737461727420636f6e646974696f6e","id":9097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"78868:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e89570944a59c03ccd4a66446cea937966a832e215051f588e3289865b1a028","typeString":"literal_string \"Already checked start condition\""},"value":"Already checked start condition"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e89570944a59c03ccd4a66446cea937966a832e215051f588e3289865b1a028","typeString":"literal_string \"Already checked start condition\""}],"id":9093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"78821:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"78821:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9099,"nodeType":"ExpressionStatement","src":"78821:81:11"},{"expression":{"id":9102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9100,"name":"missionStartConditionChecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"78969:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"79000:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"78969:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9103,"nodeType":"ExpressionStatement","src":"78969:35:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9104,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"79144:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"79157:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"79144:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"79165:6:11","memberName":"length","nodeType":"MemberAccess","src":"79144:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79175:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"79144:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9120,"nodeType":"IfStatement","src":"79140:442:11","trueBody":{"id":9119,"nodeType":"Block","src":"79178:404:11","statements":[{"expression":{"arguments":[{"expression":{"id":9110,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"79315:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"79322:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"79315:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":9109,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"79304:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":9112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79304:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9113,"nodeType":"ExpressionStatement","src":"79304:25:11"},{"expression":{"arguments":[{"hexValue":"74727565","id":9115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"79449:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9114,"name":"_withdrawFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"79434:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":9116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79434:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9117,"nodeType":"ExpressionStatement","src":"79434:20:11"},{"functionReturnParameters":9074,"id":9118,"nodeType":"Return","src":"79564:7:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9121,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"79596:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"79609:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"79596:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"79617:6:11","memberName":"length","nodeType":"MemberAccess","src":"79596:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9124,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"79626:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"79639:20:11","memberName":"enrollmentMinPlayers","nodeType":"MemberAccess","referencedDeclaration":8660,"src":"79626:33:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"79596:63:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9136,"nodeType":"IfStatement","src":"79592:263:11","trueBody":{"id":9135,"nodeType":"Block","src":"79661:194:11","statements":[{"expression":{"arguments":[{"expression":{"id":9128,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"79687:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"79694:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"79687:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":9127,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"79676:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":9130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79676:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9131,"nodeType":"ExpressionStatement","src":"79676:25:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9132,"name":"_refundPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10580,"src":"79827:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79827:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9134,"nodeType":"ExpressionStatement","src":"79827:16:11"}]}}]},"documentation":{"id":9068,"nodeType":"StructuredDocumentation","src":"77853:486:11","text":" @dev Checks if the mission's conditions are met to start.\n Only callable by the owner or an authorized address\n This function must be called after the enrollment period ends and before the mission starts to\n refund players if the conditions are not met. If calling the function is obmitted, \n calling refundPlayers() is the last chance to refund players.\n @dev If conditions are not met, sets status to Failed and refunds players."},"functionSelector":"ad1ca6bf","id":9138,"implemented":true,"kind":"function","modifiers":[{"id":9071,"kind":"modifierInvocation","modifierName":{"id":9070,"name":"nonReentrant","nameLocations":["78394:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"78394:12:11"},"nodeType":"ModifierInvocation","src":"78394:12:11"},{"id":9073,"kind":"modifierInvocation","modifierName":{"id":9072,"name":"onlyOwnerOrAuthorized","nameLocations":["78407:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":8639,"src":"78407:21:11"},"nodeType":"ModifierInvocation","src":"78407:21:11"}],"name":"checkMissionStartCondition","nameLocation":"78354:26:11","nodeType":"FunctionDefinition","parameters":{"id":9069,"nodeType":"ParameterList","parameters":[],"src":"78380:2:11"},"returnParameters":{"id":9074,"nodeType":"ParameterList","parameters":[],"src":"78429:0:11"},"scope":10581,"src":"78345:1517:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9375,"nodeType":"Block","src":"80644:4334:11","statements":[{"assignments":[9146],"declarations":[{"constant":false,"id":9146,"mutability":"mutable","name":"s","nameLocation":"80662:1:11","nodeType":"VariableDeclaration","scope":9375,"src":"80655:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":9145,"nodeType":"UserDefinedTypeName","pathNode":{"id":9144,"name":"Status","nameLocations":["80655:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"80655:6:11"},"referencedDeclaration":5778,"src":"80655:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":9149,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9147,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"80666:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80666:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"80655:31:11"},{"assignments":[9151],"declarations":[{"constant":false,"id":9151,"mutability":"mutable","name":"nowTs","nameLocation":"80835:5:11","nodeType":"VariableDeclaration","scope":9375,"src":"80827:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9150,"name":"uint256","nodeType":"ElementaryTypeName","src":"80827:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9154,"initialValue":{"expression":{"id":9152,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"80843:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"80849:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"80843:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"80827:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9155,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"80983:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9156,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"80988:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"80995:6:11","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"80988:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"80983:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9187,"nodeType":"IfStatement","src":"80979:655:11","trueBody":{"id":9186,"nodeType":"Block","src":"81003:631:11","statements":[{"assignments":[9160],"declarations":[{"constant":false,"id":9160,"mutability":"mutable","name":"cd","nameLocation":"81026:2:11","nodeType":"VariableDeclaration","scope":9186,"src":"81018:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9159,"name":"uint256","nodeType":"ElementaryTypeName","src":"81018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9172,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9161,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"81032:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"81045:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"81032:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"81058:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"81032:27:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9165,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"81063:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"81076:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"81063:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"81032:57:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"81031:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"333030","id":9170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"81115:3:11","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"id":9171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"81031:87:11","trueExpression":{"hexValue":"3630","id":9169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"81110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"81018:100:11"},{"assignments":[9174],"declarations":[{"constant":false,"id":9174,"mutability":"mutable","name":"secsLeft","nameLocation":"81304:8:11","nodeType":"VariableDeclaration","scope":9186,"src":"81296:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9173,"name":"uint256","nodeType":"ElementaryTypeName","src":"81296:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9181,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9175,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"81315:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"81328:14:11","memberName":"pauseTimestamp","nodeType":"MemberAccess","referencedDeclaration":8680,"src":"81315:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9177,"name":"cd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9160,"src":"81345:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"81315:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9179,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"81350:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"81315:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"81296:59:11"},{"errorCall":{"arguments":[{"id":9183,"name":"secsLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9174,"src":"81538:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9182,"name":"Cooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"81529:8:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"81529:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9185,"nodeType":"RevertStatement","src":"81522:25:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9188,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"81648:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9189,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"81652:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"81659:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"81652:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"81648:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9198,"nodeType":"IfStatement","src":"81644:110:11","trueBody":{"errorCall":{"arguments":[{"id":9193,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"81721:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9194,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"81728:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"81741:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"81728:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9192,"name":"NotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"81711:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"81711:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9197,"nodeType":"RevertStatement","src":"81704:50:11"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9199,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"81811:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9200,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"81815:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"81822:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"81815:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"81811:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9206,"nodeType":"IfStatement","src":"81807:81:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9203,"name":"MissionEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"81874:12:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"81874:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9205,"nodeType":"RevertStatement","src":"81867:21:11"}},{"condition":{"baseExpression":{"id":9207,"name":"hasWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"81968:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9210,"indexExpression":{"expression":{"id":9208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"81975:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"81979:6:11","memberName":"sender","nodeType":"MemberAccess","src":"81975:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"81968:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9214,"nodeType":"IfStatement","src":"81964:79:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9211,"name":"AlreadyWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"82031:10:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82031:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9213,"nodeType":"RevertStatement","src":"82024:19:11"}},{"condition":{"id":9219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"82138:21:11","subExpression":{"baseExpression":{"id":9215,"name":"enrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"82139:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9218,"indexExpression":{"expression":{"id":9216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"82148:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"82152:6:11","memberName":"sender","nodeType":"MemberAccess","src":"82148:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"82139:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9223,"nodeType":"IfStatement","src":"82134:78:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9220,"name":"NotJoined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"82201:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82201:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9222,"nodeType":"RevertStatement","src":"82194:18:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9224,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82307:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82320:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"82307:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9226,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82334:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82347:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"82334:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"82307:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9232,"nodeType":"IfStatement","src":"82303:82:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9229,"name":"AllRoundsDone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"82370:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82370:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9231,"nodeType":"RevertStatement","src":"82363:22:11"}},{"assignments":[9234],"declarations":[{"constant":false,"id":9234,"mutability":"mutable","name":"progress","nameLocation":"82481:8:11","nodeType":"VariableDeclaration","scope":9375,"src":"82473:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9233,"name":"uint256","nodeType":"ElementaryTypeName","src":"82473:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9235,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9151,"src":"82493:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9236,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82501:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82514:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"82501:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"82493:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"82492:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":9240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"82530:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"82492:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9242,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82665:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82678:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"82665:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9244,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82691:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82704:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"82691:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"82665:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"82664:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"82492:225:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"82473:244:11"},{"assignments":[9251],"declarations":[{"constant":false,"id":9251,"mutability":"mutable","name":"lastAmt","nameLocation":"82736:7:11","nodeType":"VariableDeclaration","scope":9375,"src":"82728:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9250,"name":"uint256","nodeType":"ElementaryTypeName","src":"82728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9268,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9252,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82746:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82759:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"82746:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"82770:6:11","memberName":"length","nodeType":"MemberAccess","src":"82746:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"82779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"82746:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"83003:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"82746:258:11","trueExpression":{"expression":{"baseExpression":{"expression":{"id":9257,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82920:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82933:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"82920:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":9264,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9259,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"82944:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82957:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"82944:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"82968:6:11","memberName":"length","nodeType":"MemberAccess","src":"82944:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"82975:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"82944:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"82920:57:11","typeDescriptions":{"typeIdentifier":"t_struct$_PlayersWon_$8645_storage","typeString":"struct Mission.PlayersWon storage ref"}},"id":9265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"82978:9:11","memberName":"amountWon","nodeType":"MemberAccess","referencedDeclaration":8644,"src":"82920:67:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"82728:276:11"},{"assignments":[9270],"declarations":[{"constant":false,"id":9270,"mutability":"mutable","name":"lastProg","nameLocation":"83127:8:11","nodeType":"VariableDeclaration","scope":9375,"src":"83119:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9269,"name":"uint256","nodeType":"ElementaryTypeName","src":"83119:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9278,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9271,"name":"lastAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"83139:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":9272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"83149:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"83139:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"83138:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":9275,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"83156:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"83169:8:11","memberName":"croStart","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"83156:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"83138:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"83119:58:11"},{"assignments":[9280],"declarations":[{"constant":false,"id":9280,"mutability":"mutable","name":"payout","nameLocation":"83322:6:11","nodeType":"VariableDeclaration","scope":9375,"src":"83314:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9279,"name":"uint256","nodeType":"ElementaryTypeName","src":"83314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9290,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9281,"name":"progress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9234,"src":"83334:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9282,"name":"lastProg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"83345:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"83334:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"83333:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":9285,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"83357:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"83370:8:11","memberName":"croStart","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"83357:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"83333:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":9288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"83381:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"83333:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"83314:70:11"},{"expression":{"id":9295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9291,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"83506:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"83519:10:11","memberName":"croCurrent","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"83506:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":9294,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"83533:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"83506:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9296,"nodeType":"ExpressionStatement","src":"83506:33:11"},{"expression":{"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"83676:25:11","subExpression":{"expression":{"id":9297,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"83676:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"83689:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"83676:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":9301,"nodeType":"ExpressionStatement","src":"83676:25:11"},{"expression":{"id":9307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9302,"name":"hasWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"83826:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9305,"indexExpression":{"expression":{"id":9303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"83833:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"83837:6:11","memberName":"sender","nodeType":"MemberAccess","src":"83833:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"83826:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"83847:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"83826:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9308,"nodeType":"ExpressionStatement","src":"83826:25:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":9315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"84028:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"84032:6:11","memberName":"sender","nodeType":"MemberAccess","src":"84028:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9317,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"84040:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9314,"name":"PlayersWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8645,"src":"84017:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PlayersWon_$8645_storage_ptr_$","typeString":"type(struct Mission.PlayersWon storage pointer)"}},"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84017:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PlayersWon_$8645_memory_ptr","typeString":"struct Mission.PlayersWon memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PlayersWon_$8645_memory_ptr","typeString":"struct Mission.PlayersWon memory"}],"expression":{"expression":{"id":9309,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"83988:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"84001:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"83988:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":9313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"84012:4:11","memberName":"push","nodeType":"MemberAccess","src":"83988:28:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage_ptr_$_t_struct$_PlayersWon_$8645_storage_$returns$__$attached_to$_t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage_ptr_$","typeString":"function (struct Mission.PlayersWon storage ref[] storage pointer,struct Mission.PlayersWon storage ref)"}},"id":9319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"83988:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9320,"nodeType":"ExpressionStatement","src":"83988:60:11"},{"assignments":[9322,9324],"declarations":[{"constant":false,"id":9322,"mutability":"mutable","name":"ok","nameLocation":"84176:2:11","nodeType":"VariableDeclaration","scope":9375,"src":"84171:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9321,"name":"bool","nodeType":"ElementaryTypeName","src":"84171:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9324,"mutability":"mutable","name":"data","nameLocation":"84193:4:11","nodeType":"VariableDeclaration","scope":9375,"src":"84180:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9323,"name":"bytes","nodeType":"ElementaryTypeName","src":"84180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9332,"initialValue":{"arguments":[{"hexValue":"","id":9330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"84234:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":9325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"84201:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"84205:6:11","memberName":"sender","nodeType":"MemberAccess","src":"84201:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"84212:4:11","memberName":"call","nodeType":"MemberAccess","src":"84201:15:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9328,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"84225:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"84201:32:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84201:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"84170:67:11"},{"condition":{"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"84343:3:11","subExpression":{"id":9333,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"84344:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9342,"nodeType":"IfStatement","src":"84339:105:11","trueBody":{"errorCall":{"arguments":[{"expression":{"id":9336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"84419:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"84423:6:11","memberName":"sender","nodeType":"MemberAccess","src":"84419:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9338,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"84431:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9339,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"84439:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9335,"name":"PayoutFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"84406:12:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_error_$","typeString":"function (address,uint256,bytes memory) pure returns (error)"}},"id":9340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84406:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9341,"nodeType":"RevertStatement","src":"84399:45:11"}},{"eventCall":{"arguments":[{"expression":{"id":9344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"84526:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"84530:6:11","memberName":"sender","nodeType":"MemberAccess","src":"84526:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9346,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"84538:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"84551:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"84538:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":9348,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"84563:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9349,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"84571:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"84584:10:11","memberName":"croCurrent","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"84571:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9343,"name":"RoundCalled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"84514:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint8,uint256,uint256)"}},"id":9351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84514:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9352,"nodeType":"EmitStatement","src":"84509:86:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9353,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"84666:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"84679:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"84666:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9355,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"84693:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"84706:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"84693:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"84666:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9373,"nodeType":"Block","src":"84919:52:11","statements":[{"expression":{"arguments":[{"expression":{"id":9369,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"84945:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"84952:6:11","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"84945:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":9368,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"84934:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":9371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84934:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9372,"nodeType":"ExpressionStatement","src":"84934:25:11"}]},"id":9374,"nodeType":"IfStatement","src":"84662:309:11","trueBody":{"id":9367,"nodeType":"Block","src":"84721:192:11","statements":[{"expression":{"arguments":[{"expression":{"id":9359,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"84850:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"84857:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"84850:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":9358,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"84839:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":9361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84839:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9362,"nodeType":"ExpressionStatement","src":"84839:26:11"},{"expression":{"arguments":[{"hexValue":"66616c7365","id":9364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"84895:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9363,"name":"_withdrawFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"84880:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":9365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84880:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9366,"nodeType":"ExpressionStatement","src":"84880:21:11"}]}}]},"documentation":{"id":9139,"nodeType":"StructuredDocumentation","src":"79870:706:11","text":" @notice Called by a player to claim a round reward.\n @dev A player can only win once. The mission must be Active and not expired.\n @dev After each round, the mission is Paused for:\n      - 5 minutes for normal rounds\n      - 1 minute before the final round\n @dev Emits {RoundClaimed}.\n @dev Reverts if:\n      - Mission is in Paused status\n      - Mission is not Active\n      - Player has already won a round\n      - Player is not enrolled in the mission\n      - All rounds have been claimed\n      - Payout transfer fails\n @dev If it is the last round, sets status to Success and withdraws funds"},"functionSelector":"7475a4cb","id":9376,"implemented":true,"kind":"function","modifiers":[{"id":9142,"kind":"modifierInvocation","modifierName":{"id":9141,"name":"nonReentrant","nameLocations":["80631:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"80631:12:11"},"nodeType":"ModifierInvocation","src":"80631:12:11"}],"name":"callRound","nameLocation":"80591:9:11","nodeType":"FunctionDefinition","parameters":{"id":9140,"nodeType":"ParameterList","parameters":[],"src":"80600:2:11"},"returnParameters":{"id":9143,"nodeType":"ParameterList","parameters":[],"src":"80644:0:11"},"scope":10581,"src":"80582:4396:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9441,"nodeType":"Block","src":"85210:1001:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"85223:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85227:5:11","memberName":"value","nodeType":"MemberAccess","src":"85223:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"85235:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"85223:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2066756e64732073656e74","id":9385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"85238:15:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfcae0f281cac8e1a9368c4d8451a5430ad569dc753a576f61ef4cb5c2914a0b","typeString":"literal_string \"No funds sent\""},"value":"No funds sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfcae0f281cac8e1a9368c4d8451a5430ad569dc753a576f61ef4cb5c2914a0b","typeString":"literal_string \"No funds sent\""}],"id":9380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"85215:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85215:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9387,"nodeType":"ExpressionStatement","src":"85215:39:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"85360:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85364:6:11","memberName":"sender","nodeType":"MemberAccess","src":"85360:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":9393,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"85382:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}],"id":9392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"85374:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9391,"name":"address","nodeType":"ElementaryTypeName","src":"85374:7:11","typeDescriptions":{}}},"id":9394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85374:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"85360:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":9398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"85427:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85431:6:11","memberName":"sender","nodeType":"MemberAccess","src":"85427:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9396,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"85401:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":9397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85416:10:11","memberName":"authorized","nodeType":"MemberAccess","referencedDeclaration":5920,"src":"85401:25:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85401:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"85360:78:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9402,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"85442:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85446:6:11","memberName":"sender","nodeType":"MemberAccess","src":"85442:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"85456:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85456:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"85442:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"85360:103:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920666163746f7279206f7220617574686f72697a65642063616e2066756e64","id":9408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"85478:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_331a8638d2d0f98f8d3f3cf98612aa7deff792db89de0766cae94d8c9821c189","typeString":"literal_string \"Only factory or authorized can fund\""},"value":"Only factory or authorized can fund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_331a8638d2d0f98f8d3f3cf98612aa7deff792db89de0766cae94d8c9821c189","typeString":"literal_string \"Only factory or authorized can fund\""}],"id":9388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"85338:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85338:188:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9410,"nodeType":"ExpressionStatement","src":"85338:188:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9412,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"85694:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85694:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9414,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"85717:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"85724:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"85717:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"85694:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e207061737365642061637469766174696f6e","id":9417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"85732:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_627323d2f36f63a1534c07b8bf8293c043cb8b89a94a2a384f0b6dac51929db5","typeString":"literal_string \"Mission passed activation\""},"value":"Mission passed activation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_627323d2f36f63a1534c07b8bf8293c043cb8b89a94a2a384f0b6dac51929db5","typeString":"literal_string \"Mission passed activation\""}],"id":9411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"85686:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85686:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9419,"nodeType":"ExpressionStatement","src":"85686:74:11"},{"expression":{"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9420,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"85817:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"85830:8:11","memberName":"croStart","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"85817:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":9423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"85847:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85851:5:11","memberName":"value","nodeType":"MemberAccess","src":"85847:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"85817:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9426,"nodeType":"ExpressionStatement","src":"85817:39:11"},{"expression":{"id":9432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9427,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"85956:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"85969:10:11","memberName":"croCurrent","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"85956:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":9430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"85984:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85988:5:11","memberName":"value","nodeType":"MemberAccess","src":"85984:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"85956:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9433,"nodeType":"ExpressionStatement","src":"85956:37:11"},{"eventCall":{"arguments":[{"expression":{"id":9435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"86111:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"86115:5:11","memberName":"value","nodeType":"MemberAccess","src":"86111:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9437,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"86122:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"86135:10:11","memberName":"croCurrent","nodeType":"MemberAccess","referencedDeclaration":8674,"src":"86122:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9434,"name":"PotIncreased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"86098:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":9439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86098:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9440,"nodeType":"EmitStatement","src":"86093:53:11"}]},"documentation":{"id":9377,"nodeType":"StructuredDocumentation","src":"85100:50:11","text":" @dev Add funds to prize pool."},"functionSelector":"eb2bab77","id":9442,"implemented":true,"kind":"function","modifiers":[],"name":"increasePot","nameLocation":"85162:11:11","nodeType":"FunctionDefinition","parameters":{"id":9378,"nodeType":"ParameterList","parameters":[],"src":"85173:2:11"},"returnParameters":{"id":9379,"nodeType":"ParameterList","parameters":[],"src":"85210:0:11"},"scope":10581,"src":"85153:1058:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9453,"nodeType":"Block","src":"86447:158:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9450,"name":"_refundPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10580,"src":"86458:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86458:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9452,"nodeType":"ExpressionStatement","src":"86458:16:11"}]},"documentation":{"id":9443,"nodeType":"StructuredDocumentation","src":"86219:138:11","text":" @dev Refunds players if the mission fails.\n This function can be called by the owner or an authorized address."},"functionSelector":"98bdae43","id":9454,"implemented":true,"kind":"function","modifiers":[{"id":9446,"kind":"modifierInvocation","modifierName":{"id":9445,"name":"nonReentrant","nameLocations":["86412:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"86412:12:11"},"nodeType":"ModifierInvocation","src":"86412:12:11"},{"id":9448,"kind":"modifierInvocation","modifierName":{"id":9447,"name":"onlyOwnerOrAuthorized","nameLocations":["86425:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":8639,"src":"86425:21:11"},"nodeType":"ModifierInvocation","src":"86425:21:11"}],"name":"refundPlayers","nameLocation":"86372:13:11","nodeType":"FunctionDefinition","parameters":{"id":9444,"nodeType":"ParameterList","parameters":[],"src":"86385:2:11"},"returnParameters":{"id":9449,"nodeType":"ParameterList","parameters":[],"src":"86447:0:11"},"scope":10581,"src":"86363:242:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9466,"nodeType":"Block","src":"86979:160:11","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":9463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"87005:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9462,"name":"_withdrawFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"86990:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":9464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86990:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9465,"nodeType":"ExpressionStatement","src":"86990:20:11"}]},"documentation":{"id":9455,"nodeType":"StructuredDocumentation","src":"86613:276:11","text":" @notice Distributes remaining CRO after mission completion or failure.\n @dev Sends:\n      - 25% to factory owner\n      - 75% to MissionFactory (for future missions)\n @dev If `force = true`, also withdraws failed refund amounts."},"functionSelector":"24600fc3","id":9467,"implemented":true,"kind":"function","modifiers":[{"id":9458,"kind":"modifierInvocation","modifierName":{"id":9457,"name":"nonReentrant","nameLocations":["86944:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"86944:12:11"},"nodeType":"ModifierInvocation","src":"86944:12:11"},{"id":9460,"kind":"modifierInvocation","modifierName":{"id":9459,"name":"onlyOwnerOrAuthorized","nameLocations":["86957:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":8639,"src":"86957:21:11"},"nodeType":"ModifierInvocation","src":"86957:21:11"}],"name":"withdrawFunds","nameLocation":"86904:13:11","nodeType":"FunctionDefinition","parameters":{"id":9456,"nodeType":"ParameterList","parameters":[],"src":"86917:2:11"},"returnParameters":{"id":9461,"nodeType":"ParameterList","parameters":[],"src":"86979:0:11"},"scope":10581,"src":"86895:244:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9499,"nodeType":"Block","src":"87391:385:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9476,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"87410:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87410:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9478,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"87434:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"87441:13:11","memberName":"PartlySuccess","nodeType":"MemberAccess","referencedDeclaration":5775,"src":"87434:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"87410:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9481,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"87476:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87476:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9483,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"87500:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"87507:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"87500:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"87476:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"87410:104:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e206e6f7420656e64656420796574","id":9487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"87516:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce7d7a072b0d33b3c69a7d274561197c0dbf0e2b8f8cbcbbba38e2e098a6970f","typeString":"literal_string \"Mission not ended yet\""},"value":"Mission not ended yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce7d7a072b0d33b3c69a7d274561197c0dbf0e2b8f8cbcbbba38e2e098a6970f","typeString":"literal_string \"Mission not ended yet\""}],"id":9475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"87402:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87402:138:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9489,"nodeType":"ExpressionStatement","src":"87402:138:11"},{"expression":{"arguments":[{"expression":{"id":9491,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"87622:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"87629:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"87622:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":9490,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"87611:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87611:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9494,"nodeType":"ExpressionStatement","src":"87611:26:11"},{"expression":{"arguments":[{"hexValue":"66616c7365","id":9496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"87663:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9495,"name":"_withdrawFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"87648:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":9497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87648:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9498,"nodeType":"ExpressionStatement","src":"87648:21:11"}]},"documentation":{"id":9468,"nodeType":"StructuredDocumentation","src":"87147:151:11","text":" @notice Allows owner or authorized to finalize a mission after time expiry.\n @dev Ends mission and withdraws remaining pot."},"functionSelector":"12124848","id":9500,"implemented":true,"kind":"function","modifiers":[{"id":9471,"kind":"modifierInvocation","modifierName":{"id":9470,"name":"onlyOwnerOrAuthorized","nameLocations":["87356:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":8639,"src":"87356:21:11"},"nodeType":"ModifierInvocation","src":"87356:21:11"},{"id":9473,"kind":"modifierInvocation","modifierName":{"id":9472,"name":"nonReentrant","nameLocations":["87378:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":782,"src":"87378:12:11"},"nodeType":"ModifierInvocation","src":"87378:12:11"}],"name":"forceFinalizeMission","nameLocation":"87316:20:11","nodeType":"FunctionDefinition","parameters":{"id":9469,"nodeType":"ParameterList","parameters":[],"src":"87336:2:11"},"returnParameters":{"id":9474,"nodeType":"ParameterList","parameters":[],"src":"87391:0:11"},"scope":10581,"src":"87307:469:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9510,"nodeType":"Block","src":"88162:53:11","statements":[{"expression":{"expression":{"expression":{"id":9506,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"88180:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"88193:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"88180:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"88201:6:11","memberName":"length","nodeType":"MemberAccess","src":"88180:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9505,"id":9509,"nodeType":"Return","src":"88173:34:11"}]},"documentation":{"id":9501,"nodeType":"StructuredDocumentation","src":"87913:173:11","text":" @dev Returns the current number of players enrolled in the mission.\n This function retrieves the length of the players array in the mission data."},"functionSelector":"c2e52206","id":9511,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerCount","nameLocation":"88101:14:11","nodeType":"FunctionDefinition","parameters":{"id":9502,"nodeType":"ParameterList","parameters":[],"src":"88115:2:11"},"returnParameters":{"id":9505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9511,"src":"88153:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9503,"name":"uint256","nodeType":"ElementaryTypeName","src":"88153:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88152:9:11"},"scope":10581,"src":"88092:123:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9533,"nodeType":"Block","src":"88474:311:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9520,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9514,"src":"88493:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"88509:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"88501:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9521,"name":"address","nodeType":"ElementaryTypeName","src":"88501:7:11","typeDescriptions":{}}},"id":9524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88501:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"88493:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":9526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"88513:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":9519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"88485:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88485:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9528,"nodeType":"ExpressionStatement","src":"88485:46:11"},{"expression":{"baseExpression":{"id":9529,"name":"enrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"88599:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9531,"indexExpression":{"id":9530,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9514,"src":"88608:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"88599:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9518,"id":9532,"nodeType":"Return","src":"88592:21:11"}]},"documentation":{"id":9512,"nodeType":"StructuredDocumentation","src":"88223:178:11","text":" @dev Returns true if the address is a player in the mission.\n This function checks if the address is present in the players array of the mission data."},"functionSelector":"09c95e10","id":9534,"implemented":true,"kind":"function","modifiers":[],"name":"isPlayer","nameLocation":"88416:8:11","nodeType":"FunctionDefinition","parameters":{"id":9515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9514,"mutability":"mutable","name":"addr","nameLocation":"88433:4:11","nodeType":"VariableDeclaration","scope":9534,"src":"88425:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9513,"name":"address","nodeType":"ElementaryTypeName","src":"88425:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88424:14:11"},"returnParameters":{"id":9518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9534,"src":"88468:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9516,"name":"bool","nodeType":"ElementaryTypeName","src":"88468:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88467:6:11"},"scope":10581,"src":"88407:378:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9552,"nodeType":"Block","src":"89267:124:11","statements":[{"expression":{"components":[{"baseExpression":{"id":9544,"name":"enrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"89286:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9546,"indexExpression":{"id":9545,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9537,"src":"89295:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"89286:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":9547,"name":"hasWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"89304:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9549,"indexExpression":{"id":9548,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9537,"src":"89311:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"89304:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"89285:34:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$","typeString":"tuple(bool,bool)"}},"functionReturnParameters":9543,"id":9551,"nodeType":"Return","src":"89278:41:11"}]},"documentation":{"id":9535,"nodeType":"StructuredDocumentation","src":"88793:382:11","text":" @dev Returns the player state for a given address.\n This function checks if the player is enrolled and if they have won in any round.\n @param player The address of the player to check.\n @return joined A boolean indicating if the player is enrolled in the mission.\n @return won A boolean indicating if the player has won in any round."},"functionSelector":"fcca0c84","id":9553,"implemented":true,"kind":"function","modifiers":[],"name":"playerState","nameLocation":"89190:11:11","nodeType":"FunctionDefinition","parameters":{"id":9538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9537,"mutability":"mutable","name":"player","nameLocation":"89210:6:11","nodeType":"VariableDeclaration","scope":9553,"src":"89202:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9536,"name":"address","nodeType":"ElementaryTypeName","src":"89202:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89201:16:11"},"returnParameters":{"id":9543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9540,"mutability":"mutable","name":"joined","nameLocation":"89249:6:11","nodeType":"VariableDeclaration","scope":9553,"src":"89244:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9539,"name":"bool","nodeType":"ElementaryTypeName","src":"89244:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9542,"mutability":"mutable","name":"won","nameLocation":"89262:3:11","nodeType":"VariableDeclaration","scope":9553,"src":"89257:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9541,"name":"bool","nodeType":"ElementaryTypeName","src":"89257:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89243:23:11"},"scope":10581,"src":"89181:210:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9599,"nodeType":"Block","src":"89782:844:11","statements":[{"assignments":[9561],"declarations":[{"constant":false,"id":9561,"mutability":"mutable","name":"s","nameLocation":"89800:1:11","nodeType":"VariableDeclaration","scope":9599,"src":"89793:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":9560,"nodeType":"UserDefinedTypeName","pathNode":{"id":9559,"name":"Status","nameLocations":["89793:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"89793:6:11"},"referencedDeclaration":5778,"src":"89793:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":9564,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9562,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"89804:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89804:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"89793:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9565,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9561,"src":"89929:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9566,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"89934:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"89941:6:11","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"89934:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"89929:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9572,"nodeType":"IfStatement","src":"89925:184:11","trueBody":{"id":9571,"nodeType":"Block","src":"89949:160:11","statements":[{"expression":{"hexValue":"30","id":9569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"89971:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9558,"id":9570,"nodeType":"Return","src":"89964:8:11"}]}},{"assignments":[9574],"declarations":[{"constant":false,"id":9574,"mutability":"mutable","name":"nowTs","nameLocation":"90127:5:11","nodeType":"VariableDeclaration","scope":9599,"src":"90119:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9573,"name":"uint256","nodeType":"ElementaryTypeName","src":"90119:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9577,"initialValue":{"expression":{"id":9575,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"90135:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"90141:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"90135:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"90119:31:11"},{"assignments":[9579],"declarations":[{"constant":false,"id":9579,"mutability":"mutable","name":"cd","nameLocation":"90237:2:11","nodeType":"VariableDeclaration","scope":9599,"src":"90229:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9578,"name":"uint256","nodeType":"ElementaryTypeName","src":"90229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9591,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9580,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"90243:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"90256:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"90243:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"90269:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"90243:27:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9584,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"90274:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"90287:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"90274:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"90243:57:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"90242:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"333030","id":9589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"90322:3:11","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"id":9590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"90242:83:11","trueExpression":{"hexValue":"3630","id":9588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"90317:2:11","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"90229:96:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9592,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"90470:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"90483:14:11","memberName":"pauseTimestamp","nodeType":"MemberAccess","referencedDeclaration":8680,"src":"90470:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9594,"name":"cd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"90500:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"90470:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9596,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"90505:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"90470:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9558,"id":9598,"nodeType":"Return","src":"90463:47:11"}]},"documentation":{"id":9554,"nodeType":"StructuredDocumentation","src":"89399:305:11","text":" @dev Returns the number of seconds until the next round starts.\n This function checks the current real-time status of the mission and calculates the time until the next round.\n @return The number of seconds until the next round starts, or 0 if the mission is not paused."},"functionSelector":"5407441f","id":9600,"implemented":true,"kind":"function","modifiers":[],"name":"secondsUntilNextRound","nameLocation":"89719:21:11","nodeType":"FunctionDefinition","parameters":{"id":9555,"nodeType":"ParameterList","parameters":[],"src":"89740:2:11"},"returnParameters":{"id":9558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9600,"src":"89773:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9556,"name":"uint256","nodeType":"ElementaryTypeName","src":"89773:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89772:9:11"},"scope":10581,"src":"89710:916:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9642,"nodeType":"Block","src":"90955:785:11","statements":[{"assignments":[9607],"declarations":[{"constant":false,"id":9607,"mutability":"mutable","name":"nowTs","nameLocation":"90974:5:11","nodeType":"VariableDeclaration","scope":9642,"src":"90966:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9606,"name":"uint256","nodeType":"ElementaryTypeName","src":"90966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9610,"initialValue":{"expression":{"id":9608,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"90982:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"90988:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"90982:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"90966:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9611,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"91116:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9612,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"91124:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91137:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"91124:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91116:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9618,"nodeType":"IfStatement","src":"91112:222:11","trueBody":{"id":9617,"nodeType":"Block","src":"91151:183:11","statements":[{"expression":{"hexValue":"30","id":9615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"91173:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9605,"id":9616,"nodeType":"Return","src":"91166:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9619,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"91348:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9620,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"91357:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91370:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"91357:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91348:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9626,"nodeType":"IfStatement","src":"91344:217:11","trueBody":{"id":9625,"nodeType":"Block","src":"91382:179:11","statements":[{"expression":{"hexValue":"313030","id":9623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"91404:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"functionReturnParameters":9605,"id":9624,"nodeType":"Return","src":"91397:10:11"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9627,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"91579:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9628,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"91587:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91600:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"91587:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91579:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"91578:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":9632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"91616:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"91578:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9634,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"91623:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91636:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"91623:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9636,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"91649:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91662:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"91649:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91623:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"91622:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91578:97:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9605,"id":9641,"nodeType":"Return","src":"91571:104:11"}]},"documentation":{"id":9601,"nodeType":"StructuredDocumentation","src":"90634:244:11","text":" @dev Returns the current progress percentage of the mission.\n This function calculates the progress based on the elapsed time since the mission started.\n @return The current progress percentage of the mission."},"functionSelector":"fb84e12f","id":9643,"implemented":true,"kind":"function","modifiers":[],"name":"currentProgressPct","nameLocation":"90893:18:11","nodeType":"FunctionDefinition","parameters":{"id":9602,"nodeType":"ParameterList","parameters":[],"src":"90911:2:11"},"returnParameters":{"id":9605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9643,"src":"90947:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9603,"name":"uint256","nodeType":"ElementaryTypeName","src":"90947:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90946:9:11"},"scope":10581,"src":"90884:856:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9762,"nodeType":"Block","src":"92211:1958:11","statements":[{"assignments":[9652],"declarations":[{"constant":false,"id":9652,"mutability":"mutable","name":"nowTs","nameLocation":"92230:5:11","nodeType":"VariableDeclaration","scope":9762,"src":"92222:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9651,"name":"uint256","nodeType":"ElementaryTypeName","src":"92222:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9655,"initialValue":{"expression":{"id":9653,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"92238:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"92244:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"92238:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"92222:31:11"},{"assignments":[9658],"declarations":[{"constant":false,"id":9658,"mutability":"mutable","name":"s","nameLocation":"92339:1:11","nodeType":"VariableDeclaration","scope":9762,"src":"92332:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":9657,"nodeType":"UserDefinedTypeName","pathNode":{"id":9656,"name":"Status","nameLocations":["92332:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"92332:6:11"},"referencedDeclaration":5778,"src":"92332:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":9661,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9659,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"92343:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92343:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"92332:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9662,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"92468:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9663,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"92473:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"92480:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"92473:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"92468:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9666,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"92490:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":9667,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"92495:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"92502:6:11","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"92495:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"92490:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"92468:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9674,"nodeType":"IfStatement","src":"92464:206:11","trueBody":{"id":9673,"nodeType":"Block","src":"92510:160:11","statements":[{"expression":{"hexValue":"30","id":9671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92532:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9650,"id":9672,"nodeType":"Return","src":"92525:8:11"}]}},{"condition":{"id":9678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"92684:17:11","subExpression":{"baseExpression":{"id":9675,"name":"enrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"92685:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9677,"indexExpression":{"id":9676,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"92694:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"92685:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9682,"nodeType":"IfStatement","src":"92680:174:11","trueBody":{"id":9681,"nodeType":"Block","src":"92703:151:11","statements":[{"expression":{"hexValue":"30","id":9679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92725:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9650,"id":9680,"nodeType":"Return","src":"92718:8:11"}]}},{"condition":{"baseExpression":{"id":9683,"name":"hasWon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"92868:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9685,"indexExpression":{"id":9684,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"92875:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"92868:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9689,"nodeType":"IfStatement","src":"92864:171:11","trueBody":{"id":9688,"nodeType":"Block","src":"92884:151:11","statements":[{"expression":{"hexValue":"30","id":9686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92906:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9650,"id":9687,"nodeType":"Return","src":"92899:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9690,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"93049:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9691,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93057:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93070:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"93057:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93049:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9697,"nodeType":"IfStatement","src":"93045:191:11","trueBody":{"id":9696,"nodeType":"Block","src":"93084:152:11","statements":[{"expression":{"hexValue":"30","id":9694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93106:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9650,"id":9695,"nodeType":"Return","src":"93099:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9698,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"93250:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9699,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93259:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93272:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"93259:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93250:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9705,"nodeType":"IfStatement","src":"93246:184:11","trueBody":{"id":9704,"nodeType":"Block","src":"93284:146:11","statements":[{"expression":{"hexValue":"30","id":9702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93306:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9650,"id":9703,"nodeType":"Return","src":"93299:8:11"}]}},{"assignments":[9707],"declarations":[{"constant":false,"id":9707,"mutability":"mutable","name":"progress","nameLocation":"93448:8:11","nodeType":"VariableDeclaration","scope":9762,"src":"93440:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9706,"name":"uint256","nodeType":"ElementaryTypeName","src":"93440:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9722,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9708,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"93460:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9709,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93468:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93481:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"93468:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93460:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"93459:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":9713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93497:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"93459:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9715,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93504:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93517:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"93504:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9717,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93530:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93543:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"93530:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93504:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"93503:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93459:97:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"93440:116:11"},{"assignments":[9724],"declarations":[{"constant":false,"id":9724,"mutability":"mutable","name":"lastAmt","nameLocation":"93633:7:11","nodeType":"VariableDeclaration","scope":9762,"src":"93625:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9723,"name":"uint256","nodeType":"ElementaryTypeName","src":"93625:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9741,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9725,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93643:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93656:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"93643:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":9727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"93667:6:11","memberName":"length","nodeType":"MemberAccess","src":"93643:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93676:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"93643:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93860:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"93643:218:11","trueExpression":{"expression":{"baseExpression":{"expression":{"id":9730,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93777:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93790:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"93777:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":9737,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":9732,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93801:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93814:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"93801:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"id":9734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"93825:6:11","memberName":"length","nodeType":"MemberAccess","src":"93801:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93832:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"93801:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"93777:57:11","typeDescriptions":{"typeIdentifier":"t_struct$_PlayersWon_$8645_storage","typeString":"struct Mission.PlayersWon storage ref"}},"id":9738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93835:9:11","memberName":"amountWon","nodeType":"MemberAccess","referencedDeclaration":8644,"src":"93777:67:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"93625:236:11"},{"assignments":[9743],"declarations":[{"constant":false,"id":9743,"mutability":"mutable","name":"lastProg","nameLocation":"93880:8:11","nodeType":"VariableDeclaration","scope":9762,"src":"93872:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9742,"name":"uint256","nodeType":"ElementaryTypeName","src":"93872:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9751,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9744,"name":"lastAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9724,"src":"93892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":9745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93902:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"93892:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"93891:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":9748,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"93909:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93922:8:11","memberName":"croStart","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"93909:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93891:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"93872:58:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9752,"name":"progress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9707,"src":"94037:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9753,"name":"lastProg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9743,"src":"94048:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"94037:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"94036:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":9756,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"94060:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94073:8:11","memberName":"croStart","nodeType":"MemberAccess","referencedDeclaration":8672,"src":"94060:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"94036:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":9759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"94084:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"94036:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9650,"id":9761,"nodeType":"Return","src":"94029:58:11"}]},"documentation":{"id":9644,"nodeType":"StructuredDocumentation","src":"91748:385:11","text":" @dev Returns the pending payout for a player based on their progress in the mission.\n This function calculates the pending payout based on the current progress percentage and the last payout amount.\n @param player The address of the player to check for pending payout.\n @return The pending payout amount for the player, or 0 if not applicable."},"functionSelector":"e6810a50","id":9763,"implemented":true,"kind":"function","modifiers":[],"name":"pendingPayout","nameLocation":"92148:13:11","nodeType":"FunctionDefinition","parameters":{"id":9647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9646,"mutability":"mutable","name":"player","nameLocation":"92170:6:11","nodeType":"VariableDeclaration","scope":9763,"src":"92162:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9645,"name":"address","nodeType":"ElementaryTypeName","src":"92162:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92161:16:11"},"returnParameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9763,"src":"92202:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9648,"name":"uint256","nodeType":"ElementaryTypeName","src":"92202:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92201:9:11"},"scope":10581,"src":"92139:2030:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9794,"nodeType":"Block","src":"94563:512:11","statements":[{"assignments":[9771],"declarations":[{"constant":false,"id":9771,"mutability":"mutable","name":"s","nameLocation":"94581:1:11","nodeType":"VariableDeclaration","scope":9794,"src":"94574:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":9770,"nodeType":"UserDefinedTypeName","pathNode":{"id":9769,"name":"Status","nameLocations":["94574:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"94574:6:11"},"referencedDeclaration":5778,"src":"94574:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":9774,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9772,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"94585:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"94585:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"94574:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9775,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9771,"src":"94710:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9776,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"94715:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"94722:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"94715:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"94710:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9779,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9771,"src":"94732:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9780,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"94737:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"94744:6:11","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"94737:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"94732:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"94710:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9791,"nodeType":"IfStatement","src":"94706:202:11","trueBody":{"id":9790,"nodeType":"Block","src":"94752:156:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9784,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"94774:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94787:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"94774:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9786,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"94803:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94816:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"94803:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"94774:52:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":9768,"id":9789,"nodeType":"Return","src":"94767:59:11"}]}},{"expression":{"hexValue":"30","id":9792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"94925:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9768,"id":9793,"nodeType":"Return","src":"94918:8:11"}]},"documentation":{"id":9764,"nodeType":"StructuredDocumentation","src":"94177:310:11","text":" @dev Returns the number of remaining rounds in the mission.\n This function checks the current real-time status of the mission and returns the number of rounds left.\n @return The number of remaining rounds in the mission, or 0 if the mission is not in Active or Paused status."},"functionSelector":"a7e22a3e","id":9795,"implemented":true,"kind":"function","modifiers":[],"name":"remainingRounds","nameLocation":"94502:15:11","nodeType":"FunctionDefinition","parameters":{"id":9765,"nodeType":"ParameterList","parameters":[],"src":"94517:2:11"},"returnParameters":{"id":9768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9795,"src":"94556:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9766,"name":"uint8","nodeType":"ElementaryTypeName","src":"94556:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"94555:7:11"},"scope":10581,"src":"94493:582:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9804,"nodeType":"Block","src":"95232:38:11","statements":[{"expression":{"id":9802,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"95250:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"functionReturnParameters":9801,"id":9803,"nodeType":"Return","src":"95243:19:11"}]},"documentation":{"id":9796,"nodeType":"StructuredDocumentation","src":"95083:60:11","text":" @dev Returns the MissionData structure."},"functionSelector":"7ce17de4","id":9805,"implemented":true,"kind":"function","modifiers":[],"name":"getMissionData","nameLocation":"95158:14:11","nodeType":"FunctionDefinition","parameters":{"id":9797,"nodeType":"ParameterList","parameters":[],"src":"95172:2:11"},"returnParameters":{"id":9801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9805,"src":"95212:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_memory_ptr","typeString":"struct Mission.MissionData"},"typeName":{"id":9799,"nodeType":"UserDefinedTypeName","pathNode":{"id":9798,"name":"MissionData","nameLocations":["95212:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":8686,"src":"95212:11:11"},"referencedDeclaration":8686,"src":"95212:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage_ptr","typeString":"struct Mission.MissionData"}},"visibility":"internal"}],"src":"95211:20:11"},"scope":10581,"src":"95149:121:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9815,"nodeType":"Block","src":"95572:46:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9812,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"95590:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"95590:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":9811,"id":9814,"nodeType":"Return","src":"95583:27:11"}]},"documentation":{"id":9806,"nodeType":"StructuredDocumentation","src":"95278:217:11","text":" @dev Returns the current real-time status of the mission.\n This function checks the current time and mission data to determine the status.\n @return The current status of the mission."},"functionSelector":"68c6ba21","id":9816,"implemented":true,"kind":"function","modifiers":[],"name":"getRealtimeStatus","nameLocation":"95510:17:11","nodeType":"FunctionDefinition","parameters":{"id":9807,"nodeType":"ParameterList","parameters":[],"src":"95527:2:11"},"returnParameters":{"id":9811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9816,"src":"95564:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":9809,"nodeType":"UserDefinedTypeName","pathNode":{"id":9808,"name":"Status","nameLocations":["95564:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"95564:6:11"},"referencedDeclaration":5778,"src":"95564:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"src":"95563:8:11"},"scope":10581,"src":"95501:117:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9838,"nodeType":"Block","src":"95956:141:11","statements":[{"assignments":[9823],"declarations":[{"constant":false,"id":9823,"mutability":"mutable","name":"nowTs","nameLocation":"95975:5:11","nodeType":"VariableDeclaration","scope":9838,"src":"95967:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9822,"name":"uint256","nodeType":"ElementaryTypeName","src":"95967:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9826,"initialValue":{"expression":{"id":9824,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"95983:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"95989:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"95983:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"95967:31:11"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9827,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9823,"src":"96017:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9828,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"96025:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96038:13:11","memberName":"enrollmentEnd","nodeType":"MemberAccess","referencedDeclaration":8656,"src":"96025:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"96017:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9831,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9823,"src":"96055:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9832,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"96063:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96076:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"96063:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"96055:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"96017:71:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"96016:73:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9821,"id":9837,"nodeType":"Return","src":"96009:80:11"}]},"documentation":{"id":9817,"nodeType":"StructuredDocumentation","src":"95626:257:11","text":" @dev Returns whether the mission is in the arming phase.\n This function checks if the current time is between the enrollment end and mission start times.\n @return A boolean indicating if the mission is in the arming phase."},"functionSelector":"dd1121f6","id":9839,"implemented":true,"kind":"function","modifiers":[],"name":"isArming","nameLocation":"95898:8:11","nodeType":"FunctionDefinition","parameters":{"id":9818,"nodeType":"ParameterList","parameters":[],"src":"95906:2:11"},"returnParameters":{"id":9821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9839,"src":"95950:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9819,"name":"bool","nodeType":"ElementaryTypeName","src":"95950:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"95949:6:11"},"scope":10581,"src":"95889:208:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9862,"nodeType":"Block","src":"96477:111:11","statements":[{"assignments":[9847],"declarations":[{"constant":false,"id":9847,"mutability":"mutable","name":"s","nameLocation":"96495:1:11","nodeType":"VariableDeclaration","scope":9862,"src":"96488:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":9846,"nodeType":"UserDefinedTypeName","pathNode":{"id":9845,"name":"Status","nameLocations":["96488:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"96488:6:11"},"referencedDeclaration":5778,"src":"96488:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"id":9850,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9848,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"96499:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96499:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"VariableDeclarationStatement","src":"96488:31:11"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9851,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9847,"src":"96538:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9852,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"96543:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"96550:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"96543:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"96538:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9855,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9847,"src":"96561:1:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9856,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"96566:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"96573:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"96566:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"96561:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"96538:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":9860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"96537:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9844,"id":9861,"nodeType":"Return","src":"96530:50:11"}]},"documentation":{"id":9840,"nodeType":"StructuredDocumentation","src":"96105:298:11","text":" @dev Returns whether the mission is finalized by realtime status, \nnot the status set in the factory which can lag behind.\n This function checks if the mission is in Success or Failed status.\n @return A boolean indicating if the mission is finalized."},"functionSelector":"8d4e4083","id":9863,"implemented":true,"kind":"function","modifiers":[],"name":"isFinalized","nameLocation":"96419:11:11","nodeType":"FunctionDefinition","parameters":{"id":9841,"nodeType":"ParameterList","parameters":[],"src":"96430:2:11"},"returnParameters":{"id":9844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9863,"src":"96471:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9842,"name":"bool","nodeType":"ElementaryTypeName","src":"96471:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"96470:6:11"},"scope":10581,"src":"96410:178:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9961,"nodeType":"Block","src":"96934:1252:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9871,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"96953:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96953:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9873,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"96977:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"96984:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"96977:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"96953:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e206973206e6f7420696e204661696c656420737461747573","id":9876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"96992:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a921181c61f5e7e692608dd752cd1e57ddc429932f2f63cf3810ad868aa77d18","typeString":"literal_string \"Mission is not in Failed status\""},"value":"Mission is not in Failed status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a921181c61f5e7e692608dd752cd1e57ddc429932f2f63cf3810ad868aa77d18","typeString":"literal_string \"Mission is not in Failed status\""}],"id":9870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"96945:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96945:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9878,"nodeType":"ExpressionStatement","src":"96945:81:11"},{"assignments":[9880],"declarations":[{"constant":false,"id":9880,"mutability":"mutable","name":"count","nameLocation":"97084:5:11","nodeType":"VariableDeclaration","scope":9961,"src":"97076:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9879,"name":"uint256","nodeType":"ElementaryTypeName","src":"97076:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9882,"initialValue":{"hexValue":"30","id":9881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"97092:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"97076:17:11"},{"body":{"id":9908,"nodeType":"Block","src":"97162:254:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9895,"name":"failedRefundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"97236:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9900,"indexExpression":{"baseExpression":{"expression":{"id":9896,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"97256:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97269:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"97256:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9899,"indexExpression":{"id":9898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"97277:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"97256:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"97236:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"97283:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"97236:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9907,"nodeType":"IfStatement","src":"97232:173:11","trueBody":{"id":9906,"nodeType":"Block","src":"97286:119:11","statements":[{"expression":{"id":9904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"97382:7:11","subExpression":{"id":9903,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"97382:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9905,"nodeType":"ExpressionStatement","src":"97382:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"97124:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":9888,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"97128:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97141:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"97128:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"97149:6:11","memberName":"length","nodeType":"MemberAccess","src":"97128:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"97124:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9909,"initializationExpression":{"assignments":[9884],"declarations":[{"constant":false,"id":9884,"mutability":"mutable","name":"i","nameLocation":"97117:1:11","nodeType":"VariableDeclaration","scope":9909,"src":"97109:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"97109:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9886,"initialValue":{"hexValue":"30","id":9885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"97121:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"97109:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"97157:3:11","subExpression":{"id":9892,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9884,"src":"97157:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9894,"nodeType":"ExpressionStatement","src":"97157:3:11"},"nodeType":"ForStatement","src":"97104:312:11"},{"assignments":[9914],"declarations":[{"constant":false,"id":9914,"mutability":"mutable","name":"failedPlayers","nameLocation":"97445:13:11","nodeType":"VariableDeclaration","scope":9961,"src":"97428:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9912,"name":"address","nodeType":"ElementaryTypeName","src":"97428:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9913,"nodeType":"ArrayTypeName","src":"97428:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":9920,"initialValue":{"arguments":[{"id":9918,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"97475:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"97461:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":9915,"name":"address","nodeType":"ElementaryTypeName","src":"97465:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9916,"nodeType":"ArrayTypeName","src":"97465:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":9919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"97461:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"97428:53:11"},{"assignments":[9922],"declarations":[{"constant":false,"id":9922,"mutability":"mutable","name":"index","nameLocation":"97582:5:11","nodeType":"VariableDeclaration","scope":9961,"src":"97574:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9921,"name":"uint256","nodeType":"ElementaryTypeName","src":"97574:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9924,"initialValue":{"hexValue":"30","id":9923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"97590:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"97574:17:11"},{"body":{"id":9957,"nodeType":"Block","src":"97660:381:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9937,"name":"failedRefundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"97740:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9942,"indexExpression":{"baseExpression":{"expression":{"id":9938,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"97760:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97773:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"97760:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9941,"indexExpression":{"id":9940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"97781:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"97760:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"97740:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"97787:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"97740:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9956,"nodeType":"IfStatement","src":"97736:294:11","trueBody":{"id":9955,"nodeType":"Block","src":"97790:240:11","statements":[{"expression":{"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9945,"name":"failedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9914,"src":"97883:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9948,"indexExpression":{"id":9947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"97897:7:11","subExpression":{"id":9946,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"97897:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"97883:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":9949,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"97908:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97921:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"97908:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9952,"indexExpression":{"id":9951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"97929:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"97908:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"97883:48:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9954,"nodeType":"ExpressionStatement","src":"97883:48:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"97622:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":9930,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"97626:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":9931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97639:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"97626:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"97647:6:11","memberName":"length","nodeType":"MemberAccess","src":"97626:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"97622:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9958,"initializationExpression":{"assignments":[9926],"declarations":[{"constant":false,"id":9926,"mutability":"mutable","name":"i","nameLocation":"97615:1:11","nodeType":"VariableDeclaration","scope":9958,"src":"97607:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9925,"name":"uint256","nodeType":"ElementaryTypeName","src":"97607:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9928,"initialValue":{"hexValue":"30","id":9927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"97619:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"97607:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"97655:3:11","subExpression":{"id":9934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"97655:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9936,"nodeType":"ExpressionStatement","src":"97655:3:11"},"nodeType":"ForStatement","src":"97602:439:11"},{"expression":{"id":9959,"name":"failedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9914,"src":"98058:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":9869,"id":9960,"nodeType":"Return","src":"98051:20:11"}]},"documentation":{"id":9864,"nodeType":"StructuredDocumentation","src":"96596:251:11","text":" @dev Returns the addresses of players who have failed refunds.\n This function iterates through all players and collects those with failed refund amounts.\n @return An array of player addresses who have failed refunds."},"functionSelector":"7cf61b69","id":9962,"implemented":true,"kind":"function","modifiers":[],"name":"getFailedRefundPlayers","nameLocation":"96862:22:11","nodeType":"FunctionDefinition","parameters":{"id":9865,"nodeType":"ParameterList","parameters":[],"src":"96884:2:11"},"returnParameters":{"id":9869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9962,"src":"96916:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9866,"name":"address","nodeType":"ElementaryTypeName","src":"96916:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9867,"nodeType":"ArrayTypeName","src":"96916:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"96915:18:11"},"scope":10581,"src":"96853:1333:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10021,"nodeType":"Block","src":"98576:575:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":9975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9971,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"98595:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":9972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"98595:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9973,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"98619:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":9974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"98626:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"98619:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"98595:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e206973206e6f7420696e204661696c656420737461747573","id":9976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"98634:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a921181c61f5e7e692608dd752cd1e57ddc429932f2f63cf3810ad868aa77d18","typeString":"literal_string \"Mission is not in Failed status\""},"value":"Mission is not in Failed status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a921181c61f5e7e692608dd752cd1e57ddc429932f2f63cf3810ad868aa77d18","typeString":"literal_string \"Mission is not in Failed status\""}],"id":9970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"98587:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"98587:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9978,"nodeType":"ExpressionStatement","src":"98587:81:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9980,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"98726:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"98742:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"98734:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9981,"name":"address","nodeType":"ElementaryTypeName","src":"98734:7:11","typeDescriptions":{}}},"id":9984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"98734:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"98726:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":9986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"98746:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":9979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"98718:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"98718:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9988,"nodeType":"ExpressionStatement","src":"98718:46:11"},{"expression":{"arguments":[{"baseExpression":{"id":9990,"name":"enrolled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"98853:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9992,"indexExpression":{"id":9991,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"98862:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"98853:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c61796572206e6f7420656e726f6c6c6564","id":9993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"98869:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bb6b9114f273648fdc04f6a2902ddbb375d5369f333597c77c2577f2b21c8b3","typeString":"literal_string \"Player not enrolled\""},"value":"Player not enrolled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bb6b9114f273648fdc04f6a2902ddbb375d5369f333597c77c2577f2b21c8b3","typeString":"literal_string \"Player not enrolled\""}],"id":9989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"98845:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"98845:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9995,"nodeType":"ExpressionStatement","src":"98845:46:11"},{"body":{"id":10017,"nodeType":"Block","src":"99038:83:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":10008,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"99057:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"99070:15:11","memberName":"refundedPlayers","nodeType":"MemberAccess","referencedDeclaration":8683,"src":"99057:28:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10011,"indexExpression":{"id":10010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"99086:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"99057:31:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10012,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"99092:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"99057:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10016,"nodeType":"IfStatement","src":"99053:56:11","trueBody":{"expression":{"hexValue":"74727565","id":10014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"99105:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9969,"id":10015,"nodeType":"Return","src":"99098:11:11"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"98992:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":10001,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"98996:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"99009:15:11","memberName":"refundedPlayers","nodeType":"MemberAccess","referencedDeclaration":8683,"src":"98996:28:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"99025:6:11","memberName":"length","nodeType":"MemberAccess","src":"98996:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"98992:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10018,"initializationExpression":{"assignments":[9997],"declarations":[{"constant":false,"id":9997,"mutability":"mutable","name":"i","nameLocation":"98985:1:11","nodeType":"VariableDeclaration","scope":10018,"src":"98977:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9996,"name":"uint256","nodeType":"ElementaryTypeName","src":"98977:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9999,"initialValue":{"hexValue":"30","id":9998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"98989:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"98977:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"99033:3:11","subExpression":{"id":10005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"99033:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10007,"nodeType":"ExpressionStatement","src":"99033:3:11"},"nodeType":"ForStatement","src":"98972:149:11"},{"expression":{"hexValue":"66616c7365","id":10019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"99138:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9969,"id":10020,"nodeType":"Return","src":"99131:12:11"}]},"documentation":{"id":9963,"nodeType":"StructuredDocumentation","src":"98194:308:11","text":" @dev Checks if a player has been refunded.\n This function iterates through the refundedPlayers array to check if the address is present.\n @param addr The address of the player to check for refund status.\n @return A boolean indicating if the player has been refunded."},"functionSelector":"268b2b51","id":10022,"implemented":true,"kind":"function","modifiers":[],"name":"wasRefunded","nameLocation":"98518:11:11","nodeType":"FunctionDefinition","parameters":{"id":9966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9965,"mutability":"mutable","name":"addr","nameLocation":"98538:4:11","nodeType":"VariableDeclaration","scope":10022,"src":"98530:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9964,"name":"address","nodeType":"ElementaryTypeName","src":"98530:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98529:14:11"},"returnParameters":{"id":9969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10022,"src":"98570:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9967,"name":"bool","nodeType":"ElementaryTypeName","src":"98570:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"98569:6:11"},"scope":10581,"src":"98509:642:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10048,"nodeType":"Block","src":"99404:402:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10031,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"99423:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":10032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99423:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10033,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"99447:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"99454:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"99447:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"99423:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10036,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"99465:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":10037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99465:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10038,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"99489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"99496:13:11","memberName":"PartlySuccess","nodeType":"MemberAccess","referencedDeclaration":5775,"src":"99489:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"99465:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"99423:86:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e206973206e6f7420696e2053756363657373206f7220506172746c795375636365737320737461747573","id":10042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"99529:51:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac6eaf8546a79f7e5c7fedf5abc164cd76f29349a78f13c7745fc733bc202455","typeString":"literal_string \"Mission is not in Success or PartlySuccess status\""},"value":"Mission is not in Success or PartlySuccess status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac6eaf8546a79f7e5c7fedf5abc164cd76f29349a78f13c7745fc733bc202455","typeString":"literal_string \"Mission is not in Success or PartlySuccess status\""}],"id":10030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"99415:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99415:166:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10044,"nodeType":"ExpressionStatement","src":"99415:166:11"},{"expression":{"expression":{"id":10045,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"99673:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"99686:10:11","memberName":"playersWon","nodeType":"MemberAccess","referencedDeclaration":8678,"src":"99673:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage","typeString":"struct Mission.PlayersWon storage ref[] storage ref"}},"functionReturnParameters":10029,"id":10047,"nodeType":"Return","src":"99666:30:11"}]},"documentation":{"id":10023,"nodeType":"StructuredDocumentation","src":"99159:154:11","text":" @dev Returns the array of players who won in the mission.\n This function retrieves the playersWon array from the mission data."},"functionSelector":"df15c37e","id":10049,"implemented":true,"kind":"function","modifiers":[],"name":"getWinners","nameLocation":"99329:10:11","nodeType":"FunctionDefinition","parameters":{"id":10024,"nodeType":"ParameterList","parameters":[],"src":"99339:2:11"},"returnParameters":{"id":10029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10049,"src":"99383:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_memory_ptr_$dyn_memory_ptr","typeString":"struct Mission.PlayersWon[]"},"typeName":{"baseType":{"id":10026,"nodeType":"UserDefinedTypeName","pathNode":{"id":10025,"name":"PlayersWon","nameLocations":["99383:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":8645,"src":"99383:10:11"},"referencedDeclaration":8645,"src":"99383:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_PlayersWon_$8645_storage_ptr","typeString":"struct Mission.PlayersWon"}},"id":10027,"nodeType":"ArrayTypeName","src":"99383:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PlayersWon_$8645_storage_$dyn_storage_ptr","typeString":"struct Mission.PlayersWon[]"}},"visibility":"internal"}],"src":"99382:21:11"},"scope":10581,"src":"99320:486:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10186,"nodeType":"Block","src":"100289:2986:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10056,"name":"_previousStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"100350:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10057,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"100369:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"100376:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"100369:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"100350:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10060,"name":"_previousStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"100387:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10061,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"100406:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"100413:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"100406:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"100387:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"100350:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10068,"nodeType":"IfStatement","src":"100346:224:11","trueBody":{"id":10067,"nodeType":"Block","src":"100421:149:11","statements":[{"expression":{"id":10065,"name":"_previousStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"100443:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10066,"nodeType":"Return","src":"100436:22:11"}]}},{"assignments":[10070],"declarations":[{"constant":false,"id":10070,"mutability":"mutable","name":"nowTs","nameLocation":"100590:5:11","nodeType":"VariableDeclaration","scope":10186,"src":"100582:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10069,"name":"uint256","nodeType":"ElementaryTypeName","src":"100582:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10073,"initialValue":{"expression":{"id":10071,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"100598:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"100604:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"100598:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"100582:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10074,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"100674:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10075,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"100682:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100695:15:11","memberName":"enrollmentStart","nodeType":"MemberAccess","referencedDeclaration":8654,"src":"100682:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"100674:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10082,"nodeType":"IfStatement","src":"100670:173:11","trueBody":{"id":10081,"nodeType":"Block","src":"100712:131:11","statements":[{"expression":{"expression":{"id":10078,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"100734:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"100741:7:11","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":5770,"src":"100734:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10080,"nodeType":"Return","src":"100727:21:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10083,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"100897:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":10084,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"100906:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100919:13:11","memberName":"enrollmentEnd","nodeType":"MemberAccess","referencedDeclaration":8656,"src":"100906:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"100897:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10091,"nodeType":"IfStatement","src":"100893:188:11","trueBody":{"id":10090,"nodeType":"Block","src":"100934:147:11","statements":[{"expression":{"expression":{"id":10087,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"100956:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"100963:9:11","memberName":"Enrolling","nodeType":"MemberAccess","referencedDeclaration":5771,"src":"100956:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10089,"nodeType":"Return","src":"100949:23:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10092,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"101159:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101172:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"101159:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"101180:6:11","memberName":"length","nodeType":"MemberAccess","src":"101159:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10095,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"101189:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101202:20:11","memberName":"enrollmentMinPlayers","nodeType":"MemberAccess","referencedDeclaration":8660,"src":"101189:33:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"101159:63:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10102,"nodeType":"IfStatement","src":"101155:199:11","trueBody":{"id":10101,"nodeType":"Block","src":"101224:130:11","statements":[{"expression":{"expression":{"id":10098,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"101246:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"101253:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"101246:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10100,"nodeType":"Return","src":"101239:20:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10103,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"101420:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10104,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"101428:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101441:12:11","memberName":"missionStart","nodeType":"MemberAccess","referencedDeclaration":8664,"src":"101428:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"101420:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10111,"nodeType":"IfStatement","src":"101416:182:11","trueBody":{"id":10110,"nodeType":"Block","src":"101455:143:11","statements":[{"expression":{"expression":{"id":10107,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"101477:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"101484:6:11","memberName":"Arming","nodeType":"MemberAccess","referencedDeclaration":5772,"src":"101477:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10109,"nodeType":"Return","src":"101470:20:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10112,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"101652:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10113,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"101660:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101673:10:11","memberName":"missionEnd","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"101660:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"101652:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10184,"nodeType":"Block","src":"102746:520:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10162,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"102765:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"102778:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"102765:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"102792:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"102765:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10170,"nodeType":"IfStatement","src":"102761:178:11","trueBody":{"id":10169,"nodeType":"Block","src":"102795:144:11","statements":[{"expression":{"expression":{"id":10166,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"102821:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"102828:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"102821:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10168,"nodeType":"Return","src":"102814:20:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10171,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"102957:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"102970:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"102957:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10173,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"102983:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"102996:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"102983:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"102957:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10180,"nodeType":"IfStatement","src":"102953:203:11","trueBody":{"id":10179,"nodeType":"Block","src":"103011:145:11","statements":[{"expression":{"expression":{"id":10176,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"103037:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"103044:13:11","memberName":"PartlySuccess","nodeType":"MemberAccess","referencedDeclaration":5775,"src":"103037:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10178,"nodeType":"Return","src":"103030:27:11"}]}},{"expression":{"expression":{"id":10181,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"103177:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"103184:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"103177:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10183,"nodeType":"Return","src":"103170:21:11"}]},"id":10185,"nodeType":"IfStatement","src":"101648:1618:11","trueBody":{"id":10161,"nodeType":"Block","src":"101685:1037:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10116,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"101704:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101717:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"101704:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":10118,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"101731:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101744:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"101731:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"101704:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10125,"nodeType":"IfStatement","src":"101700:199:11","trueBody":{"id":10124,"nodeType":"Block","src":"101759:140:11","statements":[{"expression":{"expression":{"id":10121,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"101785:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"101792:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"101785:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10123,"nodeType":"Return","src":"101778:21:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10126,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"101917:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101930:14:11","memberName":"pauseTimestamp","nodeType":"MemberAccess","referencedDeclaration":8680,"src":"101917:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"101948:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"101917:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10134,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10070,"src":"102097:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10135,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"102105:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"102118:14:11","memberName":"pauseTimestamp","nodeType":"MemberAccess","referencedDeclaration":8680,"src":"102105:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10137,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"102154:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"102167:10:11","memberName":"roundCount","nodeType":"MemberAccess","referencedDeclaration":8670,"src":"102154:23:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"102180:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"102154:27:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10141,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"102185:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"102198:13:11","memberName":"missionRounds","nodeType":"MemberAccess","referencedDeclaration":8668,"src":"102185:26:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"102154:57:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":10144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"102153:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"35","id":10146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"102269:9:11","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"id":10147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"102153:125:11","trueExpression":{"hexValue":"31","id":10145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"102236:9:11","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":10148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"102152:127:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"102105:174:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"102097:182:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10158,"nodeType":"Block","src":"102545:155:11","statements":[{"expression":{"expression":{"id":10155,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"102571:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"102578:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"102571:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10157,"nodeType":"Return","src":"102564:20:11"}]},"id":10159,"nodeType":"IfStatement","src":"102093:607:11","trueBody":{"id":10154,"nodeType":"Block","src":"102403:136:11","statements":[{"expression":{"expression":{"id":10151,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"102429:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"102436:6:11","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"102429:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10153,"nodeType":"Return","src":"102422:20:11"}]}},"id":10160,"nodeType":"IfStatement","src":"101913:787:11","trueBody":{"id":10133,"nodeType":"Block","src":"101951:136:11","statements":[{"expression":{"expression":{"id":10130,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"101977:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"101984:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"101977:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"functionReturnParameters":10055,"id":10132,"nodeType":"Return","src":"101970:20:11"}]}}]}}]},"documentation":{"id":10050,"nodeType":"StructuredDocumentation","src":"99937:267:11","text":" @dev Returns the current status of the mission based on the current time and mission data.\n This function checks various conditions to determine the real-time status of the mission.\n @return status The current status of the mission."},"id":10187,"implemented":true,"kind":"function","modifiers":[],"name":"_getRealtimeStatus","nameLocation":"100220:18:11","nodeType":"FunctionDefinition","parameters":{"id":10051,"nodeType":"ParameterList","parameters":[],"src":"100238:2:11"},"returnParameters":{"id":10055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10054,"mutability":"mutable","name":"status","nameLocation":"100281:6:11","nodeType":"VariableDeclaration","scope":10187,"src":"100274:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":10053,"nodeType":"UserDefinedTypeName","pathNode":{"id":10052,"name":"Status","nameLocations":["100274:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"100274:6:11"},"referencedDeclaration":5778,"src":"100274:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"src":"100273:15:11"},"scope":10581,"src":"100211:3064:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10265,"nodeType":"Block","src":"103459:1183:11","statements":[{"assignments":[10195],"declarations":[{"constant":false,"id":10195,"mutability":"mutable","name":"nowTs","nameLocation":"103478:5:11","nodeType":"VariableDeclaration","scope":10265,"src":"103470:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10194,"name":"uint256","nodeType":"ElementaryTypeName","src":"103470:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10198,"initialValue":{"expression":{"id":10196,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"103486:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"103492:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"103486:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"103470:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10199,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"103576:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10200,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"103589:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"103596:9:11","memberName":"Enrolling","nodeType":"MemberAccess","referencedDeclaration":5771,"src":"103589:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"103576:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10203,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"103735:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10204,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"103748:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"103755:6:11","memberName":"Arming","nodeType":"MemberAccess","referencedDeclaration":5772,"src":"103748:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"103735:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"103576:185:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10208,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"103788:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10209,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"103801:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"103808:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"103801:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"103788:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"103576:239:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10213,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"103840:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10214,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"103853:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"103860:13:11","memberName":"PartlySuccess","nodeType":"MemberAccess","referencedDeclaration":5775,"src":"103853:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"103840:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"103576:297:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10218,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"103892:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10219,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"103905:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"103912:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"103905:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"103892:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"103576:342:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10230,"nodeType":"IfStatement","src":"103572:484:11","trueBody":{"id":10229,"nodeType":"Block","src":"103930:126:11","statements":[{"expression":{"arguments":[{"id":10226,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"103979:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"expression":{"id":10223,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"103947:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":10225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"103962:16:11","memberName":"setMissionStatus","nodeType":"MemberAccess","referencedDeclaration":7073,"src":"103947:31:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status) external"}},"id":10227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"103947:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10228,"nodeType":"ExpressionStatement","src":"103947:42:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10231,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"104070:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10232,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"104083:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"104090:6:11","memberName":"Paused","nodeType":"MemberAccess","referencedDeclaration":5774,"src":"104083:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"104070:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10242,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"104249:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10243,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"104262:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"104269:6:11","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"104262:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"104249:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10253,"nodeType":"IfStatement","src":"104245:164:11","trueBody":{"id":10252,"nodeType":"Block","src":"104277:132:11","statements":[{"expression":{"id":10250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10246,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"104292:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"104305:14:11","memberName":"pauseTimestamp","nodeType":"MemberAccess","referencedDeclaration":8680,"src":"104292:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":10249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"104322:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"104292:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10251,"nodeType":"ExpressionStatement","src":"104292:31:11"}]}},"id":10254,"nodeType":"IfStatement","src":"104066:343:11","trueBody":{"id":10241,"nodeType":"Block","src":"104098:132:11","statements":[{"expression":{"id":10239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10235,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"104113:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"104126:14:11","memberName":"pauseTimestamp","nodeType":"MemberAccess","referencedDeclaration":8680,"src":"104113:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10238,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10195,"src":"104143:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"104113:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10240,"nodeType":"ExpressionStatement","src":"104113:35:11"}]}},{"eventCall":{"arguments":[{"id":10256,"name":"_previousStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"104445:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},{"id":10257,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"104462:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},{"id":10258,"name":"nowTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10195,"src":"104473:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10255,"name":"MissionStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8497,"src":"104424:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Status_$5778_$_t_enum$_Status_$5778_$_t_uint256_$returns$__$","typeString":"function (enum Status,enum Status,uint256)"}},"id":10259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"104424:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10260,"nodeType":"EmitStatement","src":"104419:60:11"},{"expression":{"id":10263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10261,"name":"_previousStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"104524:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10262,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"104542:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"104524:27:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"id":10264,"nodeType":"ExpressionStatement","src":"104524:27:11"}]},"documentation":{"id":10188,"nodeType":"StructuredDocumentation","src":"103283:121:11","text":" @dev Sets the status of the mission.\n @param newStatus The new status to set for the mission."},"id":10266,"implemented":true,"kind":"function","modifiers":[],"name":"_setStatus","nameLocation":"103419:10:11","nodeType":"FunctionDefinition","parameters":{"id":10192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10191,"mutability":"mutable","name":"newStatus","nameLocation":"103437:9:11","nodeType":"VariableDeclaration","scope":10266,"src":"103430:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"typeName":{"id":10190,"nodeType":"UserDefinedTypeName","pathNode":{"id":10189,"name":"Status","nameLocations":["103430:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":5778,"src":"103430:6:11"},"referencedDeclaration":5778,"src":"103430:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"visibility":"internal"}],"src":"103429:18:11"},"returnParameters":{"id":10193,"nodeType":"ParameterList","parameters":[],"src":"103459:0:11"},"scope":10581,"src":"103410:1232:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10407,"nodeType":"Block","src":"104981:2946:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10273,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"105000:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"105000:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10275,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"105024:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"105031:7:11","memberName":"Success","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"105024:14:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"105000:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10278,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"105042:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":10279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"105042:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10280,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"105066:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"105073:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"105066:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"105042:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"105000:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"104992:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"104992:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10285,"nodeType":"ExpressionStatement","src":"104992:88:11"},{"assignments":[10287],"declarations":[{"constant":false,"id":10287,"mutability":"mutable","name":"balance","nameLocation":"105128:7:11","nodeType":"VariableDeclaration","scope":10407,"src":"105120:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10286,"name":"uint256","nodeType":"ElementaryTypeName","src":"105120:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10293,"initialValue":{"expression":{"arguments":[{"id":10290,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"105146:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}],"id":10289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"105138:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10288,"name":"address","nodeType":"ElementaryTypeName","src":"105138:7:11","typeDescriptions":{}}},"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"105138:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"105152:7:11","memberName":"balance","nodeType":"MemberAccess","src":"105138:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"105120:39:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10295,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10287,"src":"105178:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105188:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"105178:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2066756e647320746f207769746864726177","id":10298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"105222:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""},"value":"No funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""}],"id":10294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"105170:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"105170:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10300,"nodeType":"ExpressionStatement","src":"105170:75:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10301,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"105315:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"105328:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"105315:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"105336:6:11","memberName":"length","nodeType":"MemberAccess","src":"105315:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105346:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"105315:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10312,"nodeType":"IfStatement","src":"105311:244:11","trueBody":{"id":10311,"nodeType":"Block","src":"105349:206:11","statements":[{"expression":{"arguments":[{"expression":{"id":10307,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"105429:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"105436:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"105429:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":10306,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"105418:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":10309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"105418:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10310,"nodeType":"ExpressionStatement","src":"105418:25:11"}]}},{"assignments":[10314],"declarations":[{"constant":false,"id":10314,"mutability":"mutable","name":"distributable","nameLocation":"105573:13:11","nodeType":"VariableDeclaration","scope":10407,"src":"105565:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10313,"name":"uint256","nodeType":"ElementaryTypeName","src":"105565:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10315,"nodeType":"VariableDeclarationStatement","src":"105565:21:11"},{"condition":{"id":10316,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10269,"src":"105601:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10342,"nodeType":"Block","src":"105776:613:11","statements":[{"assignments":[10323],"declarations":[{"constant":false,"id":10323,"mutability":"mutable","name":"unclaimable","nameLocation":"105799:11:11","nodeType":"VariableDeclaration","scope":10342,"src":"105791:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10322,"name":"uint256","nodeType":"ElementaryTypeName","src":"105791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":10324,"name":"_getTotalFailedRefunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10442,"src":"105813:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"105813:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"105791:46:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10327,"name":"unclaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10323,"src":"105942:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10328,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10287,"src":"105956:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"105942:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10335,"nodeType":"IfStatement","src":"105938:270:11","trueBody":{"id":10334,"nodeType":"Block","src":"105965:243:11","statements":[{"expression":{"id":10332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10330,"name":"unclaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10323,"src":"106094:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10331,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10287,"src":"106108:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"106094:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10333,"nodeType":"ExpressionStatement","src":"106094:21:11"}]}},{"expression":{"id":10340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10336,"name":"distributable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"106222:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10337,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10287,"src":"106238:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10338,"name":"unclaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10323,"src":"106248:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"106238:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"106222:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10341,"nodeType":"ExpressionStatement","src":"106222:37:11"}]},"id":10343,"nodeType":"IfStatement","src":"105597:792:11","trueBody":{"id":10321,"nodeType":"Block","src":"105608:162:11","statements":[{"expression":{"id":10319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10317,"name":"distributable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"105623:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10318,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10287,"src":"105639:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"105623:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10320,"nodeType":"ExpressionStatement","src":"105623:23:11"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10345,"name":"distributable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"106409:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"106425:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"106409:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2066756e647320746f207769746864726177","id":10348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"106453:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""},"value":"No funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""}],"id":10344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"106401:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"106401:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10350,"nodeType":"ExpressionStatement","src":"106401:75:11"},{"assignments":[10352],"declarations":[{"constant":false,"id":10352,"mutability":"mutable","name":"_ownerShare","nameLocation":"106586:11:11","nodeType":"VariableDeclaration","scope":10407,"src":"106578:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10351,"name":"uint256","nodeType":"ElementaryTypeName","src":"106578:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10359,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10353,"name":"distributable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"106601:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3235","id":10354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"106617:2:11","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"106601:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"106600:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"106623:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"106600:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"106578:48:11"},{"assignments":[10361],"declarations":[{"constant":false,"id":10361,"mutability":"mutable","name":"_factoryShare","nameLocation":"106752:13:11","nodeType":"VariableDeclaration","scope":10407,"src":"106744:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10360,"name":"uint256","nodeType":"ElementaryTypeName","src":"106744:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10365,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10362,"name":"distributable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"106768:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10363,"name":"_ownerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10352,"src":"106784:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"106768:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"106744:51:11"},{"assignments":[10367,null],"declarations":[{"constant":false,"id":10367,"mutability":"mutable","name":"ok","nameLocation":"106920:2:11","nodeType":"VariableDeclaration","scope":10407,"src":"106915:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10366,"name":"bool","nodeType":"ElementaryTypeName","src":"106915:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10379,"initialValue":{"arguments":[{"hexValue":"","id":10377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"106985:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10370,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"106936:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":10371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"106951:5:11","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":67,"src":"106936:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":10372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"106936:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"106928:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10368,"name":"address","nodeType":"ElementaryTypeName","src":"106928:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":10373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"106928:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"106960:4:11","memberName":"call","nodeType":"MemberAccess","src":"106928:36:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10375,"name":"_ownerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10352,"src":"106972:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"106928:56:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"106928:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"106914:74:11"},{"expression":{"arguments":[{"id":10381,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10367,"src":"107092:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e6572207472616e73666572206661696c6564","id":10382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"107136:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d7d64dfcef8b7e14e2c26acaf8bd87307945e7aaeb053dbb4b5785f8e58aa46","typeString":"literal_string \"Owner transfer failed\""},"value":"Owner transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d7d64dfcef8b7e14e2c26acaf8bd87307945e7aaeb053dbb4b5785f8e58aa46","typeString":"literal_string \"Owner transfer failed\""}],"id":10380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"107084:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"107084:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10384,"nodeType":"ExpressionStatement","src":"107084:76:11"},{"expression":{"arguments":[{"expression":{"id":10390,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"107398:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"107411:11:11","memberName":"missionType","nodeType":"MemberAccess","referencedDeclaration":8652,"src":"107398:24:11","typeDescriptions":{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_MissionType_$5768","typeString":"enum MissionType"}],"expression":{"id":10385,"name":"missionFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"107228:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_MissionFactory_$8483","typeString":"contract MissionFactory"}},"id":10387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"107243:20:11","memberName":"registerMissionFunds","nodeType":"MemberAccess","referencedDeclaration":7143,"src":"107228:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_enum$_MissionType_$5768_$returns$__$","typeString":"function (enum MissionType) payable external"}},"id":10389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10388,"name":"_factoryShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10361,"src":"107272:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"107228:59:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_enum$_MissionType_$5768_$returns$__$value","typeString":"function (enum MissionType) payable external"}},"id":10392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"107228:293:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10393,"nodeType":"ExpressionStatement","src":"107228:293:11"},{"eventCall":{"arguments":[{"id":10395,"name":"_ownerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10352,"src":"107554:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10396,"name":"_factoryShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10361,"src":"107567:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10394,"name":"FundsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"107539:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":10397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"107539:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10398,"nodeType":"EmitStatement","src":"107534:47:11"},{"expression":{"id":10401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10399,"name":"ownerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8708,"src":"107670:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10400,"name":"_ownerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10352,"src":"107683:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"107670:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10402,"nodeType":"ExpressionStatement","src":"107670:24:11"},{"expression":{"id":10405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10403,"name":"factoryShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"107799:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10404,"name":"_factoryShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10361,"src":"107814:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"107799:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10406,"nodeType":"ExpressionStatement","src":"107799:28:11"}]},"documentation":{"id":10267,"nodeType":"StructuredDocumentation","src":"104650:276:11","text":" @notice Distributes remaining CRO after mission completion or failure.\n @dev Sends:\n      - 25% to factory owner\n      - 75% to MissionFactory (for future missions)\n @dev If `force = true`, also withdraws failed refund amounts."},"id":10408,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawFunds","nameLocation":"104941:14:11","nodeType":"FunctionDefinition","parameters":{"id":10270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10269,"mutability":"mutable","name":"force","nameLocation":"104961:5:11","nodeType":"VariableDeclaration","scope":10408,"src":"104956:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10268,"name":"bool","nodeType":"ElementaryTypeName","src":"104956:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"104955:12:11"},"returnParameters":{"id":10271,"nodeType":"ParameterList","parameters":[],"src":"104981:0:11"},"scope":10581,"src":"104932:2995:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10441,"nodeType":"Block","src":"108267:421:11","statements":[{"body":{"id":10439,"nodeType":"Block","src":"108336:345:11","statements":[{"assignments":[10427],"declarations":[{"constant":false,"id":10427,"mutability":"mutable","name":"player","nameLocation":"108418:6:11","nodeType":"VariableDeclaration","scope":10439,"src":"108410:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10426,"name":"address","nodeType":"ElementaryTypeName","src":"108410:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10432,"initialValue":{"baseExpression":{"expression":{"id":10428,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"108427:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"108440:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"108427:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10431,"indexExpression":{"id":10430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"108448:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"108427:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"108410:40:11"},{"expression":{"id":10437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10433,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10412,"src":"108533:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":10434,"name":"failedRefundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"108542:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10436,"indexExpression":{"id":10435,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10427,"src":"108562:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"108542:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"108533:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10438,"nodeType":"ExpressionStatement","src":"108533:36:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"108298:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":10419,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"108302:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"108315:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"108302:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"108323:6:11","memberName":"length","nodeType":"MemberAccess","src":"108302:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"108298:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10440,"initializationExpression":{"assignments":[10415],"declarations":[{"constant":false,"id":10415,"mutability":"mutable","name":"i","nameLocation":"108291:1:11","nodeType":"VariableDeclaration","scope":10440,"src":"108283:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10414,"name":"uint256","nodeType":"ElementaryTypeName","src":"108283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10417,"initialValue":{"hexValue":"30","id":10416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"108295:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"108283:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"108331:3:11","subExpression":{"id":10423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"108331:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10425,"nodeType":"ExpressionStatement","src":"108331:3:11"},"nodeType":"ForStatement","src":"108278:403:11"}]},"documentation":{"id":10409,"nodeType":"StructuredDocumentation","src":"107935:248:11","text":" @dev Returns the total amount of failed refunds for all players.\n This function iterates through all players and sums their failed refund amounts.\n @return total The total amount of failed refunds for all players."},"id":10442,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalFailedRefunds","nameLocation":"108198:22:11","nodeType":"FunctionDefinition","parameters":{"id":10410,"nodeType":"ParameterList","parameters":[],"src":"108220:2:11"},"returnParameters":{"id":10413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10412,"mutability":"mutable","name":"total","nameLocation":"108260:5:11","nodeType":"VariableDeclaration","scope":10442,"src":"108252:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10411,"name":"uint256","nodeType":"ElementaryTypeName","src":"108252:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108251:15:11"},"scope":10581,"src":"108189:499:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10579,"nodeType":"Block","src":"109063:3151:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"},"id":10451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10447,"name":"_getRealtimeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"109082:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_enum$_Status_$5778_$","typeString":"function () view returns (enum Status)"}},"id":10448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109082:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10449,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"109106:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"109113:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"109106:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}},"src":"109082:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696f6e206e6f7420696e204661696c656420737461747573","id":10452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"109138:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7514234103d819a25813664ac805821fcb29d9104a01e27b17b79adc259dad6d","typeString":"literal_string \"Mission not in Failed status\""},"value":"Mission not in Failed status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7514234103d819a25813664ac805821fcb29d9104a01e27b17b79adc259dad6d","typeString":"literal_string \"Mission not in Failed status\""}],"id":10446,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"109074:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109074:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10454,"nodeType":"ExpressionStatement","src":"109074:95:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10456,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"109233:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"109246:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"109233:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"109254:6:11","memberName":"length","nodeType":"MemberAccess","src":"109233:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"109263:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"109233:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20706c617965727320746f20726566756e64","id":10461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"109290:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_21b2a1345d378c1eea6aadc8149bf1332d6bcee1f241dfeab0a5c66588e233cf","typeString":"literal_string \"No players to refund\""},"value":"No players to refund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21b2a1345d378c1eea6aadc8149bf1332d6bcee1f241dfeab0a5c66588e233cf","typeString":"literal_string \"No players to refund\""}],"id":10455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"109225:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109225:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10463,"nodeType":"ExpressionStatement","src":"109225:88:11"},{"assignments":[10465],"declarations":[{"constant":false,"id":10465,"mutability":"mutable","name":"_force","nameLocation":"109381:6:11","nodeType":"VariableDeclaration","scope":10579,"src":"109376:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10464,"name":"bool","nodeType":"ElementaryTypeName","src":"109376:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10467,"initialValue":{"hexValue":"74727565","id":10466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"109390:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"109376:18:11"},{"body":{"id":10547,"nodeType":"Block","src":"109463:1527:11","statements":[{"assignments":[10481],"declarations":[{"constant":false,"id":10481,"mutability":"mutable","name":"player","nameLocation":"109486:6:11","nodeType":"VariableDeclaration","scope":10547,"src":"109478:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10480,"name":"address","nodeType":"ElementaryTypeName","src":"109478:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10486,"initialValue":{"baseExpression":{"expression":{"id":10482,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"109495:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"109508:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"109495:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10485,"indexExpression":{"id":10484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"109516:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"109495:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"109478:40:11"},{"condition":{"id":10490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"109621:17:11","subExpression":{"baseExpression":{"id":10487,"name":"refunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"109622:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10489,"indexExpression":{"id":10488,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"109631:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"109622:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10546,"nodeType":"IfStatement","src":"109617:1362:11","trueBody":{"id":10545,"nodeType":"Block","src":"109640:1339:11","statements":[{"assignments":[10492,null],"declarations":[{"constant":false,"id":10492,"mutability":"mutable","name":"ok","nameLocation":"109781:2:11","nodeType":"VariableDeclaration","scope":10545,"src":"109776:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10491,"name":"bool","nodeType":"ElementaryTypeName","src":"109776:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10503,"initialValue":{"arguments":[{"hexValue":"","id":10501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"109850:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":10495,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"109797:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"109789:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10493,"name":"address","nodeType":"ElementaryTypeName","src":"109789:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":10496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109789:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"109805:4:11","memberName":"call","nodeType":"MemberAccess","src":"109789:20:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":10498,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"109818:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"109831:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"109818:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"109789:60:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"109789:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"109775:78:11"},{"condition":{"id":10504,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10492,"src":"109947:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10543,"nodeType":"Block","src":"110476:488:11","statements":[{"expression":{"id":10531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10526,"name":"failedRefundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"110499:19:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10528,"indexExpression":{"id":10527,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"110519:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"110499:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":10529,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"110530:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"110543:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"110530:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"110499:60:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10532,"nodeType":"ExpressionStatement","src":"110499:60:11"},{"eventCall":{"arguments":[{"id":10534,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"110673:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10535,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"110681:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"110694:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"110681:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10533,"name":"RefundFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8533,"src":"110660:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110660:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10538,"nodeType":"EmitStatement","src":"110655:56:11"},{"expression":{"id":10541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10539,"name":"_force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10465,"src":"110807:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":10540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"110816:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"110807:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10542,"nodeType":"ExpressionStatement","src":"110807:14:11"}]},"id":10544,"nodeType":"IfStatement","src":"109943:1021:11","trueBody":{"id":10525,"nodeType":"Block","src":"109951:519:11","statements":[{"expression":{"id":10509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10505,"name":"refunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"109974:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10507,"indexExpression":{"id":10506,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"109983:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"109974:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"109993:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"109974:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10510,"nodeType":"ExpressionStatement","src":"109974:23:11"},{"expression":{"arguments":[{"id":10516,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"110172:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":10511,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"110138:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"110151:15:11","memberName":"refundedPlayers","nodeType":"MemberAccess","referencedDeclaration":8683,"src":"110138:28:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"110167:4:11","memberName":"push","nodeType":"MemberAccess","src":"110138:33:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":10517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110138:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10518,"nodeType":"ExpressionStatement","src":"110138:41:11"},{"eventCall":{"arguments":[{"id":10520,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"110320:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10521,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"110328:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"110341:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"110328:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10519,"name":"PlayerRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8521,"src":"110305:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"110305:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10524,"nodeType":"EmitStatement","src":"110300:58:11"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"109425:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":10473,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"109429:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"109442:7:11","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":8649,"src":"109429:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"109450:6:11","memberName":"length","nodeType":"MemberAccess","src":"109429:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"109425:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10548,"initializationExpression":{"assignments":[10469],"declarations":[{"constant":false,"id":10469,"mutability":"mutable","name":"i","nameLocation":"109418:1:11","nodeType":"VariableDeclaration","scope":10548,"src":"109410:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10468,"name":"uint256","nodeType":"ElementaryTypeName","src":"109410:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10471,"initialValue":{"hexValue":"30","id":10470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"109422:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"109410:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"109458:3:11","subExpression":{"id":10477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"109458:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10479,"nodeType":"ExpressionStatement","src":"109458:3:11"},"nodeType":"ForStatement","src":"109405:1585:11"},{"expression":{"arguments":[{"expression":{"id":10550,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"111011:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$5778_$","typeString":"type(enum Status)"}},"id":10551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"111018:6:11","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":5777,"src":"111011:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$5778","typeString":"enum Status"}],"id":10549,"name":"_setStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10266,"src":"111000:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Status_$5778_$returns$__$","typeString":"function (enum Status)"}},"id":10552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"111000:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10553,"nodeType":"ExpressionStatement","src":"111000:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10556,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"111161:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Mission_$10581","typeString":"contract Mission"}],"id":10555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"111153:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10554,"name":"address","nodeType":"ElementaryTypeName","src":"111153:7:11","typeDescriptions":{}}},"id":10557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"111153:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"111167:7:11","memberName":"balance","nodeType":"MemberAccess","src":"111153:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111177:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"111153:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10566,"nodeType":"IfStatement","src":"111149:322:11","trueBody":{"id":10565,"nodeType":"Block","src":"111180:291:11","statements":[{"expression":{"arguments":[{"id":10562,"name":"_force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10465,"src":"111330:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10561,"name":"_withdrawFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"111315:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":10563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"111315:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10564,"nodeType":"ExpressionStatement","src":"111315:22:11"}]}},{"eventCall":{"arguments":[{"expression":{"expression":{"id":10568,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"111516:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"111529:15:11","memberName":"refundedPlayers","nodeType":"MemberAccess","referencedDeclaration":8683,"src":"111516:28:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"111545:6:11","memberName":"length","nodeType":"MemberAccess","src":"111516:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10571,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"111691:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"111704:16:11","memberName":"enrollmentAmount","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"111691:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10573,"name":"_missionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"111870:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MissionData_$8686_storage","typeString":"struct Mission.MissionData storage ref"}},"id":10574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"111883:15:11","memberName":"refundedPlayers","nodeType":"MemberAccess","referencedDeclaration":8683,"src":"111870:28:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},{"expression":{"id":10575,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"112043:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"112049:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"112043:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10567,"name":"MissionRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"111486:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address[] memory,uint256)"}},"id":10577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"111486:720:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10578,"nodeType":"EmitStatement","src":"111481:725:11"}]},"documentation":{"id":10443,"nodeType":"StructuredDocumentation","src":"108696:312:11","text":" @dev Refunds players if the mission fails.\n This function is internal and can only be called when the mission is in Failed status.\n It ensures that the mission has ended and that the enrollment period has passed.\n It refunds all enrolled players their enrollment amount."},"id":10580,"implemented":true,"kind":"function","modifiers":[],"name":"_refundPlayers","nameLocation":"109023:14:11","nodeType":"FunctionDefinition","parameters":{"id":10444,"nodeType":"ParameterList","parameters":[],"src":"109037:2:11"},"returnParameters":{"id":10445,"nodeType":"ParameterList","parameters":[],"src":"109063:0:11"},"scope":10581,"src":"109014:3200:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":10582,"src":"62299:49920:11","usedErrors":[13,18,763,8565,8571,8575,8581,8583,8587,8591,8595,8601,8603,8605,8607,8609,8617,8619],"usedEvents":[24,8497,8505,8515,8521,8527,8533,8544,8553,8559]}],"src":"3720:108499:11"},"id":11}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[{"inputs":[],"name":"CloneArgumentsTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fb4be862ae57d3dbacb358ce49bd9955518de863d46ed401d00365c354254a5964736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTSTATICCALL 0x4B 0xE8 PUSH3 0xAE57D3 0xDB 0xAC 0xB3 PC 0xCE BLOBHASH 0xBD SWAP10 SSTORE MLOAD DUP14 0xE8 PUSH4 0xD46ED401 0xD0 SUB PUSH6 0xC354254A5964 PUSH20 0x6F6C634300081E00330000000000000000000000 ","sourceMap":"817:13703:1:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fb4be862ae57d3dbacb358ce49bd9955518de863d46ed401d00365c354254a5964736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTSTATICCALL 0x4B 0xE8 PUSH3 0xAE57D3 0xDB 0xAC 0xB3 PC 0xCE BLOBHASH 0xBD SWAP10 SSTORE MLOAD DUP14 0xE8 PUSH4 0xD46ED401 0xD0 SUB PUSH6 0xC354254A5964 PUSH20 0x6F6C634300081E00330000000000000000000000 ","sourceMap":"817:13703:1:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200819c01ae520be2ab83a68e31bbc5480f8f8e0156279c96d6d3521c80fc5c03064736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD NOT 0xC0 BYTE JUMPF 0x20BE 0x2A 0xB8 GASPRICE PUSH9 0xE31BBC5480F8F8E015 PUSH3 0x79C96D PUSH14 0x3521C80FC5C03064736F6C634300 ADDMOD 0x1E STOP CALLER ","sourceMap":"533:3932:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200819c01ae520be2ab83a68e31bbc5480f8f8e0156279c96d6d3521c80fc5c03064736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD NOT 0xC0 BYTE JUMPF 0x20BE 0x2A 0xB8 GASPRICE PUSH9 0xE31BBC5480F8F8E015 PUSH3 0x79C96D PUSH14 0x3521C80FC5C03064736F6C634300 ADDMOD 0x1E STOP CALLER ","sourceMap":"533:3932:3:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207c5db019746024f1c38bf6e6046fbe169c7c88bee63eabe8f3c83ef0f58cda6e64736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x5DB019746024F1C38BF6E6046FBE169C7C88BEE63EABE8F3C83EF0F58C 0xDA PUSH15 0x64736F6C634300081E003300000000 ","sourceMap":"411:484:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207c5db019746024f1c38bf6e6046fbe169c7c88bee63eabe8f3c83ef0f58cda6e64736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x5DB019746024F1C38BF6E6046FBE169C7C88BEE63EABE8F3C83EF0F58C 0xDA PUSH15 0x64736F6C634300081E003300000000 ","sourceMap":"411:484:4:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c95ff2bc1e22cfb1354c1671a55ff9b00bc442da36131fcdb31fd7bf69bbbe2f64736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH0 CALLCODE 0xBC 0x1E 0x22 0xCF 0xB1 CALLDATALOAD 0x4C AND PUSH18 0xA55FF9B00BC442DA36131FCDB31FD7BF69BB 0xBE 0x2F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"657:1315:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c95ff2bc1e22cfb1354c1671a55ff9b00bc442da36131fcdb31fd7bf69bbbe2f64736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH0 CALLCODE 0xBC 0x1E 0x22 0xCF 0xB1 CALLDATALOAD 0x4C AND PUSH18 0xA55FF9B00BC442DA36131FCDB31FD7BF69BB 0xBE 0x2F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"657:1315:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122076667ad546fa2d835b26266a6d57e4577df3417fc998f6e0d1aab071648f6b0264736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x667AD546FA2D835B26266A6D57E4577DF3417FC998F6E0 DATALOADN 0xAAB0 PUSH18 0x648F6B0264736F6C634300081E0033000000 ","sourceMap":"297:18982:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122076667ad546fa2d835b26266a6d57e4577df3417fc998f6e0d1aab071648f6b0264736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x667AD546FA2D835B26266A6D57E4577DF3417FC998F6E0 DATALOADN 0xAAB0 PUSH18 0x648F6B0264736F6C634300081E0033000000 ","sourceMap":"297:18982:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ac5e85d6b0cb76aa7a00ba4ed693dd9acaa070da009eb4fbfd3d2081759c980364736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC MCOPY DUP6 0xD6 0xB0 0xCB PUSH23 0xAA7A00BA4ED693DD9ACAA070DA009EB4FBFD3D2081759C SWAP9 SUB PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"281:31863:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ac5e85d6b0cb76aa7a00ba4ed693dd9acaa070da009eb4fbfd3d2081759c980364736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC MCOPY DUP6 0xD6 0xB0 0xCB PUSH23 0xAA7A00BA4ED693DD9ACAA070DA009EB4FBFD3D2081759C SWAP9 SUB PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"281:31863:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220be67acc701e1731411757f86e5f9d2fb46cff030d69ea4eed04a54ca11a337c764736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH8 0xACC701E173141175 PUSH32 0x86E5F9D2FB46CFF030D69EA4EED04A54CA11A337C764736F6C634300081E0033 ","sourceMap":"769:34173:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220be67acc701e1731411757f86e5f9d2fb46cff030d69ea4eed04a54ca11a337c764736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH8 0xACC701E173141175 PUSH32 0x86E5F9D2FB46CFF030D69EA4EED04A54CA11A337C764736F6C634300081E0033 ","sourceMap":"769:34173:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202e40f2697a2902fd479e52dfb8002e8bf7fd5424d619a3263db773cee736ff2764736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E BLOCKHASH CALLCODE PUSH10 0x7A2902FD479E52DFB800 0x2E DUP12 0xF7 REVERT SLOAD 0x24 0xD6 NOT LOG3 0x26 RETURNDATASIZE 0xB7 PUSH20 0xCEE736FF2764736F6C634300081E003300000000 ","sourceMap":"258:2354:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202e40f2697a2902fd479e52dfb8002e8bf7fd5424d619a3263db773cee736ff2764736f6c634300081e0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E BLOCKHASH CALLCODE PUSH10 0x7A2902FD479E52DFB800 0x2E DUP12 0xF7 REVERT SLOAD 0x24 0xD6 NOT LOG3 0x26 RETURNDATASIZE 0xB7 PUSH20 0xCEE736FF2764736F6C634300081E003300000000 ","sourceMap":"258:2354:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MissionFactory.sol":{"Mission":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AllRoundsDone","type":"error"},{"inputs":[],"name":"AlreadyJoined","type":"error"},{"inputs":[],"name":"AlreadyWon","type":"error"},{"inputs":[],"name":"ContractsNotAllowed","type":"error"},{"inputs":[{"internalType":"uint256","name":"secondsLeft","type":"uint256"}],"name":"Cooldown","type":"error"},{"inputs":[{"internalType":"uint256","name":"nowTs","type":"uint256"},{"internalType":"uint256","name":"endTs","type":"uint256"}],"name":"EnrollmentClosed","type":"error"},{"inputs":[{"internalType":"uint256","name":"nowTs","type":"uint256"},{"internalType":"uint256","name":"startTs","type":"uint256"}],"name":"EnrollmentNotStarted","type":"error"},{"inputs":[{"internalType":"uint8","name":"maxPlayers","type":"uint8"}],"name":"MaxPlayers","type":"error"},{"inputs":[],"name":"MissionEnded","type":"error"},{"inputs":[{"internalType":"uint256","name":"secondsLeft","type":"uint256"}],"name":"MonthlyLimit","type":"error"},{"inputs":[{"internalType":"uint256","name":"nowTs","type":"uint256"},{"internalType":"uint256","name":"missionStart","type":"uint256"}],"name":"NotActive","type":"error"},{"inputs":[],"name":"NotJoined","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"PayoutFailed","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"secondsLeft","type":"uint256"}],"name":"WeeklyLimit","type":"error"},{"inputs":[{"internalType":"uint256","name":"expected","type":"uint256"},{"internalType":"uint256","name":"sent","type":"uint256"}],"name":"WrongEntryFee","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"ownerAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"factoryAmount","type":"uint256"}],"name":"FundsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"enum MissionType","name":"missionType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MissionInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nrOfPlayers","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address[]","name":"player","type":"address[]"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MissionRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"enum Status","name":"previousStatus","type":"uint8"},{"indexed":true,"internalType":"enum Status","name":"newStatus","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MissionStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalPlayers","type":"uint256"}],"name":"PlayerEnrolled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PlayerRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"croCurrent","type":"uint256"}],"name":"PotIncreased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RefundFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint8","name":"roundNumber","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"payout","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"croRemaining","type":"uint256"}],"name":"RoundCalled","type":"event"},{"inputs":[],"name":"callRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkMissionStartCondition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentProgressPct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enrollPlayer","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"enrolled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factoryShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"failedRefundAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"forceFinalizeMission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFailedRefundPlayers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMissionData","outputs":[{"components":[{"internalType":"address[]","name":"players","type":"address[]"},{"internalType":"enum MissionType","name":"missionType","type":"uint8"},{"internalType":"uint256","name":"enrollmentStart","type":"uint256"},{"internalType":"uint256","name":"enrollmentEnd","type":"uint256"},{"internalType":"uint256","name":"enrollmentAmount","type":"uint256"},{"internalType":"uint8","name":"enrollmentMinPlayers","type":"uint8"},{"internalType":"uint8","name":"enrollmentMaxPlayers","type":"uint8"},{"internalType":"uint256","name":"missionStart","type":"uint256"},{"internalType":"uint256","name":"missionEnd","type":"uint256"},{"internalType":"uint8","name":"missionRounds","type":"uint8"},{"internalType":"uint8","name":"roundCount","type":"uint8"},{"internalType":"uint256","name":"croStart","type":"uint256"},{"internalType":"uint256","name":"croCurrent","type":"uint256"},{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"amountWon","type":"uint256"}],"internalType":"struct Mission.PlayersWon[]","name":"playersWon","type":"tuple[]"},{"internalType":"uint256","name":"pauseTimestamp","type":"uint256"},{"internalType":"address[]","name":"refundedPlayers","type":"address[]"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct Mission.MissionData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPlayerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRealtimeStatus","outputs":[{"internalType":"enum Status","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWinners","outputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"amountWon","type":"uint256"}],"internalType":"struct Mission.PlayersWon[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasWon","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"increasePot","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_missionFactory","type":"address"},{"internalType":"enum MissionType","name":"_missionType","type":"uint8"},{"internalType":"uint256","name":"_enrollmentStart","type":"uint256"},{"internalType":"uint256","name":"_enrollmentEnd","type":"uint256"},{"internalType":"uint256","name":"_enrollmentAmount","type":"uint256"},{"internalType":"uint8","name":"_enrollmentMinPlayers","type":"uint8"},{"internalType":"uint8","name":"_enrollmentMaxPlayers","type":"uint8"},{"internalType":"uint256","name":"_missionStart","type":"uint256"},{"internalType":"uint256","name":"_missionEnd","type":"uint256"},{"internalType":"uint8","name":"_missionRounds","type":"uint8"},{"internalType":"string","name":"_name","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"isArming","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isFinalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isPlayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"missionFactory","outputs":[{"internalType":"contract MissionFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"missionStartConditionChecked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"pendingPayout","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"playerState","outputs":[{"internalType":"bool","name":"joined","type":"bool"},{"internalType":"bool","name":"won","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundPlayers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"refunded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"remainingRounds","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"secondsUntilNextRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"wasRefunded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346083573315606d5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560ff196009541660095561329b90816100898239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081623e16a514611ebd5750806309c95e1014611e7357806310eb0e0e14611e345780631212484814611d0357806324600fc314611c49578063268b2b5114611c1b578063293c221314611bf85780635407441f14611bdd5780635e83e15c146116b757806368c6ba211461168f578063715018a6146116355780637475a4cb1461128a5780637ce17de414610ee95780637cf61b6914610d5a5780638d4e408314610d0f5780638da5cb5b14610ce85780638f1c315114610cca578063987c543a1461084257806398bdae4314610788578063a52b2b8814610749578063a7e22a3e14610723578063ad1ca6bf14610662578063b2a4a5d214610629578063c033a490146105ea578063c2e52206146105cc578063dd1121f614610598578063df15c37e146104b1578063e6810a501461048d578063eb2bab771461027d578063f2fde38b1461022c578063fa4cf5a114610203578063fb84e12f146101e05763fcca0c841461018b57600080fd5b346101dd5760203660031901126101dd5760409060ff826001600160a01b036101b2611ed9565b1692838152600360205282828220541693815260046020522054168251911515825215156020820152f35b80fd5b50346101dd57806003193601126101dd5760206101fb61270e565b604051908152f35b50346101dd57806003193601126101dd576002546040516001600160a01b039091168152602090f35b50346101dd5760203660031901126101dd57610246611ed9565b61024e612d2b565b6001600160a01b038116156102695761026690612ce4565b80f35b631e4fbdf760e01b82526004829052602482fd5b50806003193601126101dd5734156104585760018060a01b03600254168033149081156103d9575b5080156103c6575b15610375576102ba612777565b6008811015610361576003111561031c576102d73460135461229c565b6013557f7272b264c9ef2a1e8e9303944736f4977b14a5761227b7b9869fecaa60f8938760406103093460145461229c565b806014558151903482526020820152a180f35b60405162461bcd60e51b815260206004820152601960248201527f4d697373696f6e207061737365642061637469766174696f6e000000000000006044820152606490fd5b634e487b7160e01b82526021600452602482fd5b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920666163746f7279206f7220617574686f72697a65642063616e20666044820152621d5b9960ea1b6064820152608490fd5b5080546001600160a01b031633146102ad565b60405163b918161160e01b81523360048201529150602090829060249082905afa90811561044d57829161040f575b50386102a5565b90506020813d602011610445575b8161042a60209383612063565b810103126104415761043b90612085565b38610408565b5080fd5b3d915061041d565b6040513d84823e3d90fd5b60405162461bcd60e51b815260206004820152600d60248201526c139bc8199d5b991cc81cd95b9d609a1b6044820152606490fd5b50346101dd5760203660031901126101dd5760206101fb6104ac611ed9565b612600565b50346101dd57806003193601126101dd576104ca612777565b600881101561036157600614908115610566575b5015610507576105036104ef612412565b604051918291602083526020830190611f4c565b0390f35b60405162461bcd60e51b815260206004820152603160248201527f4d697373696f6e206973206e6f7420696e2053756363657373206f7220506172604482015270746c79537563636573732073746174757360781b6064820152608490fd5b9050610570612777565b9060088210156105845750600514386104de565b634e487b7160e01b81526021600452602490fd5b50346101dd57806003193601126101dd57600d544211806105c1575b6020906040519015158152f35b5060105442106105b4565b50346101dd57806003193601126101dd576020600a54604051908152f35b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03610615611ed9565b168152600584522054166040519015158152f35b50346101dd5760203660031901126101dd576020906040906001600160a01b03610651611ed9565b168152600683522054604051908152f35b50346101dd57806003193601126101dd5761067b612755565b80546001600160a01b0316331480156106a7575b61069890612092565b6106a06124e6565b6001805580f35b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d5782906106e8575b905061068f565b506020813d60201161071b575b8161070260209383612063565b810103126104415761071661069891612085565b6106e1565b3d91506106f5565b50346101dd57806003193601126101dd57602061073e61249b565b60ff60405191168152f35b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03610774611ed9565b168152600484522054166040519015158152f35b50346101dd57806003193601126101dd576107a1612755565b80546001600160a01b0316331480156107c6575b6107be90612092565b6106a0612d54565b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d578290610807575b90506107b5565b506020813d60201161083a575b8161082160209383612063565b81010312610441576108356107be91612085565b610800565b3d9150610814565b50806003193601126101dd57610856612755565b333b610cbc57600c54804210610ca65750600d54804211610c905750600a5460ff600f5460081c1680911015610c7e5750600e54803403610c685750338152600360205260ff604082205416610c5a5760025460408051634c0252c360e11b81523360048201526001600160a01b0390921692919081602481865afa90811561044d5782908392610c0c575b5015610b045750600a54600160401b811015610af05780600161090a9201600a55600a61215b565b81549060031b9033821b9160018060a01b03901b1916179055338152600360205260408120600160ff198254161790556109463460135461229c565b6013556109553460145461229c565b60145580600181610ae3575b8015610ad6575b8015610ac9575b610a66575b6105845760195460ff8160081c16906008821015610a50576101009060016000936000805160206132268339815191526020604051428152a361ff0019161760195560025481906001600160a01b0316803b15610a4d5781809160246040518095819363c17f9e5960e01b83523360048401525af18015610a4057610a30575b600a546040519034825260208201527fbedd10d90b8962eb521114c7e2b49019403d371ffa1e46afbda7a3f1fde8f06f60403392a26001805580f35b610a3991612063565b81816109f4565b50604051903d90823e3d90fd5b50fd5b634e487b7160e01b600052602160045260246000fd5b506002546001600160a01b0316803b156104415760405163d8d6e8ff60e01b815260016004820152829182908290602490829084905af190811561044d578291610ab2575b5050610974565b81610abc91612063565b610ac7578083610aab565bfd5b506105845780600061096f565b5061058457806000610968565b5061058457806000610961565b634e487b7160e01b82526041600452602482fd5b6024926003821015610bf957602091600103610b8c576040516377f855c960e11b815233600482015293849182905afa8015610a40578190610b54575b631b62787960e31b825260045260249150fd5b506020823d602011610b84575b81610b6e60209383612063565b81010312610b7f5760249151610b41565b600080fd5b3d9150610b61565b604051631b8093b160e11b815233600482015293849182905afa8015610a40578190610bc6575b63147ce66f60e31b825260045260249150fd5b506020823d602011610bf1575b81610be060209383612063565b81010312610b7f5760249151610bb3565b3d9150610bd3565b5050634e487b7160e01b81526021600452fd5b9150506040813d604011610c52575b81610c2860409383612063565b81010312610441576020610c3b82612085565b910151906003821015610c4e57386108e2565b8280fd5b3d9150610c1b565b621d934160e11b8152600490fd5b6354d7a6b360e01b825260045234602452604490fd5b63647bcfa160e01b8252600452602490fd5b63166450c960e31b825242600452602452604490fd5b634cd01efb60e11b825242600452602452604490fd5b628b531560e01b8152600490fd5b50346101dd57806003193601126101dd576020600754604051908152f35b50346101dd57806003193601126101dd57546040516001600160a01b039091168152602090f35b50346101dd57806003193601126101dd57610d28612777565b9060088210156105845781600660209314918215610d4d575b50506040519015158152f35b6007925050143880610d41565b50346101dd57806003193601126101dd57610d73612777565b6008811015610361576007610d8891146120de565b600a5481805b828110610ea15750610db8610da282612317565b91610db06040519384612063565b808352612317565b602082019290601f190136843783845b828110610e1d5750505090604051928392602084019060208552518091526040840192915b818110610dfb575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610ded565b610e268161212a565b905460039190911b1c6001600160a01b0316865260066020526040862054610e51575b600101610dc8565b610e5a8161212a565b905460039190911b1c6001600160a01b0316610e758361248c565b928551811015610e8d5760051b850160200152610e49565b634e487b7160e01b88526032600452602488fd5b610eaa8161212a565b905460039190911b1c6001600160a01b0316845260066020526040842054610ed5575b600101610d8e565b90610ee160019161248c565b919050610ecd565b50346101dd57806003193601126101dd576060610200604051610f0b81612046565b82815283602082015283604082015283838201528360808201528360a08201528360c08201528360e08201528361010082015283610120820152836101408201528361016082015283610180820152826101a0820152836101c0820152826101e08201520152604051610f7d81612046565b604051600a548082528160208101600a86526020862092865b818110611268575050610fab92500382612063565b815260ff600b54166007811015611254576020820152600c546040820152600d546060820152600e54608082015260ff600f5481811660a084015260081c1660c082015260105460e082015260115461010082015260ff60125481811661012084015260081c16610140820152601354610160820152601454610180820152611032612412565b6101a08201526016546101c08201526040516017548082528160208101601786526020862092865b81811061123257505061106f92500382612063565b6101e08201526040516018548361108582612359565b808452916001811690811561120a57506001146111c5575b50506110ae81610503940382612063565b610200820152604051918291602083526102006111b061118e6110df84516102206020890152610240880190611f02565b6110f160208601516040890190611f3f565b6040850151606088015260608501516080880152608085015160a088015260ff60a08601511660c088015260ff60c08601511660e088015260e085015161010088015261010085015161012088015260ff6101208601511661014088015260ff610140860151166101608801526101608501516101808801526101808501516101a08801526101a0850151601f19888303016101c0890152611f4c565b6101c08401516101e08701526101e0840151601f198783030184880152611f02565b910151838203601f1901610220850152611f95565b601881529093506000805160206132468339815191525b8482106111f45750810160200192506110ae8161109d565b60018160209254838587010152019101906111dc565b610503965084925060209150926110ae9360ff191682840152151560051b820101945061109d565b84546001600160a01b031683526001948501948694506020909301920161105a565b634e487b7160e01b83526021600452602483fd5b84546001600160a01b0316835260019485019486945060209093019201610f96565b50346101dd57806003193601126101dd576112a3612755565b6112ab612777565b600881101561036157600481146115d957600381106115c0576003106115b157338152600460205260ff6040822054166115a257338152600360205260ff604082205416156115935760125460ff8160081c169060ff81168210156115845760105461131781426122a9565b90606482029180830460641490151715611568579061133b611341926011546122a9565b90612393565b601554801561157c576000198101908111611568576113616001916123b3565b500154905b6064820291808304606414901517156115685760649161139661139b926113906013548094612393565b906122a9565b61232f565b04916113a9836014546122a9565b60145560ff811461155457600161ff00910160081b169061ff00191617601255338252600460205260408220600160ff198254161790556040516113ec81612014565b338152816020820152601554600160401b8110156115405780600161141492016015556123b3565b61152c57815181546001600160a01b0319166001600160a01b03919091161781556020909101516001909101558180808084335af16114516123d2565b90156114f8575060ff601254818160081c16809360145460405191825260208201527fbbdd894f5e6d754c18172761a1a461095c26de58905e706a8c33657573d4067260403392a316036114af576114a761287a565b6106a0612a0b565b5060004260165560195460ff8160081c1690600882101561125457826004610400936000805160206132268339815191526020604051428152a35061ff001916176019556106a0565b9061152860405192839263d086db4360e01b84523360048501526024840152606060448401526064830190611f95565b0390fd5b634e487b7160e01b84526004849052602484fd5b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b84526011600452602484fd5b634e487b7160e01b85526011600452602485fd5b508390611366565b6321b94f7b60e21b8352600483fd5b63c394a43360e01b8152600490fd5b6302ab8f8960e11b8152600490fd5b630d6a05df60e41b8152600490fd5b6010546316f5e3b760e21b835242600452602452604482fd5b60248260125460ff806115f0818460081c16612274565b921691161460001461162a57611618603c5b61161361ffff42921660165461229c565b6122a9565b600162269d7960e21b03198252600452fd5b61161861012c611602565b50346101dd57806003193601126101dd5761164e612d2b565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101dd57806003193601126101dd576105036116ab612777565b60405191829182611eef565b506101803660031901126101dd576116cd611ed9565b6024356001600160a01b0381169190829003610c4e57604435916007831015611bd95760c4359060ff8216809203611bd55760e43560ff81168103611bd157610144359060ff8216809203611bcd57610164359367ffffffffffffffff8511611bc95736602386011215611bc95784600401359367ffffffffffffffff8511611bc5573660248688010111611bc557611764612755565b60195460ff8116611b8a5760ff191660011760195561178287612ce4565b6bffffffffffffffffffffffff60a01b600254161760025560ff19600b541660ff881617600b55606435600c55608435600d5560a435600e5561ff00600f549260081b169161ffff19161717600f55610104356010556101243560115561ffff1960125416176012553460135534601455846016556020916040516118078482612063565b8681528636813780519067ffffffffffffffff8211611ae757600160401b8211611ae7578490600a5483600a55808410611b36575b5001600a8852875b828110611afb5750505060405161185b8482612063565b8681528690600160401b8211611ae757849060155483601555808410611a63575b5001601588526000805160206132068339815191528589925b848410611a255750505050506118ac601854612359565b601f81116119c5575b508590601f831160011461192d577fe9597995b7a2af444cc28b2b776b88b1253d701282a9bcf902d4f59750df7c5793929187918361191f575b50508160011b916000199060031b1c1916176018555b6040514281526001600160a01b0390931692a36001805580f35b6024925001013538806118ef565b6018875260008051602061324683398151915291601f198416885b8181106119ab57509160019391857fe9597995b7a2af444cc28b2b776b88b1253d701282a9bcf902d4f59750df7c579796941061198e575b505050811b01601855611905565b0160240135600019600384901b60f8161c19169055388080611980565b919386600181926024888801013581550195019201611948565b611a099060188852601f840160051c6000805160206132468339815191520190858510611a0f575b601f0160051c6000805160206132468339815191520190612342565b386118b5565b60008051602061324683398151915291506119ed565b8051805184546001600160a01b0319166001600160a01b03919091161784556020015160018481019190915591600291019201920191908690611895565b9091506001600160ff1b0381168103611ad3576001600160ff1b0383168303611ad35790859160011b600080516020613206833981519152018360011b600080516020613206833981519152015b818110611abe575061187c565b8a8155600181018b9055879350600201611ab1565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b88526041600452602488fd5b81516001600160a01b03167fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a882015590850190600101611844565b611b84907fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801847fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801612342565b3861183c565b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b8880fd5b8780fd5b8680fd5b8580fd5b8480fd5b8380fd5b50346101dd57806003193601126101dd5760206101fb6122b6565b50346101dd57806003193601126101dd57602060ff600954166040519015158152f35b50346101dd5760203660031901126101dd576020611c3f611c3a611ed9565b612173565b6040519015158152f35b50346101dd57806003193601126101dd57611c62612755565b80546001600160a01b031633148015611c87575b611c7f90612092565b6106a0612c82565b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d578290611cc8575b9050611c76565b506020813d602011611cfb575b81611ce260209383612063565b8101031261044157611cf6611c7f91612085565b611cc1565b3d9150611cd5565b50346101dd57806003193601126101dd5780546001600160a01b031633148015611db8575b611d3190612092565b611d39612755565b611d41612777565b6008811015610361576005148015611d9e575b15611d61576114a761287a565b60405162461bcd60e51b8152602060048201526015602482015274135a5cdcda5bdb881b9bdd08195b991959081e595d605a1b6044820152606490fd5b50611da7612777565b600881101561036157600614611d54565b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d578290611df9575b9050611d28565b506020813d602011611e2c575b81611e1360209383612063565b8101031261044157611e27611d3191612085565b611df2565b3d9150611e06565b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03611e5f611ed9565b168152600384522054166040519015158152f35b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03611e9e611ed9565b16611eaa811515611fd6565b8152600384522054166040519015158152f35b9050346104415781600319360112610441576020906008548152f35b600435906001600160a01b0382168203610b7f57565b919060208301926008821015610a505752565b906020808351928381520192019060005b818110611f205750505090565b82516001600160a01b0316845260209384019390920191600101611f13565b906007821015610a505752565b906020808351928381520192019060005b818110611f6a5750505090565b825180516001600160a01b031685526020908101518186015260409094019390920191600101611f5d565b919082519283825260005b848110611fc1575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201611fa0565b15611fdd57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b6040810190811067ffffffffffffffff82111761203057604052565b634e487b7160e01b600052604160045260246000fd5b610220810190811067ffffffffffffffff82111761203057604052565b90601f8019910116810190811067ffffffffffffffff82111761203057604052565b51908115158203610b7f57565b1561209957565b60405162461bcd60e51b815260206004820152601760248201527f4e6f74206f776e6572206f7220617574686f72697a65640000000000000000006044820152606490fd5b156120e557565b60405162461bcd60e51b815260206004820152601f60248201527f4d697373696f6e206973206e6f7420696e204661696c656420737461747573006044820152606490fd5b600a5481101561214557600a60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156121455760005260206000200190600090565b61217b612777565b6008811015610a5057600761219091146120de565b6001600160a01b03166121a4811515611fd6565b80600052600360205260ff604060002054161561223957601754908160005b8381106121d35750505050600090565b60008282101561222557601790527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c158101546001600160a01b0316831461221c576001016121c3565b50505050600190565b634e487b7160e01b81526032600452602490fd5b60405162461bcd60e51b8152602060048201526013602482015272141b185e595c881b9bdd08195b9c9bdb1b1959606a1b6044820152606490fd5b60ff60019116019060ff821161228657565b634e487b7160e01b600052601160045260246000fd5b9190820180921161228657565b9190820391821161228657565b6122be612777565b6008811015610a50576004036123125760125460ff806122e2818460081c16612274565b921691161460001461230757612304603c61161361ffff42921660165461229c565b90565b61230461012c611602565b600090565b67ffffffffffffffff81116120305760051b60200190565b8181029291811591840414171561228657565b81811061234d575050565b60008155600101612342565b90600182811c92168015612389575b602083101461237357565b634e487b7160e01b600052602260045260246000fd5b91607f1691612368565b811561239d570490565b634e487b7160e01b600052601260045260246000fd5b60155481101561214557601560005260206000209060011b0190600090565b3d1561240d573d9067ffffffffffffffff82116120305760405191612401601f8201601f191660200184612063565b82523d6000602084013e565b606090565b6015549061241f82612317565b9161242d6040519384612063565b80835260156000908152600080516020613206833981519152602085015b8383106124585750505050565b6002602060019260405161246b81612014565b848060a01b038654168152848601548382015281520192019201919061244b565b60001981146122865760010190565b6124a3612777565b6008811015610a5057600381149081156124db575b506124c257600090565b60125460ff808260081c1691160360ff81116122865790565b6004915014386124b8565b600d544211806125f5575b1561258a5760095460ff81166125455760ff1916600117600955600a541561253557600a5460ff600f54161161252357565b61252b612927565b612533612d54565b565b61253d612927565b612533612c82565b60405162461bcd60e51b815260206004820152601f60248201527f416c726561647920636865636b656420737461727420636f6e646974696f6e006044820152606490fd5b60405162461bcd60e51b815260206004820152603860248201527f4d697373696f6e206e6f7420696e2061726d696e672077696e646f772e20436160448201527f6c6c20726566756e64506c617965727320696e737465616400000000000000006064820152608490fd5b5060105442106124f1565b612608612777565b6008811015610a505760038114159081612702575b506126fc576001600160a01b031660008181526003602052604090205460ff16156126fc57600052600460205260ff60406000205416612312576010548042106126fc57601154804210156126f55761267682426122a9565b90606482029180830460641490151715612286576126979261133b916122a9565b601554600081156126ed57506000198101908111612286576126ba6001916123b3565b500154905b606482029180830460641490151715612286576064916113966126e9926113906013548094612393565b0490565b9050906126bf565b5050600090565b50600090565b6004915014153861261d565b6010548042106126fc576011548042101561274e5761272d82426122a9565b90606482029180830460641490151715612286576123049261133b916122a9565b5050606490565b600260015414612766576002600155565b633ee5aeb560e01b60005260046000fd5b60ff60195460081c166008811015610a5057600681148015612870575b6123045750600c54421061231257600d5442111561286b57600a5460ff600f541611612866576010544210612861576011544210156128375760125460ff808260081c169116808210156128305760165490816127f357505050600390565b60ff61280161281494612274565b16036128255761ffff603c5b169061229c565b42101561282057600490565b600390565b61ffff61012c61280d565b5050600690565b60125460ff8160081c1690811561285a5760ff161161285557600690565b600590565b5050600790565b600290565b600790565b600190565b5060078114612794565b6002546000906001600160a01b0316803b15610b7f5760405163d8d6e8ff60e01b815260066004820152906000908290602490829084905af1801561291b57612906575b5080610584575060195460ff8160081c16906008821015610a50576106009160066000916000805160206132268339815191526020604051428152a35061ff00191617601955565b6129139150600090612063565b6000386128be565b6040513d6000823e3d90fd5b6002546000906001600160a01b0316803b15610b7f5760405163d8d6e8ff60e01b815260076004820152906000908290602490829084905af1801561291b576129b3575b5080610584575060195460ff8160081c16906008821015610a50576107009160076000916000805160206132268339815191526020604051428152a35061ff00191617601955565b6129c09150600090612063565b60003861296b565b156129cf57565b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b600090612a16612777565b6008811015611254576006148015612c68575b15610441574791612a3b8315156129c8565b600a5415612c5b575b5060008081600a545b808210612c2257505083612a689293948211612c1a576122a9565b8015612a7481156129c8565b60198202908282046019141715612c06576064612a93910480926122a9565b600254604051638da5cb5b60e01b815291939190602090829060049082906001600160a01b03165afa90811561044d57829184918391612bbe575b50829182918291906001600160a01b03165af1612ae96123d2565b5015612b815760018060a01b036002541660ff600b5416813b15610c4e57612b2b6024849287604051958694859363a9bea78960e01b85526004850190611f3f565b5af1801561044d57612b71575b50507fd66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c460408051838152846020820152a1600755600855565b81612b7b91612063565b38612b38565b60405162461bcd60e51b815260206004820152601560248201527413dddb995c881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b925050506020813d602011612bfe575b81612bdb60209383612063565b8101031261044157516001600160a01b0381168103610441578190839082612ace565b3d9150612bce565b634e487b7160e01b83526011600452602483fd5b9050806122a9565b9091612c53600191612c338561212a565b848060a01b0391549060031b1c168652600660205260408620549061229c565b920190612a4d565b612c63612927565b612a44565b50612c71612777565b600881101561125457600714612a29565b612c8a612777565b6000906008811015610361576006148015612cca575b156101dd57478015612a748115612cb6816129c8565b600a546129c857612cc5612927565b6129c8565b50612cd3612777565b600881101561036157600714612ca0565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b6000546001600160a01b03163303612d3f57565b63118cdaa760e01b6000523360045260246000fd5b612d5c612777565b906000916008811015611254576007036131c057600a541561318457600190825b600a54811015612ec957612d908161212a565b905460039190911b1c6001600160a01b03168085526005602052604085205460ff1615612dc1575b50600101612d7d565b84808080600e54855af1612dd36123d2565b5015612e7457808552600560205260408520805460ff19166001179055601754600160401b811015612e605790612e1482600180959401601755601761215b565b81549060031b9083821b91868060a01b03901b19161790557f48d31f1c958cd44f1f83a52ae2dfaf61e88a1b82c07a6d5711a4abef60b6531e6020600e54604051908152a25b90612db8565b634e487b7160e01b86526041600452602486fd5b909250600e548185526006602052612e916040862091825461229c565b90557faf73b0b217208b61be286bbc37095bce7eb8b9ccf617244c2f0f154e8e04e3ff6020600e54604051908152a260018392612e5a565b509190612ed4612927565b47612f6d575b5060175490600e54906040518091829190601781527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15905b868110612f4b575050039020917fbb93c7c839bddd97272c8e974d54d30adfa3aa55df63a52f02b7192efd361a246020604051428152a4565b81546001600160a01b0316835284935060209092019160019182019101612f12565b612f75612777565b600881101561125457600614801561316a575b15610441574790612f9a8215156129c8565b600a541561315d575b1561311c575b8015612fb581156129c8565b60198202908282046019141715612c06576064612fd4910480926122a9565b600254604051638da5cb5b60e01b815291929190602090829060049082906001600160a01b03165afa9081156130c9578491839183916130d4575b50829182918291906001600160a01b03165af161302a6123d2565b5015612b815760018060a01b036002541660ff600b5416813b15611bd55761306c6024869286604051958694859363a9bea78960e01b85526004850190611f3f565b5af180156130c9576130b5575b507fd66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c460408051838152846020820152a160075560085538612eda565b836130c291949294612063565b9138613079565b6040513d86823e3d90fd5b925050506020813d602011613114575b816130f160209383612063565b81010312611bd957516001600160a01b0381168103611bd957839082908261300f565b3d91506130e4565b91908081600a545b8082106131445750508361313f9293948211612c1a576122a9565b612fa9565b9091613155600191612c338561212a565b920190613124565b613165612927565b612fa3565b50613173612777565b600881101561125457600714612f88565b60405162461bcd60e51b8152602060048201526014602482015273139bc81c1b185e595c9cc81d1bc81c99599d5b9960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d697373696f6e206e6f7420696e204661696c656420737461747573000000006044820152606490fdfe55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47539ba628632d48c45c7f562c07db20a44cf68423691d5d79b20f87ba84138aedfb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2ea2646970667358221220efc31a4e2975c1a7af59afe8b066451f2edc2019b188e579b95e2bc4c330536a64736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x83 JUMPI CALLER ISZERO PUSH1 0x6D JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE PUSH2 0x329B SWAP1 DUP2 PUSH2 0x89 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x3E16A5 EQ PUSH2 0x1EBD JUMPI POP DUP1 PUSH4 0x9C95E10 EQ PUSH2 0x1E73 JUMPI DUP1 PUSH4 0x10EB0E0E EQ PUSH2 0x1E34 JUMPI DUP1 PUSH4 0x12124848 EQ PUSH2 0x1D03 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x1C49 JUMPI DUP1 PUSH4 0x268B2B51 EQ PUSH2 0x1C1B JUMPI DUP1 PUSH4 0x293C2213 EQ PUSH2 0x1BF8 JUMPI DUP1 PUSH4 0x5407441F EQ PUSH2 0x1BDD JUMPI DUP1 PUSH4 0x5E83E15C EQ PUSH2 0x16B7 JUMPI DUP1 PUSH4 0x68C6BA21 EQ PUSH2 0x168F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1635 JUMPI DUP1 PUSH4 0x7475A4CB EQ PUSH2 0x128A JUMPI DUP1 PUSH4 0x7CE17DE4 EQ PUSH2 0xEE9 JUMPI DUP1 PUSH4 0x7CF61B69 EQ PUSH2 0xD5A JUMPI DUP1 PUSH4 0x8D4E4083 EQ PUSH2 0xD0F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCE8 JUMPI DUP1 PUSH4 0x8F1C3151 EQ PUSH2 0xCCA JUMPI DUP1 PUSH4 0x987C543A EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0x98BDAE43 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0xA52B2B88 EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0xA7E22A3E EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0xAD1CA6BF EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xB2A4A5D2 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xC033A490 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xC2E52206 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xDD1121F6 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xDF15C37E EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xE6810A50 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xEB2BAB77 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xFA4CF5A1 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xFB84E12F EQ PUSH2 0x1E0 JUMPI PUSH4 0xFCCA0C84 EQ PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x40 SWAP1 PUSH1 0xFF DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B2 PUSH2 0x1ED9 JUMP JUMPDEST AND SWAP3 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP3 DUP3 KECCAK256 SLOAD AND SWAP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE KECCAK256 SLOAD AND DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1FB PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x246 PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x269 JUMPI PUSH2 0x266 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI CALLVALUE ISZERO PUSH2 0x458 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND DUP1 CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x3D9 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x3C6 JUMPI JUMPDEST ISZERO PUSH2 0x375 JUMPI PUSH2 0x2BA PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x3 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x2D7 CALLVALUE PUSH1 0x13 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH32 0x7272B264C9EF2A1E8E9303944736F4977B14A5761227B7B9869FECAA60F89387 PUSH1 0x40 PUSH2 0x309 CALLVALUE PUSH1 0x14 SLOAD PUSH2 0x229C JUMP JUMPDEST DUP1 PUSH1 0x14 SSTORE DUP2 MLOAD SWAP1 CALLVALUE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E207061737365642061637469766174696F6E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F7279206F7220617574686F72697A65642063616E2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B99 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 POP PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP2 PUSH2 0x40F JUMPI JUMPDEST POP CODESIZE PUSH2 0x2A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x445 JUMPI JUMPDEST DUP2 PUSH2 0x42A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x43B SWAP1 PUSH2 0x2085 JUMP JUMPDEST CODESIZE PUSH2 0x408 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BC8199D5B991CC81CD95B9D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1FB PUSH2 0x4AC PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x2600 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x4CA PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x6 EQ SWAP1 DUP2 ISZERO PUSH2 0x566 JUMPI JUMPDEST POP ISZERO PUSH2 0x507 JUMPI PUSH2 0x503 PUSH2 0x4EF PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1F4C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206973206E6F7420696E2053756363657373206F7220506172 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x746C795375636365737320737461747573 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x570 PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x584 JUMPI POP PUSH1 0x5 EQ CODESIZE PUSH2 0x4DE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0xD SLOAD TIMESTAMP GT DUP1 PUSH2 0x5C1 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x10 SLOAD TIMESTAMP LT PUSH2 0x5B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x615 PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x651 PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x67B PUSH2 0x2755 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x6A7 JUMPI JUMPDEST PUSH2 0x698 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x6E8 JUMPI JUMPDEST SWAP1 POP PUSH2 0x68F JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x71B JUMPI JUMPDEST DUP2 PUSH2 0x702 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x716 PUSH2 0x698 SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x6E1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6F5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x73E PUSH2 0x249B JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x774 PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x7A1 PUSH2 0x2755 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x7C6 JUMPI JUMPDEST PUSH2 0x7BE SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x2D54 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x807 JUMPI JUMPDEST SWAP1 POP PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x83A JUMPI JUMPDEST DUP2 PUSH2 0x821 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x835 PUSH2 0x7BE SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x814 JUMP JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x856 PUSH2 0x2755 JUMP JUMPDEST CALLER EXTCODESIZE PUSH2 0xCBC JUMPI PUSH1 0xC SLOAD DUP1 TIMESTAMP LT PUSH2 0xCA6 JUMPI POP PUSH1 0xD SLOAD DUP1 TIMESTAMP GT PUSH2 0xC90 JUMPI POP PUSH1 0xA SLOAD PUSH1 0xFF PUSH1 0xF SLOAD PUSH1 0x8 SHR AND DUP1 SWAP2 LT ISZERO PUSH2 0xC7E JUMPI POP PUSH1 0xE SLOAD DUP1 CALLVALUE SUB PUSH2 0xC68 JUMPI POP CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND PUSH2 0xC5A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4C0252C3 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 SWAP1 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 DUP4 SWAP3 PUSH2 0xC0C JUMPI JUMPDEST POP ISZERO PUSH2 0xB04 JUMPI POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAF0 JUMPI DUP1 PUSH1 0x1 PUSH2 0x90A SWAP3 ADD PUSH1 0xA SSTORE PUSH1 0xA PUSH2 0x215B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 CALLER DUP3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x946 CALLVALUE PUSH1 0x13 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH2 0x955 CALLVALUE PUSH1 0x14 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x14 SSTORE DUP1 PUSH1 0x1 DUP2 PUSH2 0xAE3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAD6 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAC9 JUMPI JUMPDEST PUSH2 0xA66 JUMPI JUMPDEST PUSH2 0x584 JUMPI PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI PUSH2 0x100 SWAP1 PUSH1 0x1 PUSH1 0x0 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE PUSH1 0x2 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA4D JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xC17F9E59 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA30 JUMPI JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 CALLVALUE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xBEDD10D90B8962EB521114C7E2B49019403D371FFA1E46AFBDA7A3F1FDE8F06F PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xA39 SWAP2 PUSH2 0x2063 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x9F4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8D6E8FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP2 PUSH2 0xAB2 JUMPI JUMPDEST POP POP PUSH2 0x974 JUMP JUMPDEST DUP2 PUSH2 0xABC SWAP2 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0xAC7 JUMPI DUP1 DUP4 PUSH2 0xAAB JUMP JUMPDEST REVERT JUMPDEST POP PUSH2 0x584 JUMPI DUP1 PUSH1 0x0 PUSH2 0x96F JUMP JUMPDEST POP PUSH2 0x584 JUMPI DUP1 PUSH1 0x0 PUSH2 0x968 JUMP JUMPDEST POP PUSH2 0x584 JUMPI DUP1 PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x24 SWAP3 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SUB PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x77F855C9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0xA40 JUMPI DUP2 SWAP1 PUSH2 0xB54 JUMPI JUMPDEST PUSH4 0x1B627879 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB84 JUMPI JUMPDEST DUP2 PUSH2 0xB6E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB7F JUMPI PUSH1 0x24 SWAP2 MLOAD PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B8093B1 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0xA40 JUMPI DUP2 SWAP1 PUSH2 0xBC6 JUMPI JUMPDEST PUSH4 0x147CE66F PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBF1 JUMPI JUMPDEST DUP2 PUSH2 0xBE0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB7F JUMPI PUSH1 0x24 SWAP2 MLOAD PUSH2 0xBB3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD3 JUMP JUMPDEST POP POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xC52 JUMPI JUMPDEST DUP2 PUSH2 0xC28 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH1 0x20 PUSH2 0xC3B DUP3 PUSH2 0x2085 JUMP JUMPDEST SWAP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xC4E JUMPI CODESIZE PUSH2 0x8E2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC1B JUMP JUMPDEST PUSH3 0x1D9341 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x54D7A6B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 MSTORE CALLVALUE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH4 0x647BCFA1 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x166450C9 PUSH1 0xE3 SHL DUP3 MSTORE TIMESTAMP PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH4 0x4CD01EFB PUSH1 0xE1 SHL DUP3 MSTORE TIMESTAMP PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH3 0x8B5315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0xD28 PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x584 JUMPI DUP2 PUSH1 0x6 PUSH1 0x20 SWAP4 EQ SWAP2 DUP3 ISZERO PUSH2 0xD4D JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x7 SWAP3 POP POP EQ CODESIZE DUP1 PUSH2 0xD41 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0xD73 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x7 PUSH2 0xD88 SWAP2 EQ PUSH2 0x20DE JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xEA1 JUMPI POP PUSH2 0xDB8 PUSH2 0xDA2 DUP3 PUSH2 0x2317 JUMP JUMPDEST SWAP2 PUSH2 0xDB0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2063 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY DUP4 DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0xE1D JUMPI POP POP POP SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDFB JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE26 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0xE51 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE75 DUP4 PUSH2 0x248C JUMP JUMPDEST SWAP3 DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xE8D JUMPI PUSH1 0x5 SHL DUP6 ADD PUSH1 0x20 ADD MSTORE PUSH2 0xE49 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0xEAA DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0xED5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP1 PUSH2 0xEE1 PUSH1 0x1 SWAP2 PUSH2 0x248C JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xECD JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x60 PUSH2 0x200 PUSH1 0x40 MLOAD PUSH2 0xF0B DUP2 PUSH2 0x2046 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP4 DUP4 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE DUP4 PUSH2 0x120 DUP3 ADD MSTORE DUP4 PUSH2 0x140 DUP3 ADD MSTORE DUP4 PUSH2 0x160 DUP3 ADD MSTORE DUP4 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP4 PUSH2 0x1C0 DUP3 ADD MSTORE DUP3 PUSH2 0x1E0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF7D DUP2 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0xA DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x1268 JUMPI POP POP PUSH2 0xFAB SWAP3 POP SUB DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xE SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0xF SLOAD DUP2 DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x10 SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x12 SLOAD DUP2 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 SHR AND PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1032 PUSH2 0x2412 JUMP JUMPDEST PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x16 SLOAD PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x17 SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0x17 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x1232 JUMPI POP POP PUSH2 0x106F SWAP3 POP SUB DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x18 SLOAD DUP4 PUSH2 0x1085 DUP3 PUSH2 0x2359 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x120A JUMPI POP PUSH1 0x1 EQ PUSH2 0x11C5 JUMPI JUMPDEST POP POP PUSH2 0x10AE DUP2 PUSH2 0x503 SWAP5 SUB DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x200 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH2 0x200 PUSH2 0x11B0 PUSH2 0x118E PUSH2 0x10DF DUP5 MLOAD PUSH2 0x220 PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x240 DUP9 ADD SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x10F1 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP10 ADD SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xFF PUSH1 0xA0 DUP7 ADD MLOAD AND PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xFF PUSH1 0xC0 DUP7 ADD MLOAD AND PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xFF PUSH2 0x120 DUP7 ADD MLOAD AND PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xFF PUSH2 0x140 DUP7 ADD MLOAD AND PUSH2 0x160 DUP9 ADD MSTORE PUSH2 0x160 DUP6 ADD MLOAD PUSH2 0x180 DUP9 ADD MSTORE PUSH2 0x180 DUP6 ADD MLOAD PUSH2 0x1A0 DUP9 ADD MSTORE PUSH2 0x1A0 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP9 DUP4 SUB ADD PUSH2 0x1C0 DUP10 ADD MSTORE PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x1C0 DUP5 ADD MLOAD PUSH2 0x1E0 DUP8 ADD MSTORE PUSH2 0x1E0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP8 DUP4 SUB ADD DUP5 DUP9 ADD MSTORE PUSH2 0x1F02 JUMP JUMPDEST SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x220 DUP6 ADD MSTORE PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE SWAP1 SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP5 DUP3 LT PUSH2 0x11F4 JUMPI POP DUP2 ADD PUSH1 0x20 ADD SWAP3 POP PUSH2 0x10AE DUP2 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x503 SWAP7 POP DUP5 SWAP3 POP PUSH1 0x20 SWAP2 POP SWAP3 PUSH2 0x10AE SWAP4 PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 POP PUSH2 0x109D JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x105A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xF96 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x12A3 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x12AB PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x4 DUP2 EQ PUSH2 0x15D9 JUMPI PUSH1 0x3 DUP2 LT PUSH2 0x15C0 JUMPI PUSH1 0x3 LT PUSH2 0x15B1 JUMPI CALLER DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND PUSH2 0x15A2 JUMPI CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x1593 JUMPI PUSH1 0x12 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0xFF DUP2 AND DUP3 LT ISZERO PUSH2 0x1584 JUMPI PUSH1 0x10 SLOAD PUSH2 0x1317 DUP2 TIMESTAMP PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1568 JUMPI SWAP1 PUSH2 0x133B PUSH2 0x1341 SWAP3 PUSH1 0x11 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP1 ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1568 JUMPI PUSH2 0x1361 PUSH1 0x1 SWAP2 PUSH2 0x23B3 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMPDEST PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1568 JUMPI PUSH1 0x64 SWAP2 PUSH2 0x1396 PUSH2 0x139B SWAP3 PUSH2 0x1390 PUSH1 0x13 SLOAD DUP1 SWAP5 PUSH2 0x2393 JUMP JUMPDEST SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x232F JUMP JUMPDEST DIV SWAP2 PUSH2 0x13A9 DUP4 PUSH1 0x14 SLOAD PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0xFF DUP2 EQ PUSH2 0x1554 JUMPI PUSH1 0x1 PUSH2 0xFF00 SWAP2 ADD PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x12 SSTORE CALLER DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x13EC DUP2 PUSH2 0x2014 JUMP JUMPDEST CALLER DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1540 JUMPI DUP1 PUSH1 0x1 PUSH2 0x1414 SWAP3 ADD PUSH1 0x15 SSTORE PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x152C JUMPI DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP2 DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL PUSH2 0x1451 PUSH2 0x23D2 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x14F8 JUMPI POP PUSH1 0xFF PUSH1 0x12 SLOAD DUP2 DUP2 PUSH1 0x8 SHR AND DUP1 SWAP4 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xBBDD894F5E6D754C18172761A1A461095C26DE58905E706A8C33657573D40672 PUSH1 0x40 CALLER SWAP3 LOG3 AND SUB PUSH2 0x14AF JUMPI PUSH2 0x14A7 PUSH2 0x287A JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x2A0B JUMP JUMPDEST POP PUSH1 0x0 TIMESTAMP PUSH1 0x16 SSTORE PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x1254 JUMPI DUP3 PUSH1 0x4 PUSH2 0x400 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 POP PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE PUSH2 0x6A0 JUMP JUMPDEST SWAP1 PUSH2 0x1528 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH4 0xD086DB43 PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1F95 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP4 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH4 0x21B94F7B PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0xC394A433 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x2AB8F89 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0xD6A05DF PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH4 0x16F5E3B7 PUSH1 0xE2 SHL DUP4 MSTORE TIMESTAMP PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 DUP3 REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 PUSH2 0x15F0 DUP2 DUP5 PUSH1 0x8 SHR AND PUSH2 0x2274 JUMP JUMPDEST SWAP3 AND SWAP2 AND EQ PUSH1 0x0 EQ PUSH2 0x162A JUMPI PUSH2 0x1618 PUSH1 0x3C JUMPDEST PUSH2 0x1613 PUSH2 0xFFFF TIMESTAMP SWAP3 AND PUSH1 0x16 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x1 PUSH3 0x269D79 PUSH1 0xE2 SHL SUB NOT DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x1618 PUSH2 0x12C PUSH2 0x1602 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x164E PUSH2 0x2D2B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x503 PUSH2 0x16AB PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1EEF JUMP JUMPDEST POP PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x16CD PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xC4E JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x7 DUP4 LT ISZERO PUSH2 0x1BD9 JUMPI PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1BD5 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x1BD1 JUMPI PUSH2 0x144 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1BCD JUMPI PUSH2 0x164 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1BC9 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x1BC9 JUMPI DUP5 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1BC5 JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP9 ADD ADD GT PUSH2 0x1BC5 JUMPI PUSH2 0x1764 PUSH2 0x2755 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x1B8A JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x19 SSTORE PUSH2 0x1782 DUP8 PUSH2 0x2CE4 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0xFF NOT PUSH1 0xB SLOAD AND PUSH1 0xFF DUP9 AND OR PUSH1 0xB SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE SSTORE PUSH2 0xFF00 PUSH1 0xF SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 PUSH2 0xFFFF NOT AND OR OR PUSH1 0xF SSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x10 SSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0x11 SSTORE PUSH2 0xFFFF NOT PUSH1 0x12 SLOAD AND OR PUSH1 0x12 SSTORE CALLVALUE PUSH1 0x13 SSTORE CALLVALUE PUSH1 0x14 SSTORE DUP5 PUSH1 0x16 SSTORE PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x1807 DUP5 DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 CALLDATASIZE DUP2 CALLDATACOPY DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1AE7 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x1AE7 JUMPI DUP5 SWAP1 PUSH1 0xA SLOAD DUP4 PUSH1 0xA SSTORE DUP1 DUP5 LT PUSH2 0x1B36 JUMPI JUMPDEST POP ADD PUSH1 0xA DUP9 MSTORE DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AFB JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x185B DUP5 DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x1AE7 JUMPI DUP5 SWAP1 PUSH1 0x15 SLOAD DUP4 PUSH1 0x15 SSTORE DUP1 DUP5 LT PUSH2 0x1A63 JUMPI JUMPDEST POP ADD PUSH1 0x15 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP10 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1A25 JUMPI POP POP POP POP POP PUSH2 0x18AC PUSH1 0x18 SLOAD PUSH2 0x2359 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19C5 JUMPI JUMPDEST POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x192D JUMPI PUSH32 0xE9597995B7A2AF444CC28B2B776B88B1253D701282A9BCF902D4F59750DF7C57 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 DUP4 PUSH2 0x191F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP ADD ADD CALLDATALOAD CODESIZE DUP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x18 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1F NOT DUP5 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x19AB JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH32 0xE9597995B7A2AF444CC28B2B776B88B1253D701282A9BCF902D4F59750DF7C57 SWAP8 SWAP7 SWAP5 LT PUSH2 0x198E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x18 SSTORE PUSH2 0x1905 JUMP JUMPDEST ADD PUSH1 0x24 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1980 JUMP JUMPDEST SWAP2 SWAP4 DUP7 PUSH1 0x1 DUP2 SWAP3 PUSH1 0x24 DUP9 DUP9 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x1948 JUMP JUMPDEST PUSH2 0x1A09 SWAP1 PUSH1 0x18 DUP9 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 DUP6 DUP6 LT PUSH2 0x1A0F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH2 0x2342 JUMP JUMPDEST CODESIZE PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x19ED JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP5 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 PUSH1 0x2 SWAP2 ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0x1895 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1AD3 JUMPI SWAP1 DUP6 SWAP2 PUSH1 0x1 SHL PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP4 PUSH1 0x1 SHL PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1ABE JUMPI POP PUSH2 0x187C JUMP JUMPDEST DUP11 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP12 SWAP1 SSTORE DUP8 SWAP4 POP PUSH1 0x2 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP3 ADD SSTORE SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1844 JUMP JUMPDEST PUSH2 0x1B84 SWAP1 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP5 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD PUSH2 0x2342 JUMP JUMPDEST CODESIZE PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1FB PUSH2 0x22B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1C3F PUSH2 0x1C3A PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x1C62 PUSH2 0x2755 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1C87 JUMPI JUMPDEST PUSH2 0x1C7F SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x2C82 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x1CC8 JUMPI JUMPDEST SWAP1 POP PUSH2 0x1C76 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1CFB JUMPI JUMPDEST DUP2 PUSH2 0x1CE2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x1CF6 PUSH2 0x1C7F SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1CD5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1DB8 JUMPI JUMPDEST PUSH2 0x1D31 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x1D39 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x1D41 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x5 EQ DUP1 ISZERO PUSH2 0x1D9E JUMPI JUMPDEST ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x14A7 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x135A5CDCDA5BDB881B9BDD08195B991959081E595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1DA7 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x6 EQ PUSH2 0x1D54 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x1DF9 JUMPI JUMPDEST SWAP1 POP PUSH2 0x1D28 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E2C JUMPI JUMPDEST DUP2 PUSH2 0x1E13 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x1E27 PUSH2 0x1D31 SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x1DF2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E06 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E5F PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E9E PUSH2 0x1ED9 JUMP JUMPDEST AND PUSH2 0x1EAA DUP2 ISZERO ISZERO PUSH2 0x1FD6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x441 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x441 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB7F JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F20 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F13 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0xA50 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F6A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP2 DUP7 ADD MSTORE PUSH1 0x40 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F5D JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1FC1 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1FA0 JUMP JUMPDEST ISZERO PUSH2 0x1FDD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2030 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x220 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2030 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2030 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xB7F JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2099 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F776E6572206F7220617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206973206E6F7420696E204661696C65642073746174757300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x217B PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x7 PUSH2 0x2190 SWAP2 EQ PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21A4 DUP2 ISZERO ISZERO PUSH2 0x1FD6 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2239 JUMPI PUSH1 0x17 SLOAD SWAP1 DUP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21D3 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2225 JUMPI PUSH1 0x17 SWAP1 MSTORE PUSH32 0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 EQ PUSH2 0x221C JUMPI PUSH1 0x1 ADD PUSH2 0x21C3 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141B185E595C881B9BDD08195B9C9BDB1B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SWAP2 AND ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2286 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2286 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2286 JUMPI JUMP JUMPDEST PUSH2 0x22BE PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x4 SUB PUSH2 0x2312 JUMPI PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 PUSH2 0x22E2 DUP2 DUP5 PUSH1 0x8 SHR AND PUSH2 0x2274 JUMP JUMPDEST SWAP3 AND SWAP2 AND EQ PUSH1 0x0 EQ PUSH2 0x2307 JUMPI PUSH2 0x2304 PUSH1 0x3C PUSH2 0x1613 PUSH2 0xFFFF TIMESTAMP SWAP3 AND PUSH1 0x16 SLOAD PUSH2 0x229C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2304 PUSH2 0x12C PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2030 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2286 JUMPI JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x234D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2342 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2389 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2373 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2368 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x239D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x240D JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2030 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2401 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2063 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 PUSH2 0x241F DUP3 PUSH2 0x2317 JUMP JUMPDEST SWAP2 PUSH2 0x242D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2063 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x15 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x2458 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x246B DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x244B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2286 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x24A3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x3 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x24DB JUMPI JUMPDEST POP PUSH2 0x24C2 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 DUP3 PUSH1 0x8 SHR AND SWAP2 AND SUB PUSH1 0xFF DUP2 GT PUSH2 0x2286 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP2 POP EQ CODESIZE PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0xD SLOAD TIMESTAMP GT DUP1 PUSH2 0x25F5 JUMPI JUMPDEST ISZERO PUSH2 0x258A JUMPI PUSH1 0x9 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x2545 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x9 SSTORE PUSH1 0xA SLOAD ISZERO PUSH2 0x2535 JUMPI PUSH1 0xA SLOAD PUSH1 0xFF PUSH1 0xF SLOAD AND GT PUSH2 0x2523 JUMPI JUMP JUMPDEST PUSH2 0x252B PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2533 PUSH2 0x2D54 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x253D PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2533 PUSH2 0x2C82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636865636B656420737461727420636F6E646974696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206E6F7420696E2061726D696E672077696E646F772E204361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C20726566756E64506C617965727320696E73746561640000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD TIMESTAMP LT PUSH2 0x24F1 JUMP JUMPDEST PUSH2 0x2608 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x3 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x2702 JUMPI JUMPDEST POP PUSH2 0x26FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26FC JUMPI PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2312 JUMPI PUSH1 0x10 SLOAD DUP1 TIMESTAMP LT PUSH2 0x26FC JUMPI PUSH1 0x11 SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x2676 DUP3 TIMESTAMP PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2697 SWAP3 PUSH2 0x133B SWAP2 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 DUP2 ISZERO PUSH2 0x26ED JUMPI POP PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2286 JUMPI PUSH2 0x26BA PUSH1 0x1 SWAP2 PUSH2 0x23B3 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMPDEST PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2286 JUMPI PUSH1 0x64 SWAP2 PUSH2 0x1396 PUSH2 0x26E9 SWAP3 PUSH2 0x1390 PUSH1 0x13 SLOAD DUP1 SWAP5 PUSH2 0x2393 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 PUSH2 0x26BF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP2 POP EQ ISZERO CODESIZE PUSH2 0x261D JUMP JUMPDEST PUSH1 0x10 SLOAD DUP1 TIMESTAMP LT PUSH2 0x26FC JUMPI PUSH1 0x11 SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0x274E JUMPI PUSH2 0x272D DUP3 TIMESTAMP PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2304 SWAP3 PUSH2 0x133B SWAP2 PUSH2 0x22A9 JUMP JUMPDEST POP POP PUSH1 0x64 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2766 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x19 SLOAD PUSH1 0x8 SHR AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x6 DUP2 EQ DUP1 ISZERO PUSH2 0x2870 JUMPI JUMPDEST PUSH2 0x2304 JUMPI POP PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0x2312 JUMPI PUSH1 0xD SLOAD TIMESTAMP GT ISZERO PUSH2 0x286B JUMPI PUSH1 0xA SLOAD PUSH1 0xFF PUSH1 0xF SLOAD AND GT PUSH2 0x2866 JUMPI PUSH1 0x10 SLOAD TIMESTAMP LT PUSH2 0x2861 JUMPI PUSH1 0x11 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2837 JUMPI PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 DUP3 PUSH1 0x8 SHR AND SWAP2 AND DUP1 DUP3 LT ISZERO PUSH2 0x2830 JUMPI PUSH1 0x16 SLOAD SWAP1 DUP2 PUSH2 0x27F3 JUMPI POP POP POP PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x2801 PUSH2 0x2814 SWAP5 PUSH2 0x2274 JUMP JUMPDEST AND SUB PUSH2 0x2825 JUMPI PUSH2 0xFFFF PUSH1 0x3C JUMPDEST AND SWAP1 PUSH2 0x229C JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2820 JUMPI PUSH1 0x4 SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH2 0xFFFF PUSH2 0x12C PUSH2 0x280D JUMP JUMPDEST POP POP PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 DUP2 ISZERO PUSH2 0x285A JUMPI PUSH1 0xFF AND GT PUSH2 0x2855 JUMPI PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x5 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x7 SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x7 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 DUP2 EQ PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8D6E8FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x6 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x291B JUMPI PUSH2 0x2906 JUMPI JUMPDEST POP DUP1 PUSH2 0x584 JUMPI POP PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI PUSH2 0x600 SWAP2 PUSH1 0x6 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 POP PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x2913 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x0 CODESIZE PUSH2 0x28BE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8D6E8FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x7 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x291B JUMPI PUSH2 0x29B3 JUMPI JUMPDEST POP DUP1 PUSH2 0x584 JUMPI POP PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI PUSH2 0x700 SWAP2 PUSH1 0x7 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 POP PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x29C0 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x0 CODESIZE PUSH2 0x296B JUMP JUMPDEST ISZERO PUSH2 0x29CF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2A16 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0x2C68 JUMPI JUMPDEST ISZERO PUSH2 0x441 JUMPI SELFBALANCE SWAP2 PUSH2 0x2A3B DUP4 ISZERO ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x2C5B JUMPI JUMPDEST POP PUSH1 0x0 DUP1 DUP2 PUSH1 0xA SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x2C22 JUMPI POP POP DUP4 PUSH2 0x2A68 SWAP3 SWAP4 SWAP5 DUP3 GT PUSH2 0x2C1A JUMPI PUSH2 0x22A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A74 DUP2 ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x19 DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x19 EQ OR ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x64 PUSH2 0x2A93 SWAP2 DIV DUP1 SWAP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH2 0x2BBE JUMPI JUMPDEST POP DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x2AE9 PUSH2 0x23D2 JUMP JUMPDEST POP ISZERO PUSH2 0x2B81 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0xFF PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0xC4E JUMPI PUSH2 0x2B2B PUSH1 0x24 DUP5 SWAP3 DUP8 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9BEA789 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0x1F3F JUMP JUMPDEST GAS CALL DUP1 ISZERO PUSH2 0x44D JUMPI PUSH2 0x2B71 JUMPI JUMPDEST POP POP PUSH32 0xD66662C0DED9E58FD31D5E44944BCFD07FFC15E6927ECC1382E7941CB7BD24C4 PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST DUP2 PUSH2 0x2B7B SWAP2 PUSH2 0x2063 JUMP JUMPDEST CODESIZE PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DDDB995C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BFE JUMPI JUMPDEST DUP2 PUSH2 0x2BDB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x441 JUMPI DUP2 SWAP1 DUP4 SWAP1 DUP3 PUSH2 0x2ACE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2BCE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP1 POP DUP1 PUSH2 0x22A9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2C53 PUSH1 0x1 SWAP2 PUSH2 0x2C33 DUP6 PUSH2 0x212A JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD SWAP1 PUSH2 0x229C JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x2A4D JUMP JUMPDEST PUSH2 0x2C63 PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2A44 JUMP JUMPDEST POP PUSH2 0x2C71 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x7 EQ PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x2C8A PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0x2CCA JUMPI JUMPDEST ISZERO PUSH2 0x1DD JUMPI SELFBALANCE DUP1 ISZERO PUSH2 0x2A74 DUP2 ISZERO PUSH2 0x2CB6 DUP2 PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x29C8 JUMPI PUSH2 0x2CC5 PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x29C8 JUMP JUMPDEST POP PUSH2 0x2CD3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x7 EQ PUSH2 0x2CA0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D3F JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2D5C PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x7 SUB PUSH2 0x31C0 JUMPI PUSH1 0xA SLOAD ISZERO PUSH2 0x3184 JUMPI PUSH1 0x1 SWAP1 DUP3 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2EC9 JUMPI PUSH2 0x2D90 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP6 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2DC1 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2D7D JUMP JUMPDEST DUP5 DUP1 DUP1 DUP1 PUSH1 0xE SLOAD DUP6 GAS CALL PUSH2 0x2DD3 PUSH2 0x23D2 JUMP JUMPDEST POP ISZERO PUSH2 0x2E74 JUMPI DUP1 DUP6 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2E60 JUMPI SWAP1 PUSH2 0x2E14 DUP3 PUSH1 0x1 DUP1 SWAP6 SWAP5 ADD PUSH1 0x17 SSTORE PUSH1 0x17 PUSH2 0x215B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 DUP7 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH32 0x48D31F1C958CD44F1F83A52AE2DFAF61E88A1B82C07A6D5711A4ABEF60B6531E PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMPDEST SWAP1 PUSH2 0x2DB8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0xE SLOAD DUP2 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x2E91 PUSH1 0x40 DUP7 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x229C JUMP JUMPDEST SWAP1 SSTORE PUSH32 0xAF73B0B217208B61BE286BBC37095BCE7EB8B9CCF617244C2F0F154E8E04E3FF PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP4 SWAP3 PUSH2 0x2E5A JUMP JUMPDEST POP SWAP2 SWAP1 PUSH2 0x2ED4 PUSH2 0x2927 JUMP JUMPDEST SELFBALANCE PUSH2 0x2F6D JUMPI JUMPDEST POP PUSH1 0x17 SLOAD SWAP1 PUSH1 0xE SLOAD SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x17 DUP2 MSTORE PUSH32 0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15 SWAP1 JUMPDEST DUP7 DUP2 LT PUSH2 0x2F4B JUMPI POP POP SUB SWAP1 KECCAK256 SWAP2 PUSH32 0xBB93C7C839BDDD97272C8E974D54D30ADFA3AA55DF63A52F02B7192EFD361A24 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG4 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP5 SWAP4 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x2F75 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0x316A JUMPI JUMPDEST ISZERO PUSH2 0x441 JUMPI SELFBALANCE SWAP1 PUSH2 0x2F9A DUP3 ISZERO ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x315D JUMPI JUMPDEST ISZERO PUSH2 0x311C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2FB5 DUP2 ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x19 DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x19 EQ OR ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x64 PUSH2 0x2FD4 SWAP2 DIV DUP1 SWAP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x30C9 JUMPI DUP5 SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH2 0x30D4 JUMPI JUMPDEST POP DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x302A PUSH2 0x23D2 JUMP JUMPDEST POP ISZERO PUSH2 0x2B81 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0xFF PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x306C PUSH1 0x24 DUP7 SWAP3 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9BEA789 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0x1F3F JUMP JUMPDEST GAS CALL DUP1 ISZERO PUSH2 0x30C9 JUMPI PUSH2 0x30B5 JUMPI JUMPDEST POP PUSH32 0xD66662C0DED9E58FD31D5E44944BCFD07FFC15E6927ECC1382E7941CB7BD24C4 PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE CODESIZE PUSH2 0x2EDA JUMP JUMPDEST DUP4 PUSH2 0x30C2 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x2063 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3114 JUMPI JUMPDEST DUP2 PUSH2 0x30F1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BD9 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1BD9 JUMPI DUP4 SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x300F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x30E4 JUMP JUMPDEST SWAP2 SWAP1 DUP1 DUP2 PUSH1 0xA SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x3144 JUMPI POP POP DUP4 PUSH2 0x313F SWAP3 SWAP4 SWAP5 DUP3 GT PUSH2 0x2C1A JUMPI PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x2FA9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3155 PUSH1 0x1 SWAP2 PUSH2 0x2C33 DUP6 PUSH2 0x212A JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x3124 JUMP JUMPDEST PUSH2 0x3165 PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2FA3 JUMP JUMPDEST POP PUSH2 0x3173 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x7 EQ PUSH2 0x2F88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81C1B185E595C9CC81D1BC81C99599D5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206E6F7420696E204661696C65642073746174757300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID SSTORE DELEGATECALL BASEFEE REVERT 0xEA SWAP9 0xC4 0xD2 SWAP15 0xB3 BLOCKHASH PUSH22 0x7EF0A66CD03DBB9538908A6A81D96026B71EC47539BA PUSH3 0x8632D4 DUP13 GASLIMIT 0xC7 CREATE2 PUSH3 0xC07DB2 EXP PREVRANDAO 0xCF PUSH9 0x423691D5D79B20F87B 0xA8 COINBASE CODESIZE 0xAE 0xDF 0xB1 RETURNDATASIZE 0x2D PUSH23 0xD1F4B7BE834882E410B3E3A8AFAF69F83600AE24DB3543 SWAP2 0xD2 CALLDATACOPY DUP14 0x2E LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xC3 BYTE 0x4E 0x29 PUSH22 0xC1A7AF59AFE8B066451F2EDC2019B188E579B95E2BC4 0xC3 ADDRESS MSTORE8 PUSH11 0x64736F6C634300081E0033 ","sourceMap":"62299:49920:11:-:0;;;;;;;70335:10;1273:26:0;1269:95;;1297:1;62299:49920:11;;70335:10;-1:-1:-1;;;;;;62299:49920:11;;;;;;70335:10;-1:-1:-1;;;;;62299:49920:11;;;;3052:40:0;;1297:1;3052:40;1857:1:6;;;62299:49920:11;;69538:5;62299:49920;;69538:5;62299:49920;;;;;;;;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;62299:49920:11;;1297:1:0;1322:31;62299:49920:11;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7897,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":7938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_PlayersWon_dyn":{"entryPoint":8012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_MissionType":{"entryPoint":7999,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_Status":{"entryPoint":7919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8085,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":8983,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":8860,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint8":{"entryPoint":8820,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256":{"entryPoint":9107,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":9007,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8873,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_address":{"entryPoint":9026,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_array_struct_PlayersWon_storage_dyn":{"entryPoint":9234,"id":null,"parameterSlots":0,"returnSlots":1},"copy_struct_to_storage_from_struct_PlayersWon_to_struct_PlayersWon":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9049,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":9170,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":8291,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_33219":{"entryPoint":8212,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_33228":{"entryPoint":8262,"id":null,"parameterSlots":1,"returnSlots":0},"fun__setStatus":{"entryPoint":10362,"id":10266,"parameterSlots":0,"returnSlots":0},"fun__withdrawFunds":{"entryPoint":10763,"id":10408,"parameterSlots":0,"returnSlots":0},"fun_checkMissionStartCondition_inner":{"entryPoint":9446,"id":null,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":11563,"id":84,"parameterSlots":0,"returnSlots":0},"fun_currentProgressPct":{"entryPoint":9998,"id":9643,"parameterSlots":0,"returnSlots":1},"fun_getRealtimeStatus":{"entryPoint":10103,"id":10187,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":10069,"id":798,"parameterSlots":0,"returnSlots":0},"fun_pendingPayout":{"entryPoint":9728,"id":9763,"parameterSlots":1,"returnSlots":1},"fun_refundPlayers":{"entryPoint":11604,"id":10580,"parameterSlots":0,"returnSlots":0},"fun_remainingRounds":{"entryPoint":9371,"id":9795,"parameterSlots":0,"returnSlots":1},"fun_secondsUntilNextRound":{"entryPoint":8886,"id":9600,"parameterSlots":0,"returnSlots":1},"fun_setStatus":{"entryPoint":10535,"id":10266,"parameterSlots":0,"returnSlots":0},"fun_transferOwnership":{"entryPoint":11492,"id":146,"parameterSlots":1,"returnSlots":0},"fun_wasRefunded":{"entryPoint":8563,"id":10022,"parameterSlots":1,"returnSlots":1},"fun_withdrawFunds":{"entryPoint":11394,"id":10408,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":9356,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_1462":{"entryPoint":8150,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4b4c":{"entryPoint":10696,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a921":{"entryPoint":8414,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ad5e":{"entryPoint":8338,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":8539,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_address_dyn_":{"entryPoint":8490,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_PlayersWon_storage_dyn":{"entryPoint":9139,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c9081623e16a514611ebd5750806309c95e1014611e7357806310eb0e0e14611e345780631212484814611d0357806324600fc314611c49578063268b2b5114611c1b578063293c221314611bf85780635407441f14611bdd5780635e83e15c146116b757806368c6ba211461168f578063715018a6146116355780637475a4cb1461128a5780637ce17de414610ee95780637cf61b6914610d5a5780638d4e408314610d0f5780638da5cb5b14610ce85780638f1c315114610cca578063987c543a1461084257806398bdae4314610788578063a52b2b8814610749578063a7e22a3e14610723578063ad1ca6bf14610662578063b2a4a5d214610629578063c033a490146105ea578063c2e52206146105cc578063dd1121f614610598578063df15c37e146104b1578063e6810a501461048d578063eb2bab771461027d578063f2fde38b1461022c578063fa4cf5a114610203578063fb84e12f146101e05763fcca0c841461018b57600080fd5b346101dd5760203660031901126101dd5760409060ff826001600160a01b036101b2611ed9565b1692838152600360205282828220541693815260046020522054168251911515825215156020820152f35b80fd5b50346101dd57806003193601126101dd5760206101fb61270e565b604051908152f35b50346101dd57806003193601126101dd576002546040516001600160a01b039091168152602090f35b50346101dd5760203660031901126101dd57610246611ed9565b61024e612d2b565b6001600160a01b038116156102695761026690612ce4565b80f35b631e4fbdf760e01b82526004829052602482fd5b50806003193601126101dd5734156104585760018060a01b03600254168033149081156103d9575b5080156103c6575b15610375576102ba612777565b6008811015610361576003111561031c576102d73460135461229c565b6013557f7272b264c9ef2a1e8e9303944736f4977b14a5761227b7b9869fecaa60f8938760406103093460145461229c565b806014558151903482526020820152a180f35b60405162461bcd60e51b815260206004820152601960248201527f4d697373696f6e207061737365642061637469766174696f6e000000000000006044820152606490fd5b634e487b7160e01b82526021600452602482fd5b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920666163746f7279206f7220617574686f72697a65642063616e20666044820152621d5b9960ea1b6064820152608490fd5b5080546001600160a01b031633146102ad565b60405163b918161160e01b81523360048201529150602090829060249082905afa90811561044d57829161040f575b50386102a5565b90506020813d602011610445575b8161042a60209383612063565b810103126104415761043b90612085565b38610408565b5080fd5b3d915061041d565b6040513d84823e3d90fd5b60405162461bcd60e51b815260206004820152600d60248201526c139bc8199d5b991cc81cd95b9d609a1b6044820152606490fd5b50346101dd5760203660031901126101dd5760206101fb6104ac611ed9565b612600565b50346101dd57806003193601126101dd576104ca612777565b600881101561036157600614908115610566575b5015610507576105036104ef612412565b604051918291602083526020830190611f4c565b0390f35b60405162461bcd60e51b815260206004820152603160248201527f4d697373696f6e206973206e6f7420696e2053756363657373206f7220506172604482015270746c79537563636573732073746174757360781b6064820152608490fd5b9050610570612777565b9060088210156105845750600514386104de565b634e487b7160e01b81526021600452602490fd5b50346101dd57806003193601126101dd57600d544211806105c1575b6020906040519015158152f35b5060105442106105b4565b50346101dd57806003193601126101dd576020600a54604051908152f35b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03610615611ed9565b168152600584522054166040519015158152f35b50346101dd5760203660031901126101dd576020906040906001600160a01b03610651611ed9565b168152600683522054604051908152f35b50346101dd57806003193601126101dd5761067b612755565b80546001600160a01b0316331480156106a7575b61069890612092565b6106a06124e6565b6001805580f35b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d5782906106e8575b905061068f565b506020813d60201161071b575b8161070260209383612063565b810103126104415761071661069891612085565b6106e1565b3d91506106f5565b50346101dd57806003193601126101dd57602061073e61249b565b60ff60405191168152f35b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03610774611ed9565b168152600484522054166040519015158152f35b50346101dd57806003193601126101dd576107a1612755565b80546001600160a01b0316331480156107c6575b6107be90612092565b6106a0612d54565b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d578290610807575b90506107b5565b506020813d60201161083a575b8161082160209383612063565b81010312610441576108356107be91612085565b610800565b3d9150610814565b50806003193601126101dd57610856612755565b333b610cbc57600c54804210610ca65750600d54804211610c905750600a5460ff600f5460081c1680911015610c7e5750600e54803403610c685750338152600360205260ff604082205416610c5a5760025460408051634c0252c360e11b81523360048201526001600160a01b0390921692919081602481865afa90811561044d5782908392610c0c575b5015610b045750600a54600160401b811015610af05780600161090a9201600a55600a61215b565b81549060031b9033821b9160018060a01b03901b1916179055338152600360205260408120600160ff198254161790556109463460135461229c565b6013556109553460145461229c565b60145580600181610ae3575b8015610ad6575b8015610ac9575b610a66575b6105845760195460ff8160081c16906008821015610a50576101009060016000936000805160206132268339815191526020604051428152a361ff0019161760195560025481906001600160a01b0316803b15610a4d5781809160246040518095819363c17f9e5960e01b83523360048401525af18015610a4057610a30575b600a546040519034825260208201527fbedd10d90b8962eb521114c7e2b49019403d371ffa1e46afbda7a3f1fde8f06f60403392a26001805580f35b610a3991612063565b81816109f4565b50604051903d90823e3d90fd5b50fd5b634e487b7160e01b600052602160045260246000fd5b506002546001600160a01b0316803b156104415760405163d8d6e8ff60e01b815260016004820152829182908290602490829084905af190811561044d578291610ab2575b5050610974565b81610abc91612063565b610ac7578083610aab565bfd5b506105845780600061096f565b5061058457806000610968565b5061058457806000610961565b634e487b7160e01b82526041600452602482fd5b6024926003821015610bf957602091600103610b8c576040516377f855c960e11b815233600482015293849182905afa8015610a40578190610b54575b631b62787960e31b825260045260249150fd5b506020823d602011610b84575b81610b6e60209383612063565b81010312610b7f5760249151610b41565b600080fd5b3d9150610b61565b604051631b8093b160e11b815233600482015293849182905afa8015610a40578190610bc6575b63147ce66f60e31b825260045260249150fd5b506020823d602011610bf1575b81610be060209383612063565b81010312610b7f5760249151610bb3565b3d9150610bd3565b5050634e487b7160e01b81526021600452fd5b9150506040813d604011610c52575b81610c2860409383612063565b81010312610441576020610c3b82612085565b910151906003821015610c4e57386108e2565b8280fd5b3d9150610c1b565b621d934160e11b8152600490fd5b6354d7a6b360e01b825260045234602452604490fd5b63647bcfa160e01b8252600452602490fd5b63166450c960e31b825242600452602452604490fd5b634cd01efb60e11b825242600452602452604490fd5b628b531560e01b8152600490fd5b50346101dd57806003193601126101dd576020600754604051908152f35b50346101dd57806003193601126101dd57546040516001600160a01b039091168152602090f35b50346101dd57806003193601126101dd57610d28612777565b9060088210156105845781600660209314918215610d4d575b50506040519015158152f35b6007925050143880610d41565b50346101dd57806003193601126101dd57610d73612777565b6008811015610361576007610d8891146120de565b600a5481805b828110610ea15750610db8610da282612317565b91610db06040519384612063565b808352612317565b602082019290601f190136843783845b828110610e1d5750505090604051928392602084019060208552518091526040840192915b818110610dfb575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610ded565b610e268161212a565b905460039190911b1c6001600160a01b0316865260066020526040862054610e51575b600101610dc8565b610e5a8161212a565b905460039190911b1c6001600160a01b0316610e758361248c565b928551811015610e8d5760051b850160200152610e49565b634e487b7160e01b88526032600452602488fd5b610eaa8161212a565b905460039190911b1c6001600160a01b0316845260066020526040842054610ed5575b600101610d8e565b90610ee160019161248c565b919050610ecd565b50346101dd57806003193601126101dd576060610200604051610f0b81612046565b82815283602082015283604082015283838201528360808201528360a08201528360c08201528360e08201528361010082015283610120820152836101408201528361016082015283610180820152826101a0820152836101c0820152826101e08201520152604051610f7d81612046565b604051600a548082528160208101600a86526020862092865b818110611268575050610fab92500382612063565b815260ff600b54166007811015611254576020820152600c546040820152600d546060820152600e54608082015260ff600f5481811660a084015260081c1660c082015260105460e082015260115461010082015260ff60125481811661012084015260081c16610140820152601354610160820152601454610180820152611032612412565b6101a08201526016546101c08201526040516017548082528160208101601786526020862092865b81811061123257505061106f92500382612063565b6101e08201526040516018548361108582612359565b808452916001811690811561120a57506001146111c5575b50506110ae81610503940382612063565b610200820152604051918291602083526102006111b061118e6110df84516102206020890152610240880190611f02565b6110f160208601516040890190611f3f565b6040850151606088015260608501516080880152608085015160a088015260ff60a08601511660c088015260ff60c08601511660e088015260e085015161010088015261010085015161012088015260ff6101208601511661014088015260ff610140860151166101608801526101608501516101808801526101808501516101a08801526101a0850151601f19888303016101c0890152611f4c565b6101c08401516101e08701526101e0840151601f198783030184880152611f02565b910151838203601f1901610220850152611f95565b601881529093506000805160206132468339815191525b8482106111f45750810160200192506110ae8161109d565b60018160209254838587010152019101906111dc565b610503965084925060209150926110ae9360ff191682840152151560051b820101945061109d565b84546001600160a01b031683526001948501948694506020909301920161105a565b634e487b7160e01b83526021600452602483fd5b84546001600160a01b0316835260019485019486945060209093019201610f96565b50346101dd57806003193601126101dd576112a3612755565b6112ab612777565b600881101561036157600481146115d957600381106115c0576003106115b157338152600460205260ff6040822054166115a257338152600360205260ff604082205416156115935760125460ff8160081c169060ff81168210156115845760105461131781426122a9565b90606482029180830460641490151715611568579061133b611341926011546122a9565b90612393565b601554801561157c576000198101908111611568576113616001916123b3565b500154905b6064820291808304606414901517156115685760649161139661139b926113906013548094612393565b906122a9565b61232f565b04916113a9836014546122a9565b60145560ff811461155457600161ff00910160081b169061ff00191617601255338252600460205260408220600160ff198254161790556040516113ec81612014565b338152816020820152601554600160401b8110156115405780600161141492016015556123b3565b61152c57815181546001600160a01b0319166001600160a01b03919091161781556020909101516001909101558180808084335af16114516123d2565b90156114f8575060ff601254818160081c16809360145460405191825260208201527fbbdd894f5e6d754c18172761a1a461095c26de58905e706a8c33657573d4067260403392a316036114af576114a761287a565b6106a0612a0b565b5060004260165560195460ff8160081c1690600882101561125457826004610400936000805160206132268339815191526020604051428152a35061ff001916176019556106a0565b9061152860405192839263d086db4360e01b84523360048501526024840152606060448401526064830190611f95565b0390fd5b634e487b7160e01b84526004849052602484fd5b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b84526011600452602484fd5b634e487b7160e01b85526011600452602485fd5b508390611366565b6321b94f7b60e21b8352600483fd5b63c394a43360e01b8152600490fd5b6302ab8f8960e11b8152600490fd5b630d6a05df60e41b8152600490fd5b6010546316f5e3b760e21b835242600452602452604482fd5b60248260125460ff806115f0818460081c16612274565b921691161460001461162a57611618603c5b61161361ffff42921660165461229c565b6122a9565b600162269d7960e21b03198252600452fd5b61161861012c611602565b50346101dd57806003193601126101dd5761164e612d2b565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101dd57806003193601126101dd576105036116ab612777565b60405191829182611eef565b506101803660031901126101dd576116cd611ed9565b6024356001600160a01b0381169190829003610c4e57604435916007831015611bd95760c4359060ff8216809203611bd55760e43560ff81168103611bd157610144359060ff8216809203611bcd57610164359367ffffffffffffffff8511611bc95736602386011215611bc95784600401359367ffffffffffffffff8511611bc5573660248688010111611bc557611764612755565b60195460ff8116611b8a5760ff191660011760195561178287612ce4565b6bffffffffffffffffffffffff60a01b600254161760025560ff19600b541660ff881617600b55606435600c55608435600d5560a435600e5561ff00600f549260081b169161ffff19161717600f55610104356010556101243560115561ffff1960125416176012553460135534601455846016556020916040516118078482612063565b8681528636813780519067ffffffffffffffff8211611ae757600160401b8211611ae7578490600a5483600a55808410611b36575b5001600a8852875b828110611afb5750505060405161185b8482612063565b8681528690600160401b8211611ae757849060155483601555808410611a63575b5001601588526000805160206132068339815191528589925b848410611a255750505050506118ac601854612359565b601f81116119c5575b508590601f831160011461192d577fe9597995b7a2af444cc28b2b776b88b1253d701282a9bcf902d4f59750df7c5793929187918361191f575b50508160011b916000199060031b1c1916176018555b6040514281526001600160a01b0390931692a36001805580f35b6024925001013538806118ef565b6018875260008051602061324683398151915291601f198416885b8181106119ab57509160019391857fe9597995b7a2af444cc28b2b776b88b1253d701282a9bcf902d4f59750df7c579796941061198e575b505050811b01601855611905565b0160240135600019600384901b60f8161c19169055388080611980565b919386600181926024888801013581550195019201611948565b611a099060188852601f840160051c6000805160206132468339815191520190858510611a0f575b601f0160051c6000805160206132468339815191520190612342565b386118b5565b60008051602061324683398151915291506119ed565b8051805184546001600160a01b0319166001600160a01b03919091161784556020015160018481019190915591600291019201920191908690611895565b9091506001600160ff1b0381168103611ad3576001600160ff1b0383168303611ad35790859160011b600080516020613206833981519152018360011b600080516020613206833981519152015b818110611abe575061187c565b8a8155600181018b9055879350600201611ab1565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b88526041600452602488fd5b81516001600160a01b03167fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a882015590850190600101611844565b611b84907fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801847fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801612342565b3861183c565b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b8880fd5b8780fd5b8680fd5b8580fd5b8480fd5b8380fd5b50346101dd57806003193601126101dd5760206101fb6122b6565b50346101dd57806003193601126101dd57602060ff600954166040519015158152f35b50346101dd5760203660031901126101dd576020611c3f611c3a611ed9565b612173565b6040519015158152f35b50346101dd57806003193601126101dd57611c62612755565b80546001600160a01b031633148015611c87575b611c7f90612092565b6106a0612c82565b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d578290611cc8575b9050611c76565b506020813d602011611cfb575b81611ce260209383612063565b8101031261044157611cf6611c7f91612085565b611cc1565b3d9150611cd5565b50346101dd57806003193601126101dd5780546001600160a01b031633148015611db8575b611d3190612092565b611d39612755565b611d41612777565b6008811015610361576005148015611d9e575b15611d61576114a761287a565b60405162461bcd60e51b8152602060048201526015602482015274135a5cdcda5bdb881b9bdd08195b991959081e595d605a1b6044820152606490fd5b50611da7612777565b600881101561036157600614611d54565b5060025460405163b918161160e01b815233600482015290602090829060249082906001600160a01b03165afa801561044d578290611df9575b9050611d28565b506020813d602011611e2c575b81611e1360209383612063565b8101031261044157611e27611d3191612085565b611df2565b3d9150611e06565b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03611e5f611ed9565b168152600384522054166040519015158152f35b50346101dd5760203660031901126101dd5760209060ff906040906001600160a01b03611e9e611ed9565b16611eaa811515611fd6565b8152600384522054166040519015158152f35b9050346104415781600319360112610441576020906008548152f35b600435906001600160a01b0382168203610b7f57565b919060208301926008821015610a505752565b906020808351928381520192019060005b818110611f205750505090565b82516001600160a01b0316845260209384019390920191600101611f13565b906007821015610a505752565b906020808351928381520192019060005b818110611f6a5750505090565b825180516001600160a01b031685526020908101518186015260409094019390920191600101611f5d565b919082519283825260005b848110611fc1575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201611fa0565b15611fdd57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b6040810190811067ffffffffffffffff82111761203057604052565b634e487b7160e01b600052604160045260246000fd5b610220810190811067ffffffffffffffff82111761203057604052565b90601f8019910116810190811067ffffffffffffffff82111761203057604052565b51908115158203610b7f57565b1561209957565b60405162461bcd60e51b815260206004820152601760248201527f4e6f74206f776e6572206f7220617574686f72697a65640000000000000000006044820152606490fd5b156120e557565b60405162461bcd60e51b815260206004820152601f60248201527f4d697373696f6e206973206e6f7420696e204661696c656420737461747573006044820152606490fd5b600a5481101561214557600a60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156121455760005260206000200190600090565b61217b612777565b6008811015610a5057600761219091146120de565b6001600160a01b03166121a4811515611fd6565b80600052600360205260ff604060002054161561223957601754908160005b8381106121d35750505050600090565b60008282101561222557601790527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c158101546001600160a01b0316831461221c576001016121c3565b50505050600190565b634e487b7160e01b81526032600452602490fd5b60405162461bcd60e51b8152602060048201526013602482015272141b185e595c881b9bdd08195b9c9bdb1b1959606a1b6044820152606490fd5b60ff60019116019060ff821161228657565b634e487b7160e01b600052601160045260246000fd5b9190820180921161228657565b9190820391821161228657565b6122be612777565b6008811015610a50576004036123125760125460ff806122e2818460081c16612274565b921691161460001461230757612304603c61161361ffff42921660165461229c565b90565b61230461012c611602565b600090565b67ffffffffffffffff81116120305760051b60200190565b8181029291811591840414171561228657565b81811061234d575050565b60008155600101612342565b90600182811c92168015612389575b602083101461237357565b634e487b7160e01b600052602260045260246000fd5b91607f1691612368565b811561239d570490565b634e487b7160e01b600052601260045260246000fd5b60155481101561214557601560005260206000209060011b0190600090565b3d1561240d573d9067ffffffffffffffff82116120305760405191612401601f8201601f191660200184612063565b82523d6000602084013e565b606090565b6015549061241f82612317565b9161242d6040519384612063565b80835260156000908152600080516020613206833981519152602085015b8383106124585750505050565b6002602060019260405161246b81612014565b848060a01b038654168152848601548382015281520192019201919061244b565b60001981146122865760010190565b6124a3612777565b6008811015610a5057600381149081156124db575b506124c257600090565b60125460ff808260081c1691160360ff81116122865790565b6004915014386124b8565b600d544211806125f5575b1561258a5760095460ff81166125455760ff1916600117600955600a541561253557600a5460ff600f54161161252357565b61252b612927565b612533612d54565b565b61253d612927565b612533612c82565b60405162461bcd60e51b815260206004820152601f60248201527f416c726561647920636865636b656420737461727420636f6e646974696f6e006044820152606490fd5b60405162461bcd60e51b815260206004820152603860248201527f4d697373696f6e206e6f7420696e2061726d696e672077696e646f772e20436160448201527f6c6c20726566756e64506c617965727320696e737465616400000000000000006064820152608490fd5b5060105442106124f1565b612608612777565b6008811015610a505760038114159081612702575b506126fc576001600160a01b031660008181526003602052604090205460ff16156126fc57600052600460205260ff60406000205416612312576010548042106126fc57601154804210156126f55761267682426122a9565b90606482029180830460641490151715612286576126979261133b916122a9565b601554600081156126ed57506000198101908111612286576126ba6001916123b3565b500154905b606482029180830460641490151715612286576064916113966126e9926113906013548094612393565b0490565b9050906126bf565b5050600090565b50600090565b6004915014153861261d565b6010548042106126fc576011548042101561274e5761272d82426122a9565b90606482029180830460641490151715612286576123049261133b916122a9565b5050606490565b600260015414612766576002600155565b633ee5aeb560e01b60005260046000fd5b60ff60195460081c166008811015610a5057600681148015612870575b6123045750600c54421061231257600d5442111561286b57600a5460ff600f541611612866576010544210612861576011544210156128375760125460ff808260081c169116808210156128305760165490816127f357505050600390565b60ff61280161281494612274565b16036128255761ffff603c5b169061229c565b42101561282057600490565b600390565b61ffff61012c61280d565b5050600690565b60125460ff8160081c1690811561285a5760ff161161285557600690565b600590565b5050600790565b600290565b600790565b600190565b5060078114612794565b6002546000906001600160a01b0316803b15610b7f5760405163d8d6e8ff60e01b815260066004820152906000908290602490829084905af1801561291b57612906575b5080610584575060195460ff8160081c16906008821015610a50576106009160066000916000805160206132268339815191526020604051428152a35061ff00191617601955565b6129139150600090612063565b6000386128be565b6040513d6000823e3d90fd5b6002546000906001600160a01b0316803b15610b7f5760405163d8d6e8ff60e01b815260076004820152906000908290602490829084905af1801561291b576129b3575b5080610584575060195460ff8160081c16906008821015610a50576107009160076000916000805160206132268339815191526020604051428152a35061ff00191617601955565b6129c09150600090612063565b60003861296b565b156129cf57565b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b600090612a16612777565b6008811015611254576006148015612c68575b15610441574791612a3b8315156129c8565b600a5415612c5b575b5060008081600a545b808210612c2257505083612a689293948211612c1a576122a9565b8015612a7481156129c8565b60198202908282046019141715612c06576064612a93910480926122a9565b600254604051638da5cb5b60e01b815291939190602090829060049082906001600160a01b03165afa90811561044d57829184918391612bbe575b50829182918291906001600160a01b03165af1612ae96123d2565b5015612b815760018060a01b036002541660ff600b5416813b15610c4e57612b2b6024849287604051958694859363a9bea78960e01b85526004850190611f3f565b5af1801561044d57612b71575b50507fd66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c460408051838152846020820152a1600755600855565b81612b7b91612063565b38612b38565b60405162461bcd60e51b815260206004820152601560248201527413dddb995c881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b925050506020813d602011612bfe575b81612bdb60209383612063565b8101031261044157516001600160a01b0381168103610441578190839082612ace565b3d9150612bce565b634e487b7160e01b83526011600452602483fd5b9050806122a9565b9091612c53600191612c338561212a565b848060a01b0391549060031b1c168652600660205260408620549061229c565b920190612a4d565b612c63612927565b612a44565b50612c71612777565b600881101561125457600714612a29565b612c8a612777565b6000906008811015610361576006148015612cca575b156101dd57478015612a748115612cb6816129c8565b600a546129c857612cc5612927565b6129c8565b50612cd3612777565b600881101561036157600714612ca0565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b6000546001600160a01b03163303612d3f57565b63118cdaa760e01b6000523360045260246000fd5b612d5c612777565b906000916008811015611254576007036131c057600a541561318457600190825b600a54811015612ec957612d908161212a565b905460039190911b1c6001600160a01b03168085526005602052604085205460ff1615612dc1575b50600101612d7d565b84808080600e54855af1612dd36123d2565b5015612e7457808552600560205260408520805460ff19166001179055601754600160401b811015612e605790612e1482600180959401601755601761215b565b81549060031b9083821b91868060a01b03901b19161790557f48d31f1c958cd44f1f83a52ae2dfaf61e88a1b82c07a6d5711a4abef60b6531e6020600e54604051908152a25b90612db8565b634e487b7160e01b86526041600452602486fd5b909250600e548185526006602052612e916040862091825461229c565b90557faf73b0b217208b61be286bbc37095bce7eb8b9ccf617244c2f0f154e8e04e3ff6020600e54604051908152a260018392612e5a565b509190612ed4612927565b47612f6d575b5060175490600e54906040518091829190601781527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15905b868110612f4b575050039020917fbb93c7c839bddd97272c8e974d54d30adfa3aa55df63a52f02b7192efd361a246020604051428152a4565b81546001600160a01b0316835284935060209092019160019182019101612f12565b612f75612777565b600881101561125457600614801561316a575b15610441574790612f9a8215156129c8565b600a541561315d575b1561311c575b8015612fb581156129c8565b60198202908282046019141715612c06576064612fd4910480926122a9565b600254604051638da5cb5b60e01b815291929190602090829060049082906001600160a01b03165afa9081156130c9578491839183916130d4575b50829182918291906001600160a01b03165af161302a6123d2565b5015612b815760018060a01b036002541660ff600b5416813b15611bd55761306c6024869286604051958694859363a9bea78960e01b85526004850190611f3f565b5af180156130c9576130b5575b507fd66662c0ded9e58fd31d5e44944bcfd07ffc15e6927ecc1382e7941cb7bd24c460408051838152846020820152a160075560085538612eda565b836130c291949294612063565b9138613079565b6040513d86823e3d90fd5b925050506020813d602011613114575b816130f160209383612063565b81010312611bd957516001600160a01b0381168103611bd957839082908261300f565b3d91506130e4565b91908081600a545b8082106131445750508361313f9293948211612c1a576122a9565b612fa9565b9091613155600191612c338561212a565b920190613124565b613165612927565b612fa3565b50613173612777565b600881101561125457600714612f88565b60405162461bcd60e51b8152602060048201526014602482015273139bc81c1b185e595c9cc81d1bc81c99599d5b9960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d697373696f6e206e6f7420696e204661696c656420737461747573000000006044820152606490fdfe55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47539ba628632d48c45c7f562c07db20a44cf68423691d5d79b20f87ba84138aedfb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2ea2646970667358221220efc31a4e2975c1a7af59afe8b066451f2edc2019b188e579b95e2bc4c330536a64736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x3E16A5 EQ PUSH2 0x1EBD JUMPI POP DUP1 PUSH4 0x9C95E10 EQ PUSH2 0x1E73 JUMPI DUP1 PUSH4 0x10EB0E0E EQ PUSH2 0x1E34 JUMPI DUP1 PUSH4 0x12124848 EQ PUSH2 0x1D03 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x1C49 JUMPI DUP1 PUSH4 0x268B2B51 EQ PUSH2 0x1C1B JUMPI DUP1 PUSH4 0x293C2213 EQ PUSH2 0x1BF8 JUMPI DUP1 PUSH4 0x5407441F EQ PUSH2 0x1BDD JUMPI DUP1 PUSH4 0x5E83E15C EQ PUSH2 0x16B7 JUMPI DUP1 PUSH4 0x68C6BA21 EQ PUSH2 0x168F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1635 JUMPI DUP1 PUSH4 0x7475A4CB EQ PUSH2 0x128A JUMPI DUP1 PUSH4 0x7CE17DE4 EQ PUSH2 0xEE9 JUMPI DUP1 PUSH4 0x7CF61B69 EQ PUSH2 0xD5A JUMPI DUP1 PUSH4 0x8D4E4083 EQ PUSH2 0xD0F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCE8 JUMPI DUP1 PUSH4 0x8F1C3151 EQ PUSH2 0xCCA JUMPI DUP1 PUSH4 0x987C543A EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0x98BDAE43 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0xA52B2B88 EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0xA7E22A3E EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0xAD1CA6BF EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xB2A4A5D2 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xC033A490 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xC2E52206 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xDD1121F6 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xDF15C37E EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xE6810A50 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xEB2BAB77 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xFA4CF5A1 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xFB84E12F EQ PUSH2 0x1E0 JUMPI PUSH4 0xFCCA0C84 EQ PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x40 SWAP1 PUSH1 0xFF DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1B2 PUSH2 0x1ED9 JUMP JUMPDEST AND SWAP3 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP3 DUP3 KECCAK256 SLOAD AND SWAP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE KECCAK256 SLOAD AND DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1FB PUSH2 0x270E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x246 PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x269 JUMPI PUSH2 0x266 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI CALLVALUE ISZERO PUSH2 0x458 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND DUP1 CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x3D9 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x3C6 JUMPI JUMPDEST ISZERO PUSH2 0x375 JUMPI PUSH2 0x2BA PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x3 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x2D7 CALLVALUE PUSH1 0x13 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH32 0x7272B264C9EF2A1E8E9303944736F4977B14A5761227B7B9869FECAA60F89387 PUSH1 0x40 PUSH2 0x309 CALLVALUE PUSH1 0x14 SLOAD PUSH2 0x229C JUMP JUMPDEST DUP1 PUSH1 0x14 SSTORE DUP2 MLOAD SWAP1 CALLVALUE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E207061737365642061637469766174696F6E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F7279206F7220617574686F72697A65642063616E2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B99 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 POP PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP2 PUSH2 0x40F JUMPI JUMPDEST POP CODESIZE PUSH2 0x2A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x445 JUMPI JUMPDEST DUP2 PUSH2 0x42A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x43B SWAP1 PUSH2 0x2085 JUMP JUMPDEST CODESIZE PUSH2 0x408 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BC8199D5B991CC81CD95B9D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1FB PUSH2 0x4AC PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x2600 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x4CA PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x6 EQ SWAP1 DUP2 ISZERO PUSH2 0x566 JUMPI JUMPDEST POP ISZERO PUSH2 0x507 JUMPI PUSH2 0x503 PUSH2 0x4EF PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1F4C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206973206E6F7420696E2053756363657373206F7220506172 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x746C795375636365737320737461747573 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x570 PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x584 JUMPI POP PUSH1 0x5 EQ CODESIZE PUSH2 0x4DE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0xD SLOAD TIMESTAMP GT DUP1 PUSH2 0x5C1 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x10 SLOAD TIMESTAMP LT PUSH2 0x5B4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x615 PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x651 PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x67B PUSH2 0x2755 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x6A7 JUMPI JUMPDEST PUSH2 0x698 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x6E8 JUMPI JUMPDEST SWAP1 POP PUSH2 0x68F JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x71B JUMPI JUMPDEST DUP2 PUSH2 0x702 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x716 PUSH2 0x698 SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x6E1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6F5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x73E PUSH2 0x249B JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x774 PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x7A1 PUSH2 0x2755 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x7C6 JUMPI JUMPDEST PUSH2 0x7BE SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x2D54 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x807 JUMPI JUMPDEST SWAP1 POP PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x83A JUMPI JUMPDEST DUP2 PUSH2 0x821 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x835 PUSH2 0x7BE SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x814 JUMP JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x856 PUSH2 0x2755 JUMP JUMPDEST CALLER EXTCODESIZE PUSH2 0xCBC JUMPI PUSH1 0xC SLOAD DUP1 TIMESTAMP LT PUSH2 0xCA6 JUMPI POP PUSH1 0xD SLOAD DUP1 TIMESTAMP GT PUSH2 0xC90 JUMPI POP PUSH1 0xA SLOAD PUSH1 0xFF PUSH1 0xF SLOAD PUSH1 0x8 SHR AND DUP1 SWAP2 LT ISZERO PUSH2 0xC7E JUMPI POP PUSH1 0xE SLOAD DUP1 CALLVALUE SUB PUSH2 0xC68 JUMPI POP CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND PUSH2 0xC5A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4C0252C3 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 SWAP1 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 DUP4 SWAP3 PUSH2 0xC0C JUMPI JUMPDEST POP ISZERO PUSH2 0xB04 JUMPI POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAF0 JUMPI DUP1 PUSH1 0x1 PUSH2 0x90A SWAP3 ADD PUSH1 0xA SSTORE PUSH1 0xA PUSH2 0x215B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 CALLER DUP3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x946 CALLVALUE PUSH1 0x13 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH2 0x955 CALLVALUE PUSH1 0x14 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x14 SSTORE DUP1 PUSH1 0x1 DUP2 PUSH2 0xAE3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAD6 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAC9 JUMPI JUMPDEST PUSH2 0xA66 JUMPI JUMPDEST PUSH2 0x584 JUMPI PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI PUSH2 0x100 SWAP1 PUSH1 0x1 PUSH1 0x0 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE PUSH1 0x2 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xA4D JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 PUSH4 0xC17F9E59 PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA30 JUMPI JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 CALLVALUE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xBEDD10D90B8962EB521114C7E2B49019403D371FFA1E46AFBDA7A3F1FDE8F06F PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xA39 SWAP2 PUSH2 0x2063 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x9F4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8D6E8FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP2 PUSH2 0xAB2 JUMPI JUMPDEST POP POP PUSH2 0x974 JUMP JUMPDEST DUP2 PUSH2 0xABC SWAP2 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0xAC7 JUMPI DUP1 DUP4 PUSH2 0xAAB JUMP JUMPDEST REVERT JUMPDEST POP PUSH2 0x584 JUMPI DUP1 PUSH1 0x0 PUSH2 0x96F JUMP JUMPDEST POP PUSH2 0x584 JUMPI DUP1 PUSH1 0x0 PUSH2 0x968 JUMP JUMPDEST POP PUSH2 0x584 JUMPI DUP1 PUSH1 0x0 PUSH2 0x961 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x24 SWAP3 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SUB PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x77F855C9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0xA40 JUMPI DUP2 SWAP1 PUSH2 0xB54 JUMPI JUMPDEST PUSH4 0x1B627879 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB84 JUMPI JUMPDEST DUP2 PUSH2 0xB6E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB7F JUMPI PUSH1 0x24 SWAP2 MLOAD PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B8093B1 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0xA40 JUMPI DUP2 SWAP1 PUSH2 0xBC6 JUMPI JUMPDEST PUSH4 0x147CE66F PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xBF1 JUMPI JUMPDEST DUP2 PUSH2 0xBE0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB7F JUMPI PUSH1 0x24 SWAP2 MLOAD PUSH2 0xBB3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBD3 JUMP JUMPDEST POP POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xC52 JUMPI JUMPDEST DUP2 PUSH2 0xC28 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH1 0x20 PUSH2 0xC3B DUP3 PUSH2 0x2085 JUMP JUMPDEST SWAP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xC4E JUMPI CODESIZE PUSH2 0x8E2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC1B JUMP JUMPDEST PUSH3 0x1D9341 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x54D7A6B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 MSTORE CALLVALUE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH4 0x647BCFA1 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x166450C9 PUSH1 0xE3 SHL DUP3 MSTORE TIMESTAMP PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH4 0x4CD01EFB PUSH1 0xE1 SHL DUP3 MSTORE TIMESTAMP PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH3 0x8B5315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0xD28 PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x584 JUMPI DUP2 PUSH1 0x6 PUSH1 0x20 SWAP4 EQ SWAP2 DUP3 ISZERO PUSH2 0xD4D JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x7 SWAP3 POP POP EQ CODESIZE DUP1 PUSH2 0xD41 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0xD73 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x7 PUSH2 0xD88 SWAP2 EQ PUSH2 0x20DE JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xEA1 JUMPI POP PUSH2 0xDB8 PUSH2 0xDA2 DUP3 PUSH2 0x2317 JUMP JUMPDEST SWAP2 PUSH2 0xDB0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2063 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY DUP4 DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0xE1D JUMPI POP POP POP SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xDFB JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE26 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH2 0xE51 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE75 DUP4 PUSH2 0x248C JUMP JUMPDEST SWAP3 DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xE8D JUMPI PUSH1 0x5 SHL DUP6 ADD PUSH1 0x20 ADD MSTORE PUSH2 0xE49 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0xEAA DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0xED5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xD8E JUMP JUMPDEST SWAP1 PUSH2 0xEE1 PUSH1 0x1 SWAP2 PUSH2 0x248C JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xECD JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x60 PUSH2 0x200 PUSH1 0x40 MLOAD PUSH2 0xF0B DUP2 PUSH2 0x2046 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP4 DUP4 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE DUP4 PUSH2 0x120 DUP3 ADD MSTORE DUP4 PUSH2 0x140 DUP3 ADD MSTORE DUP4 PUSH2 0x160 DUP3 ADD MSTORE DUP4 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP4 PUSH2 0x1C0 DUP3 ADD MSTORE DUP3 PUSH2 0x1E0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF7D DUP2 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0xA DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x1268 JUMPI POP POP PUSH2 0xFAB SWAP3 POP SUB DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xE SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0xF SLOAD DUP2 DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x10 SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x12 SLOAD DUP2 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 SHR AND PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1032 PUSH2 0x2412 JUMP JUMPDEST PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x16 SLOAD PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x17 SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0x17 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x1232 JUMPI POP POP PUSH2 0x106F SWAP3 POP SUB DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x18 SLOAD DUP4 PUSH2 0x1085 DUP3 PUSH2 0x2359 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x120A JUMPI POP PUSH1 0x1 EQ PUSH2 0x11C5 JUMPI JUMPDEST POP POP PUSH2 0x10AE DUP2 PUSH2 0x503 SWAP5 SUB DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x200 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH2 0x200 PUSH2 0x11B0 PUSH2 0x118E PUSH2 0x10DF DUP5 MLOAD PUSH2 0x220 PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x240 DUP9 ADD SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x10F1 PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP10 ADD SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xFF PUSH1 0xA0 DUP7 ADD MLOAD AND PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xFF PUSH1 0xC0 DUP7 ADD MLOAD AND PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0xFF PUSH2 0x120 DUP7 ADD MLOAD AND PUSH2 0x140 DUP9 ADD MSTORE PUSH1 0xFF PUSH2 0x140 DUP7 ADD MLOAD AND PUSH2 0x160 DUP9 ADD MSTORE PUSH2 0x160 DUP6 ADD MLOAD PUSH2 0x180 DUP9 ADD MSTORE PUSH2 0x180 DUP6 ADD MLOAD PUSH2 0x1A0 DUP9 ADD MSTORE PUSH2 0x1A0 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP9 DUP4 SUB ADD PUSH2 0x1C0 DUP10 ADD MSTORE PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x1C0 DUP5 ADD MLOAD PUSH2 0x1E0 DUP8 ADD MSTORE PUSH2 0x1E0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP8 DUP4 SUB ADD DUP5 DUP9 ADD MSTORE PUSH2 0x1F02 JUMP JUMPDEST SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x220 DUP6 ADD MSTORE PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE SWAP1 SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP5 DUP3 LT PUSH2 0x11F4 JUMPI POP DUP2 ADD PUSH1 0x20 ADD SWAP3 POP PUSH2 0x10AE DUP2 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x11DC JUMP JUMPDEST PUSH2 0x503 SWAP7 POP DUP5 SWAP3 POP PUSH1 0x20 SWAP2 POP SWAP3 PUSH2 0x10AE SWAP4 PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 POP PUSH2 0x109D JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x105A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0xF96 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x12A3 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x12AB PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x4 DUP2 EQ PUSH2 0x15D9 JUMPI PUSH1 0x3 DUP2 LT PUSH2 0x15C0 JUMPI PUSH1 0x3 LT PUSH2 0x15B1 JUMPI CALLER DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND PUSH2 0x15A2 JUMPI CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x1593 JUMPI PUSH1 0x12 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0xFF DUP2 AND DUP3 LT ISZERO PUSH2 0x1584 JUMPI PUSH1 0x10 SLOAD PUSH2 0x1317 DUP2 TIMESTAMP PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1568 JUMPI SWAP1 PUSH2 0x133B PUSH2 0x1341 SWAP3 PUSH1 0x11 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP1 ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1568 JUMPI PUSH2 0x1361 PUSH1 0x1 SWAP2 PUSH2 0x23B3 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMPDEST PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1568 JUMPI PUSH1 0x64 SWAP2 PUSH2 0x1396 PUSH2 0x139B SWAP3 PUSH2 0x1390 PUSH1 0x13 SLOAD DUP1 SWAP5 PUSH2 0x2393 JUMP JUMPDEST SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x232F JUMP JUMPDEST DIV SWAP2 PUSH2 0x13A9 DUP4 PUSH1 0x14 SLOAD PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0xFF DUP2 EQ PUSH2 0x1554 JUMPI PUSH1 0x1 PUSH2 0xFF00 SWAP2 ADD PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x12 SSTORE CALLER DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x13EC DUP2 PUSH2 0x2014 JUMP JUMPDEST CALLER DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1540 JUMPI DUP1 PUSH1 0x1 PUSH2 0x1414 SWAP3 ADD PUSH1 0x15 SSTORE PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x152C JUMPI DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP2 DUP1 DUP1 DUP1 DUP5 CALLER GAS CALL PUSH2 0x1451 PUSH2 0x23D2 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x14F8 JUMPI POP PUSH1 0xFF PUSH1 0x12 SLOAD DUP2 DUP2 PUSH1 0x8 SHR AND DUP1 SWAP4 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xBBDD894F5E6D754C18172761A1A461095C26DE58905E706A8C33657573D40672 PUSH1 0x40 CALLER SWAP3 LOG3 AND SUB PUSH2 0x14AF JUMPI PUSH2 0x14A7 PUSH2 0x287A JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x2A0B JUMP JUMPDEST POP PUSH1 0x0 TIMESTAMP PUSH1 0x16 SSTORE PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x1254 JUMPI DUP3 PUSH1 0x4 PUSH2 0x400 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 POP PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE PUSH2 0x6A0 JUMP JUMPDEST SWAP1 PUSH2 0x1528 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH4 0xD086DB43 PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1F95 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP4 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH4 0x21B94F7B PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0xC394A433 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x2AB8F89 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0xD6A05DF PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH4 0x16F5E3B7 PUSH1 0xE2 SHL DUP4 MSTORE TIMESTAMP PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 DUP3 REVERT JUMPDEST PUSH1 0x24 DUP3 PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 PUSH2 0x15F0 DUP2 DUP5 PUSH1 0x8 SHR AND PUSH2 0x2274 JUMP JUMPDEST SWAP3 AND SWAP2 AND EQ PUSH1 0x0 EQ PUSH2 0x162A JUMPI PUSH2 0x1618 PUSH1 0x3C JUMPDEST PUSH2 0x1613 PUSH2 0xFFFF TIMESTAMP SWAP3 AND PUSH1 0x16 SLOAD PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x1 PUSH3 0x269D79 PUSH1 0xE2 SHL SUB NOT DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x1618 PUSH2 0x12C PUSH2 0x1602 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x164E PUSH2 0x2D2B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x503 PUSH2 0x16AB PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1EEF JUMP JUMPDEST POP PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x16CD PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xC4E JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x7 DUP4 LT ISZERO PUSH2 0x1BD9 JUMPI PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1BD5 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x1BD1 JUMPI PUSH2 0x144 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1BCD JUMPI PUSH2 0x164 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1BC9 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x1BC9 JUMPI DUP5 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1BC5 JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP9 ADD ADD GT PUSH2 0x1BC5 JUMPI PUSH2 0x1764 PUSH2 0x2755 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x1B8A JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x19 SSTORE PUSH2 0x1782 DUP8 PUSH2 0x2CE4 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0xFF NOT PUSH1 0xB SLOAD AND PUSH1 0xFF DUP9 AND OR PUSH1 0xB SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xC SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE SSTORE PUSH2 0xFF00 PUSH1 0xF SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 PUSH2 0xFFFF NOT AND OR OR PUSH1 0xF SSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x10 SSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0x11 SSTORE PUSH2 0xFFFF NOT PUSH1 0x12 SLOAD AND OR PUSH1 0x12 SSTORE CALLVALUE PUSH1 0x13 SSTORE CALLVALUE PUSH1 0x14 SSTORE DUP5 PUSH1 0x16 SSTORE PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x1807 DUP5 DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 CALLDATASIZE DUP2 CALLDATACOPY DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1AE7 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x1AE7 JUMPI DUP5 SWAP1 PUSH1 0xA SLOAD DUP4 PUSH1 0xA SSTORE DUP1 DUP5 LT PUSH2 0x1B36 JUMPI JUMPDEST POP ADD PUSH1 0xA DUP9 MSTORE DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AFB JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x185B DUP5 DUP3 PUSH2 0x2063 JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x1AE7 JUMPI DUP5 SWAP1 PUSH1 0x15 SLOAD DUP4 PUSH1 0x15 SSTORE DUP1 DUP5 LT PUSH2 0x1A63 JUMPI JUMPDEST POP ADD PUSH1 0x15 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP10 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1A25 JUMPI POP POP POP POP POP PUSH2 0x18AC PUSH1 0x18 SLOAD PUSH2 0x2359 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19C5 JUMPI JUMPDEST POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x192D JUMPI PUSH32 0xE9597995B7A2AF444CC28B2B776B88B1253D701282A9BCF902D4F59750DF7C57 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 DUP4 PUSH2 0x191F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x18 SSTORE JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP ADD ADD CALLDATALOAD CODESIZE DUP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x18 DUP8 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x1F NOT DUP5 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0x19AB JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH32 0xE9597995B7A2AF444CC28B2B776B88B1253D701282A9BCF902D4F59750DF7C57 SWAP8 SWAP7 SWAP5 LT PUSH2 0x198E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x18 SSTORE PUSH2 0x1905 JUMP JUMPDEST ADD PUSH1 0x24 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1980 JUMP JUMPDEST SWAP2 SWAP4 DUP7 PUSH1 0x1 DUP2 SWAP3 PUSH1 0x24 DUP9 DUP9 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x1948 JUMP JUMPDEST PUSH2 0x1A09 SWAP1 PUSH1 0x18 DUP9 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 DUP6 DUP6 LT PUSH2 0x1A0F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH2 0x2342 JUMP JUMPDEST CODESIZE PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3246 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x19ED JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP5 SSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 PUSH1 0x2 SWAP2 ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0x1895 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1AD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1AD3 JUMPI SWAP1 DUP6 SWAP2 PUSH1 0x1 SHL PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP4 PUSH1 0x1 SHL PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1ABE JUMPI POP PUSH2 0x187C JUMP JUMPDEST DUP11 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP12 SWAP1 SSTORE DUP8 SWAP4 POP PUSH1 0x2 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP3 ADD SSTORE SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1844 JUMP JUMPDEST PUSH2 0x1B84 SWAP1 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP5 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD PUSH2 0x2342 JUMP JUMPDEST CODESIZE PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1FB PUSH2 0x22B6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 PUSH2 0x1C3F PUSH2 0x1C3A PUSH2 0x1ED9 JUMP JUMPDEST PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI PUSH2 0x1C62 PUSH2 0x2755 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1C87 JUMPI JUMPDEST PUSH2 0x1C7F SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x6A0 PUSH2 0x2C82 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x1CC8 JUMPI JUMPDEST SWAP1 POP PUSH2 0x1C76 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1CFB JUMPI JUMPDEST DUP2 PUSH2 0x1CE2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x1CF6 PUSH2 0x1C7F SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x1CC1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1CD5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DD JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1DB8 JUMPI JUMPDEST PUSH2 0x1D31 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH2 0x1D39 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x1D41 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x5 EQ DUP1 ISZERO PUSH2 0x1D9E JUMPI JUMPDEST ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x14A7 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x135A5CDCDA5BDB881B9BDD08195B991959081E595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1DA7 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x6 EQ PUSH2 0x1D54 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB9181611 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP1 PUSH2 0x1DF9 JUMPI JUMPDEST SWAP1 POP PUSH2 0x1D28 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E2C JUMPI JUMPDEST DUP2 PUSH2 0x1E13 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI PUSH2 0x1E27 PUSH2 0x1D31 SWAP2 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x1DF2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1E06 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E5F PUSH2 0x1ED9 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1DD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1E9E PUSH2 0x1ED9 JUMP JUMPDEST AND PUSH2 0x1EAA DUP2 ISZERO ISZERO PUSH2 0x1FD6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x441 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x441 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB7F JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F20 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F13 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0xA50 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F6A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP2 DUP7 ADD MSTORE PUSH1 0x40 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1F5D JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1FC1 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1FA0 JUMP JUMPDEST ISZERO PUSH2 0x1FDD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2030 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x220 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2030 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2030 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xB7F JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2099 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F776E6572206F7220617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206973206E6F7420696E204661696C65642073746174757300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x217B PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x7 PUSH2 0x2190 SWAP2 EQ PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21A4 DUP2 ISZERO ISZERO PUSH2 0x1FD6 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2239 JUMPI PUSH1 0x17 SLOAD SWAP1 DUP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21D3 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2225 JUMPI PUSH1 0x17 SWAP1 MSTORE PUSH32 0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 EQ PUSH2 0x221C JUMPI PUSH1 0x1 ADD PUSH2 0x21C3 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141B185E595C881B9BDD08195B9C9BDB1B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SWAP2 AND ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2286 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2286 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2286 JUMPI JUMP JUMPDEST PUSH2 0x22BE PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x4 SUB PUSH2 0x2312 JUMPI PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 PUSH2 0x22E2 DUP2 DUP5 PUSH1 0x8 SHR AND PUSH2 0x2274 JUMP JUMPDEST SWAP3 AND SWAP2 AND EQ PUSH1 0x0 EQ PUSH2 0x2307 JUMPI PUSH2 0x2304 PUSH1 0x3C PUSH2 0x1613 PUSH2 0xFFFF TIMESTAMP SWAP3 AND PUSH1 0x16 SLOAD PUSH2 0x229C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2304 PUSH2 0x12C PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2030 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2286 JUMPI JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x234D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2342 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2389 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2373 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2368 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x239D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x2145 JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x240D JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2030 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2401 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2063 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 PUSH2 0x241F DUP3 PUSH2 0x2317 JUMP JUMPDEST SWAP2 PUSH2 0x242D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2063 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x15 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3206 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x2458 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x246B DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x244B JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2286 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x24A3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x3 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x24DB JUMPI JUMPDEST POP PUSH2 0x24C2 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 DUP3 PUSH1 0x8 SHR AND SWAP2 AND SUB PUSH1 0xFF DUP2 GT PUSH2 0x2286 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP2 POP EQ CODESIZE PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0xD SLOAD TIMESTAMP GT DUP1 PUSH2 0x25F5 JUMPI JUMPDEST ISZERO PUSH2 0x258A JUMPI PUSH1 0x9 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x2545 JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 OR PUSH1 0x9 SSTORE PUSH1 0xA SLOAD ISZERO PUSH2 0x2535 JUMPI PUSH1 0xA SLOAD PUSH1 0xFF PUSH1 0xF SLOAD AND GT PUSH2 0x2523 JUMPI JUMP JUMPDEST PUSH2 0x252B PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2533 PUSH2 0x2D54 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x253D PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2533 PUSH2 0x2C82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636865636B656420737461727420636F6E646974696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206E6F7420696E2061726D696E672077696E646F772E204361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C20726566756E64506C617965727320696E73746561640000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD TIMESTAMP LT PUSH2 0x24F1 JUMP JUMPDEST PUSH2 0x2608 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x3 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x2702 JUMPI JUMPDEST POP PUSH2 0x26FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26FC JUMPI PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2312 JUMPI PUSH1 0x10 SLOAD DUP1 TIMESTAMP LT PUSH2 0x26FC JUMPI PUSH1 0x11 SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x2676 DUP3 TIMESTAMP PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2697 SWAP3 PUSH2 0x133B SWAP2 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 DUP2 ISZERO PUSH2 0x26ED JUMPI POP PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x2286 JUMPI PUSH2 0x26BA PUSH1 0x1 SWAP2 PUSH2 0x23B3 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMPDEST PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2286 JUMPI PUSH1 0x64 SWAP2 PUSH2 0x1396 PUSH2 0x26E9 SWAP3 PUSH2 0x1390 PUSH1 0x13 SLOAD DUP1 SWAP5 PUSH2 0x2393 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 PUSH2 0x26BF JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP2 POP EQ ISZERO CODESIZE PUSH2 0x261D JUMP JUMPDEST PUSH1 0x10 SLOAD DUP1 TIMESTAMP LT PUSH2 0x26FC JUMPI PUSH1 0x11 SLOAD DUP1 TIMESTAMP LT ISZERO PUSH2 0x274E JUMPI PUSH2 0x272D DUP3 TIMESTAMP PUSH2 0x22A9 JUMP JUMPDEST SWAP1 PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2304 SWAP3 PUSH2 0x133B SWAP2 PUSH2 0x22A9 JUMP JUMPDEST POP POP PUSH1 0x64 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2766 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x19 SLOAD PUSH1 0x8 SHR AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x6 DUP2 EQ DUP1 ISZERO PUSH2 0x2870 JUMPI JUMPDEST PUSH2 0x2304 JUMPI POP PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0x2312 JUMPI PUSH1 0xD SLOAD TIMESTAMP GT ISZERO PUSH2 0x286B JUMPI PUSH1 0xA SLOAD PUSH1 0xFF PUSH1 0xF SLOAD AND GT PUSH2 0x2866 JUMPI PUSH1 0x10 SLOAD TIMESTAMP LT PUSH2 0x2861 JUMPI PUSH1 0x11 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2837 JUMPI PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 DUP3 PUSH1 0x8 SHR AND SWAP2 AND DUP1 DUP3 LT ISZERO PUSH2 0x2830 JUMPI PUSH1 0x16 SLOAD SWAP1 DUP2 PUSH2 0x27F3 JUMPI POP POP POP PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH2 0x2801 PUSH2 0x2814 SWAP5 PUSH2 0x2274 JUMP JUMPDEST AND SUB PUSH2 0x2825 JUMPI PUSH2 0xFFFF PUSH1 0x3C JUMPDEST AND SWAP1 PUSH2 0x229C JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2820 JUMPI PUSH1 0x4 SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH2 0xFFFF PUSH2 0x12C PUSH2 0x280D JUMP JUMPDEST POP POP PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 DUP2 ISZERO PUSH2 0x285A JUMPI PUSH1 0xFF AND GT PUSH2 0x2855 JUMPI PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH1 0x5 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x7 SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x7 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 DUP2 EQ PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8D6E8FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x6 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x291B JUMPI PUSH2 0x2906 JUMPI JUMPDEST POP DUP1 PUSH2 0x584 JUMPI POP PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI PUSH2 0x600 SWAP2 PUSH1 0x6 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 POP PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x2913 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x0 CODESIZE PUSH2 0x28BE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD8D6E8FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x7 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x291B JUMPI PUSH2 0x29B3 JUMPI JUMPDEST POP DUP1 PUSH2 0x584 JUMPI POP PUSH1 0x19 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0xA50 JUMPI PUSH2 0x700 SWAP2 PUSH1 0x7 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3226 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG3 POP PUSH2 0xFF00 NOT AND OR PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x29C0 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x0 CODESIZE PUSH2 0x296B JUMP JUMPDEST ISZERO PUSH2 0x29CF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2A16 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0x2C68 JUMPI JUMPDEST ISZERO PUSH2 0x441 JUMPI SELFBALANCE SWAP2 PUSH2 0x2A3B DUP4 ISZERO ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x2C5B JUMPI JUMPDEST POP PUSH1 0x0 DUP1 DUP2 PUSH1 0xA SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x2C22 JUMPI POP POP DUP4 PUSH2 0x2A68 SWAP3 SWAP4 SWAP5 DUP3 GT PUSH2 0x2C1A JUMPI PUSH2 0x22A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A74 DUP2 ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x19 DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x19 EQ OR ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x64 PUSH2 0x2A93 SWAP2 DIV DUP1 SWAP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x44D JUMPI DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH2 0x2BBE JUMPI JUMPDEST POP DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x2AE9 PUSH2 0x23D2 JUMP JUMPDEST POP ISZERO PUSH2 0x2B81 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0xFF PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0xC4E JUMPI PUSH2 0x2B2B PUSH1 0x24 DUP5 SWAP3 DUP8 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9BEA789 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0x1F3F JUMP JUMPDEST GAS CALL DUP1 ISZERO PUSH2 0x44D JUMPI PUSH2 0x2B71 JUMPI JUMPDEST POP POP PUSH32 0xD66662C0DED9E58FD31D5E44944BCFD07FFC15E6927ECC1382E7941CB7BD24C4 PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST DUP2 PUSH2 0x2B7B SWAP2 PUSH2 0x2063 JUMP JUMPDEST CODESIZE PUSH2 0x2B38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DDDB995C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2BFE JUMPI JUMPDEST DUP2 PUSH2 0x2BDB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x441 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x441 JUMPI DUP2 SWAP1 DUP4 SWAP1 DUP3 PUSH2 0x2ACE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2BCE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP1 POP DUP1 PUSH2 0x22A9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2C53 PUSH1 0x1 SWAP2 PUSH2 0x2C33 DUP6 PUSH2 0x212A JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD SWAP1 PUSH2 0x229C JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x2A4D JUMP JUMPDEST PUSH2 0x2C63 PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2A44 JUMP JUMPDEST POP PUSH2 0x2C71 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x7 EQ PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x2C8A PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0x2CCA JUMPI JUMPDEST ISZERO PUSH2 0x1DD JUMPI SELFBALANCE DUP1 ISZERO PUSH2 0x2A74 DUP2 ISZERO PUSH2 0x2CB6 DUP2 PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x29C8 JUMPI PUSH2 0x2CC5 PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x29C8 JUMP JUMPDEST POP PUSH2 0x2CD3 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x7 EQ PUSH2 0x2CA0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D3F JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2D5C PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x7 SUB PUSH2 0x31C0 JUMPI PUSH1 0xA SLOAD ISZERO PUSH2 0x3184 JUMPI PUSH1 0x1 SWAP1 DUP3 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2EC9 JUMPI PUSH2 0x2D90 DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP6 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2DC1 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2D7D JUMP JUMPDEST DUP5 DUP1 DUP1 DUP1 PUSH1 0xE SLOAD DUP6 GAS CALL PUSH2 0x2DD3 PUSH2 0x23D2 JUMP JUMPDEST POP ISZERO PUSH2 0x2E74 JUMPI DUP1 DUP6 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2E60 JUMPI SWAP1 PUSH2 0x2E14 DUP3 PUSH1 0x1 DUP1 SWAP6 SWAP5 ADD PUSH1 0x17 SSTORE PUSH1 0x17 PUSH2 0x215B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP3 SHL SWAP2 DUP7 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH32 0x48D31F1C958CD44F1F83A52AE2DFAF61E88A1B82C07A6D5711A4ABEF60B6531E PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMPDEST SWAP1 PUSH2 0x2DB8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0xE SLOAD DUP2 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x2E91 PUSH1 0x40 DUP7 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x229C JUMP JUMPDEST SWAP1 SSTORE PUSH32 0xAF73B0B217208B61BE286BBC37095BCE7EB8B9CCF617244C2F0F154E8E04E3FF PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP4 SWAP3 PUSH2 0x2E5A JUMP JUMPDEST POP SWAP2 SWAP1 PUSH2 0x2ED4 PUSH2 0x2927 JUMP JUMPDEST SELFBALANCE PUSH2 0x2F6D JUMPI JUMPDEST POP PUSH1 0x17 SLOAD SWAP1 PUSH1 0xE SLOAD SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x17 DUP2 MSTORE PUSH32 0xC624B66CC0138B8FABC209247F72D758E1CF3343756D543BADBF24212BED8C15 SWAP1 JUMPDEST DUP7 DUP2 LT PUSH2 0x2F4B JUMPI POP POP SUB SWAP1 KECCAK256 SWAP2 PUSH32 0xBB93C7C839BDDD97272C8E974D54D30ADFA3AA55DF63A52F02B7192EFD361A24 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG4 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP5 SWAP4 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2F12 JUMP JUMPDEST PUSH2 0x2F75 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0x316A JUMPI JUMPDEST ISZERO PUSH2 0x441 JUMPI SELFBALANCE SWAP1 PUSH2 0x2F9A DUP3 ISZERO ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x315D JUMPI JUMPDEST ISZERO PUSH2 0x311C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2FB5 DUP2 ISZERO PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x19 DUP3 MUL SWAP1 DUP3 DUP3 DIV PUSH1 0x19 EQ OR ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x64 PUSH2 0x2FD4 SWAP2 DIV DUP1 SWAP3 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x30C9 JUMPI DUP5 SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH2 0x30D4 JUMPI JUMPDEST POP DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x302A PUSH2 0x23D2 JUMP JUMPDEST POP ISZERO PUSH2 0x2B81 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0xFF PUSH1 0xB SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x306C PUSH1 0x24 DUP7 SWAP3 DUP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9BEA789 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0x1F3F JUMP JUMPDEST GAS CALL DUP1 ISZERO PUSH2 0x30C9 JUMPI PUSH2 0x30B5 JUMPI JUMPDEST POP PUSH32 0xD66662C0DED9E58FD31D5E44944BCFD07FFC15E6927ECC1382E7941CB7BD24C4 PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE CODESIZE PUSH2 0x2EDA JUMP JUMPDEST DUP4 PUSH2 0x30C2 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x2063 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3114 JUMPI JUMPDEST DUP2 PUSH2 0x30F1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2063 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BD9 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1BD9 JUMPI DUP4 SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x300F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x30E4 JUMP JUMPDEST SWAP2 SWAP1 DUP1 DUP2 PUSH1 0xA SLOAD JUMPDEST DUP1 DUP3 LT PUSH2 0x3144 JUMPI POP POP DUP4 PUSH2 0x313F SWAP3 SWAP4 SWAP5 DUP3 GT PUSH2 0x2C1A JUMPI PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x2FA9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3155 PUSH1 0x1 SWAP2 PUSH2 0x2C33 DUP6 PUSH2 0x212A JUMP JUMPDEST SWAP3 ADD SWAP1 PUSH2 0x3124 JUMP JUMPDEST PUSH2 0x3165 PUSH2 0x2927 JUMP JUMPDEST PUSH2 0x2FA3 JUMP JUMPDEST POP PUSH2 0x3173 PUSH2 0x2777 JUMP JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x7 EQ PUSH2 0x2F88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81C1B185E595C9CC81D1BC81C99599D5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E206E6F7420696E204661696C65642073746174757300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID SSTORE DELEGATECALL BASEFEE REVERT 0xEA SWAP9 0xC4 0xD2 SWAP15 0xB3 BLOCKHASH PUSH22 0x7EF0A66CD03DBB9538908A6A81D96026B71EC47539BA PUSH3 0x8632D4 DUP13 GASLIMIT 0xC7 CREATE2 PUSH3 0xC07DB2 EXP PREVRANDAO 0xCF PUSH9 0x423691D5D79B20F87B 0xA8 COINBASE CODESIZE 0xAE 0xDF 0xB1 RETURNDATASIZE 0x2D PUSH23 0xD1F4B7BE834882E410B3E3A8AFAF69F83600AE24DB3543 SWAP2 0xD2 CALLDATACOPY DUP14 0x2E LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xC3 BYTE 0x4E 0x29 PUSH22 0xC1A7AF59AFE8B066451F2EDC2019B188E579B95E2BC4 0xC3 ADDRESS MSTORE8 PUSH11 0x64736F6C634300081E0033 ","sourceMap":"62299:49920:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;:::i;:::-;;;;;;89286:8;62299:49920;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;68736:50;62299:49920;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;62299:49920:11;;2627:22:0;2623:91;;2742:8;;;:::i;:::-;62299:49920:11;;2623:91:0;-1:-1:-1;;;2672:31:0;;62299:49920:11;;;;;2672:31:0;;62299:49920:11;;;;;;;;;;85223:9;:13;62299:49920;;;;;;;85382:14;62299:49920;;85360:10;;:37;:78;;;;;62299:49920;85360:103;;;;;62299:49920;;;;85694:20;;:::i;:::-;62299:49920;;;;;;85717:13;-1:-1:-1;62299:49920:11;;;85817:39;85223:9;85817:21;62299:49920;85817:39;:::i;:::-;:21;62299:49920;86098:48;62299:49920;85956:37;85223:9;85956:23;62299:49920;85956:37;:::i;:::-;62299:49920;85956:23;62299:49920;;;85223:9;;62299:49920;;;;;;86098:48;62299:49920;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;85360:103;-1:-1:-1;62299:49920:11;;-1:-1:-1;;;;;62299:49920:11;85360:10;85442:21;85360:103;;:78;62299:49920;;-1:-1:-1;;;85401:37:11;;85360:10;62299:49920;85401:37;;62299:49920;;-1:-1:-1;62299:49920:11;;;;85401:37;;62299:49920;;85401:37;;;;;;;;;;;85360:78;;;;;85401:37;;;62299:49920;85401:37;;62299:49920;85401:37;;;;;;62299:49920;85401:37;;;:::i;:::-;;;62299:49920;;;;;;;:::i;:::-;85401:37;;;62299:49920;;;;85401:37;;;-1:-1:-1;85401:37:11;;;62299:49920;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;99423:20;;:::i;:::-;62299:49920;;;;;;99447:14;99423:38;:86;;;;;62299:49920;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;99423:86;99465:20;;;;:::i;:::-;62299:49920;;;;;;;99465:44;99489:20;99465:44;99423:86;;;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;96025:26;62299:49920;95983:15;96017:34;:71;;;62299:49920;;;;;;;;;;;96017:71;-1:-1:-1;96063:25:11;62299:49920;95983:15;96055:33;96017:71;;62299:49920;;;;;;;;;;;;;;88180:12;62299:49920;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;:::i;:::-;;;;69056:44;62299:49920;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;:::i;:::-;;;;69157:55;62299:49920;;;;;;;;;;;;;;;;;;;;;;;2466:103:6;;:::i;:::-;62299:49920:11;;-1:-1:-1;;;;;62299:49920:11;65996:10;:21;:62;;;;62299:49920;65974:135;;;:::i;:::-;66120:1;;:::i;:::-;1857::6;62299:49920:11;;;;65996:62;-1:-1:-1;66021:14:11;62299:49920;;;-1:-1:-1;;;66021:37:11;;65996:10;62299:49920;66021:37;;62299:49920;;;;;;66021:37;;62299:49920;;-1:-1:-1;;;;;62299:49920:11;66021:37;;;;;;;;;;65996:62;;-1:-1:-1;65996:62:11;;66021:37;;62299:49920;66021:37;;62299:49920;66021:37;;;;;;62299:49920;66021:37;;;:::i;:::-;;;62299:49920;;;;;65974:135;62299:49920;;:::i;:::-;66021:37;;;;;-1:-1:-1;66021:37:11;;62299:49920;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:6;;:::i;:::-;62299:49920:11;;-1:-1:-1;;;;;62299:49920:11;65996:10;:21;:62;;;;62299:49920;65974:135;;;:::i;:::-;86363:242;;:::i;65996:62::-;-1:-1:-1;66021:14:11;62299:49920;;;-1:-1:-1;;;66021:37:11;;65996:10;62299:49920;66021:37;;62299:49920;;;;;;66021:37;;62299:49920;;-1:-1:-1;;;;;62299:49920:11;66021:37;;;;;;;;;;65996:62;;-1:-1:-1;65996:62:11;;66021:37;;62299:49920;66021:37;;62299:49920;66021:37;;;;;;62299:49920;66021:37;;;:::i;:::-;;;62299:49920;;;;;65974:135;62299:49920;;:::i;:::-;66021:37;;;;;-1:-1:-1;66021:37:11;;62299:49920;;;;;;;;;;2466:103:6;;:::i;:::-;74732:10:11;74859:18;74855:187;;75064:28;62299:49920;74609:15;;75056:36;75052:182;;62299:49920;75256:26;62299:49920;74609:15;;75248:34;75244:178;;62299:49920;75064:12;62299:49920;;75469:33;62299:49920;;;;75438:64;;;;75434:226;;62299:49920;75687:29;62299:49920;75674:9;;:42;75670:217;;74732:10;;62299:49920;;75256:26;62299:49920;;;;;;;;75897:44;;75064:28;62299:49920;;;;-1:-1:-1;;;75980:32:11;;74732:10;62299:49920;75980:32;;62299:49920;-1:-1:-1;;;;;62299:49920:11;;;;;;;75980:32;62299:49920;;75980:32;;;;;;;;62299:49920;;75980:32;;;62299:49920;76120:3;;76116:743;;62299:49920;75064:12;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;;;75064:12;62299:49920;75064:12;62299:49920;:::i;:::-;;;;75256:26;62299:49920;74732:10;;62299:49920;;;;;;;;;;;;;;;74732:10;62299:49920;;75256:26;62299:49920;;;;;;;;;;;;;;77127:34;75674:9;77127:21;62299:49920;77127:34;:::i;:::-;:21;62299:49920;77277:36;75674:9;77277:23;62299:49920;77277:36;:::i;:::-;:23;62299:49920;103576:239;62299:49920;103576:239;;;62299:49920;103576:297;;;;62299:49920;103576:342;;;;62299:49920;103572:484;;62299:49920;;;104445:15;62299:49920;;;;;;;;;;;;;;;;-1:-1:-1;62299:49920:11;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;74609:15;62299:49920;;104424:55;-1:-1:-1;;62299:49920:11;;104445:15;62299:49920;75064:28;62299:49920;;;-1:-1:-1;;;;;62299:49920:11;77561:39;;;;;62299:49920;;;75980:32;62299:49920;;;;;;;;;77561:39;;74732:10;62299:49920;77561:39;;62299:49920;77561:39;;;;;;;;62299:49920;75064:12;62299:49920;;;75674:9;;62299:49920;;;;;;77724:62;62299:49920;74732:10;77724:62;;62299:49920;;;;;77561:39;;;;:::i;:::-;;;;;;62299:49920;;;;;;;;;;;77561:39;62299:49920;;;;;;-1:-1:-1;62299:49920:11;;;;75980:32;-1:-1:-1;62299:49920:11;103572:484;-1:-1:-1;75064:28:11;62299:49920;-1:-1:-1;;;;;62299:49920:11;103947:42;;;;;62299:49920;;-1:-1:-1;;;103947:42:11;;62299:49920;;103947:42;;62299:49920;;;;;;;;;;;;;103947:42;;;;;;;;;;;103572:484;;;;;103947:42;;;;;:::i;:::-;62299:49920;;103947:42;;;;62299:49920;;103576:342;62299:49920;;;103576:342;-1:-1:-1;103576:342:11;;:297;62299:49920;;;103576:297;-1:-1:-1;103576:297:11;;:239;62299:49920;;;103576:239;-1:-1:-1;103576:239:11;;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;75980:32;62299:49920;;76116:743;75980:32;62299:49920;75256:26;62299:49920;;;;;;;76306:12;76296:22;76306:12;;62299:49920;;-1:-1:-1;;;76431:44:11;;74732:10;62299:49920;76431:44;;62299:49920;;;;;;76431:44;;;;;;;;;;76292:556;-1:-1:-1;;;76397:180:11;;62299:49920;;75980:32;;-1:-1:-1;76397:180:11;76431:44;;62299:49920;76431:44;;62299:49920;76431:44;;;;;;62299:49920;76431:44;;;:::i;:::-;;;62299:49920;;;;75980:32;62299:49920;;76431:44;;62299:49920;-1:-1:-1;62299:49920:11;;76431:44;;;-1:-1:-1;76431:44:11;;76292:556;62299:49920;;-1:-1:-1;;;76681:45:11;;74732:10;62299:49920;76681:45;;62299:49920;;;;;;76681:45;;;;;;;;;;76292:556;-1:-1:-1;;;76646:186:11;;62299:49920;;75980:32;;-1:-1:-1;76646:186:11;76681:45;;62299:49920;76681:45;;62299:49920;76681:45;;;;;;62299:49920;76681:45;;;:::i;:::-;;;62299:49920;;;;75980:32;62299:49920;;76681:45;;;;;-1:-1:-1;76681:45:11;;62299:49920;-1:-1:-1;;;;;62299:49920:11;;;;;;75980:32;;;;62299:49920;75980:32;;62299:49920;75980:32;;;;;;62299:49920;75980:32;;;:::i;:::-;;;62299:49920;;;;;;;;:::i;:::-;;;;;75256:26;62299:49920;;;;;75980:32;;;62299:49920;;;;75980:32;;;-1:-1:-1;75980:32:11;;75897:44;-1:-1:-1;;;75926:15:11;;62299:49920;;75926:15;75670:217;-1:-1:-1;;;75740:55:11;;62299:49920;;75674:9;62299:49920;;;;75740:55;75434:226;-1:-1:-1;;;75526:45:11;;62299:49920;;;;75526:45;75244:178;-1:-1:-1;;;75306:51:11;;74609:15;62299:49920;;;;;;75306:51;75052:182;-1:-1:-1;;;75116:57:11;;74609:15;62299:49920;;;;;;75116:57;74855:187;-1:-1:-1;;;74905:21:11;;62299:49920;;74905:21;62299:49920;;;;;;;;;;;;;;69262:46;62299:49920;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;96499:20;;:::i;:::-;62299:49920;;;;;;;96538:19;96543:14;62299:49920;96538:19;;:41;;;;;62299:49920;;;;;;;;;;;96538:41;96566:13;62299:49920;;96561:18;;96538:41;;;;62299:49920;;;;;;;;;;;;;96953:20;;:::i;:::-;62299:49920;;;;;;96977:13;96945:81;96953:37;;96945:81;:::i;:::-;97128:12;62299:49920;97076:17;;97124:31;;;;;;97461:20;62299:49920;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;62299:49920:11;;;;97574:17;97607:13;97622:31;;;;;;62299:49920;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;;;;;97655:3;97760:23;;;:::i;:::-;62299:49920;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;97236:19;62299:49920;;;;;;97736:294;;97655:3;62299:49920;;97607:13;;97736:294;97908:23;;;:::i;:::-;62299:49920;;;;;;;;-1:-1:-1;;;;;62299:49920:11;97897:7;;;:::i;:::-;62299:49920;;;;;;;;;;;;;;;97736:294;;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;97157:3;97256:23;;;:::i;:::-;62299:49920;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;97236:19;62299:49920;;;;;;97232:173;;97157:3;62299:49920;;97109:13;;97232:173;97382:7;;62299:49920;97382:7;;:::i;:::-;97232:173;;;;;62299:49920;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;95250:12;62299:49920;;;;;;;;95250:12;62299:49920;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;;62299:49920:11;;;;;;-1:-1:-1;62299:49920:11;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;;;;;;;;;;;;;2466:103:6;;:::i;:::-;80666:20:11;;:::i;:::-;62299:49920;;;;;;;80983:18;;80979:655;;81652:13;81648:17;;81644:110;;81652:13;-1:-1:-1;81807:81:11;;81975:10;62299:49920;;;;;;;;;;;81964:79;;81975:10;62299:49920;;81652:13;62299:49920;;;;;;;;82138:21;82134:78;;82307:23;62299:49920;;;;;;;;;;82307:53;;;82303:82;;82501:25;62299:49920;82493:33;80843:15;;82493:33;:::i;:::-;62299:49920;82530:3;62299:49920;;;;;;82530:3;62299:49920;;;;;;;;82665:51;82492:225;62299:49920;82665:23;62299:49920;82665:51;:::i;:::-;82492:225;;:::i;:::-;82746:23;62299:49920;82746:34;;;;-1:-1:-1;;62299:49920:11;;;;;;;82920:57;62299:49920;82920:57;;:::i;:::-;:67;;62299:49920;82746:258;;82530:3;62299:49920;;;;;;82530:3;62299:49920;;;;;;;82530:3;62299:49920;83334:19;83333:45;62299:49920;83138:39;83156:21;62299:49920;83138:39;;;:::i;:::-;83334:19;;:::i;:::-;83333:45;:::i;:::-;62299:49920;;83506:33;62299:49920;83506:23;62299:49920;83506:33;:::i;:::-;:23;62299:49920;;;;;;;;;;;;;;;;;;82307:23;62299:49920;81975:10;62299:49920;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;81975:10;62299:49920;;84017:30;62299:49920;84017:30;;62299:49920;82746:23;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;;;82746:23;62299:49920;;:::i;:::-;;;;;;;-1:-1:-1;;;;;;62299:49920:11;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;;;81975:10;;;;;;84201:36;;;;:::i;:::-;84343:3;;84339:105;;62299:49920;;82307:23;62299:49920;;;;;;;;83506:23;62299:49920;;;;;;;;;;84514:81;62299:49920;81975:10;84514:81;;62299:49920;84666:53;62299:49920;;84850:14;;:::i;:::-;84895:5;;:::i;84662:309::-;103576:239;-1:-1:-1;80843:15:11;104113:27;62299:49920;104445:15;62299:49920;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;80843:15;62299:49920;;104424:55;-1:-1:-1;;;62299:49920:11;;104445:15;62299:49920;84662:309;;84339:105;62299:49920;;;;84406:38;;;;;;;;81975:10;62299:49920;84406:38;;62299:49920;;;;;;;;;;82530:3;62299:49920;;;;:::i;:::-;84406:38;;;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;-1:-1:-1;;;62299:49920:11;;82665:23;62299:49920;;;;;;-1:-1:-1;;;62299:49920:11;;82665:23;62299:49920;;;;;82746:258;;;;;;82303:82;-1:-1:-1;;;82370:15:11;;62299:49920;82370:15;;82134:78;-1:-1:-1;;;82201:11:11;;62299:49920;;82201:11;81964:79;-1:-1:-1;;;82031:12:11;;62299:49920;;82031:12;81807:81;-1:-1:-1;;;81874:14:11;;62299:49920;;81874:14;81644:110;81728:25;62299:49920;-1:-1:-1;;;81711:43:11;;80843:15;62299:49920;;;;;;81711:43;80979:655;62299:49920;;81032:23;62299:49920;;;81032:27;62299:49920;;;;;81032:27;:::i;:::-;81031:87;62299:49920;;;81032:57;81031:87;62299:49920;;;81315:40;81110:2;81031:87;81315:32;62299:49920;80843:15;62299:49920;;81315:27;62299:49920;81315:32;:::i;:::-;:40;:::i;:::-;-1:-1:-1;;;;;;81529:18:11;;62299:49920;;81529:18;81031:87;81315:40;81115:3;81031:87;;62299:49920;;;;;;;;;;;;;1500:62:0;;:::i;:::-;62299:49920:11;;-1:-1:-1;;;;;;62299:49920:11;;;;;;-1:-1:-1;;;;;62299:49920:11;3052:40:0;62299:49920:11;;3052:40:0;62299:49920:11;;;;;;;;;;;;;;;;95590:20;;:::i;:::-;62299:49920;;;;;;;:::i;:::-;-1:-1:-1;62299:49920:11;;-1:-1:-1;;62299:49920:11;;;;;;:::i;:::-;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:6;;:::i;:::-;72166:12:11;62299:49920;;;;;;-1:-1:-1;;62299:49920:11;;;72166:12;62299:49920;72341:6;;;:::i;:::-;62299:49920;;;72359:57;62299:49920;;;72359:57;62299:49920;;;72523:24;62299:49920;;;;;;72523:24;62299:49920;;;72585:28;62299:49920;;;72651:26;62299:49920;;;72715:29;62299:49920;;72782:33;62299:49920;;;;;;;;;;;72782:33;62299:49920;;;72924:25;62299:49920;;;72987:23;62299:49920;;;73048:26;62299:49920;;;73048:26;62299:49920;73202:9;73163:21;62299:49920;73202:9;73310:23;62299:49920;;73457:27;62299:49920;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;72523:12;62299:49920;;72523:12;62299:49920;;;;;;;;;72523:12;62299:49920;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;73677:23;62299:49920;;73677:23;62299:49920;;;;;;;;;73677:23;62299:49920;;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;;;;;;;;;;;;;73789:17;62299:49920;;:::i;:::-;;;;;;;;;;;;;;;;;73830:57;;62299:49920;;;;;;;;;;;;;;;;;;;;;;;73789:17;62299:49920;;;;73871:15;62299:49920;;-1:-1:-1;;;;;62299:49920:11;;;;73830:57;62299:49920;;;;;;;;;;;;;;;;;73789:17;62299:49920;;-1:-1:-1;;;;;;;;;;;62299:49920:11;-1:-1:-1;;62299:49920:11;;;;;;;;;;;;;;;73830:57;62299:49920;;;;;;;;;;;;;73789:17;62299:49920;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73789:17;62299:49920;;;;;;;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;62299:49920:11;-1:-1:-1;62299:49920:11;;;;;;;;;-1:-1:-1;;;;;;62299:49920:11;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;;;;;72359:57;;62299:49920;;;;;;;;;;;;;;-1:-1:-1;;;;;;62299:49920:11;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72359:57:11;62299:49920;;;;-1:-1:-1;;;62299:49920:11;;72987:23;62299:49920;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;69471:72;62299:49920;;;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2466:103:6;;:::i;:::-;62299:49920:11;;-1:-1:-1;;;;;62299:49920:11;65996:10;:21;:62;;;;62299:49920;65974:135;;;:::i;:::-;87005:4;;:::i;65996:62::-;-1:-1:-1;66021:14:11;62299:49920;;;-1:-1:-1;;;66021:37:11;;65996:10;62299:49920;66021:37;;62299:49920;;;;;;66021:37;;62299:49920;;-1:-1:-1;;;;;62299:49920:11;66021:37;;;;;;;;;;65996:62;;-1:-1:-1;65996:62:11;;66021:37;;62299:49920;66021:37;;62299:49920;66021:37;;;;;;62299:49920;66021:37;;;:::i;:::-;;;62299:49920;;;;;65974:135;62299:49920;;:::i;:::-;66021:37;;;;;-1:-1:-1;66021:37:11;;62299:49920;;;;;;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;65996:10;:21;:62;;;;62299:49920;65974:135;;;:::i;:::-;2466:103:6;;:::i;:::-;87410:20:11;;:::i;:::-;62299:49920;;;;;;87434:20;87410:44;:104;;;;62299:49920;;;;87622:14;;:::i;62299:49920::-;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;87410:104;87476:20;;;:::i;:::-;62299:49920;;;;;;87500:14;87476:38;87410:104;;65996:62;-1:-1:-1;66021:14:11;62299:49920;;;-1:-1:-1;;;66021:37:11;;65996:10;62299:49920;66021:37;;62299:49920;;;;;;66021:37;;62299:49920;;-1:-1:-1;;;;;62299:49920:11;66021:37;;;;;;;;;;65996:62;;-1:-1:-1;65996:62:11;;66021:37;;62299:49920;66021:37;;62299:49920;66021:37;;;;;;62299:49920;66021:37;;;:::i;:::-;;;62299:49920;;;;;65974:135;62299:49920;;:::i;:::-;66021:37;;;;;-1:-1:-1;66021:37:11;;62299:49920;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;:::i;:::-;;;;68842:44;62299:49920;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;:::i;:::-;;88485:46;88493:18;;;88485:46;:::i;:::-;62299:49920;;88599:8;62299:49920;;;;;;;;;;;;;;;;;;;;;;;;;;;;;69362:48;62299:49920;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;62299:49920:11;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;97128:12;62299:49920;;;;;;97128:12;-1:-1:-1;62299:49920:11;;-1:-1:-1;62299:49920:11;;;-1:-1:-1;62299:49920:11;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;62299:49920:11;;-1:-1:-1;62299:49920:11;;;-1:-1:-1;62299:49920:11;:::o;98509:642::-;98595:20;;:::i;:::-;62299:49920;;;;;;98619:13;98587:81;98595:37;;98587:81;:::i;:::-;-1:-1:-1;;;;;62299:49920:11;98718:46;98726:18;;;98718:46;:::i;:::-;62299:49920;;;98853:8;62299:49920;;;;;;;;;;;98996:28;62299:49920;;;;98992:39;;;;;;99131:12;;;;62299:49920;98509:642;:::o;99033:3::-;62299:49920;;;;;;;98996:28;62299:49920;;;;;;-1:-1:-1;;;;;62299:49920:11;99057:39;;99053:56;;62299:49920;;98977:13;;99053:56;99098:11;;;;62299:49920;99098:11;:::o;62299:49920::-;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;89710:916::-;89804:20;;:::i;:::-;62299:49920;;;;;;89934:13;89929:18;89925:184;;90243:23;62299:49920;;;90243:27;62299:49920;;;;;90243:27;:::i;:::-;90242:83;62299:49920;;;90243:57;90242:83;62299:49920;;;90470:40;90317:2;90470:32;62299:49920;90135:15;62299:49920;;90470:27;62299:49920;90470:32;:::i;:40::-;89710:916;:::o;90242:83::-;90470:40;90322:3;90242:83;;89925:184;62299:49920;89964:8;:::o;62299:49920::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;82746:23;62299:49920;;;;;;82746:23;-1:-1:-1;62299:49920:11;;-1:-1:-1;62299:49920:11;;;;;;-1:-1:-1;62299:49920:11;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;:::i;:::-;;;;-1:-1:-1;62299:49920:11;;;;:::o;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;62299:49920:11;;;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;62299:49920:11;;;;;;;:::o;94493:582::-;94585:20;;:::i;:::-;62299:49920;;;;;;94715:13;94710:18;;:40;;;;;94493:582;94706:202;;;62299:49920;94493:582;:::o;94706:202::-;94774:26;62299:49920;;;;;;;;;;;;;;;94767:59;:::o;94710:40::-;94737:13;62299:49920;;94732:18;94710:40;;;78345:1517;78579:26;62299:49920;78457:15;78571:34;:71;;;78345:1517;62299:49920;;;78829:28;62299:49920;;;;;;-1:-1:-1;;62299:49920:11;;;78829:28;62299:49920;78579:12;62299:49920;79144:32;79140:442;;78579:12;62299:49920;;79626:33;62299:49920;;-1:-1:-1;79592:263:11;;78345:1517::o;79592:263::-;79687:13;;:::i;:::-;;;:::i;:::-;78345:1517::o;79140:442::-;79315:13;;:::i;:::-;79449:4;;:::i;62299:49920::-;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;;;;;;;78571:71;62299:49920;78617:25;62299:49920;78457:15;78609:33;78571:71;;92139:2030;92343:20;;:::i;:::-;62299:49920;;;;;;92473:13;92468:18;;;:40;;;;92139:2030;92464:206;;;-1:-1:-1;;;;;62299:49920:11;;;;;92473:13;62299:49920;;;;;;;;92684:17;92680:174;;62299:49920;;92868:6;62299:49920;;;;;;;;92864:171;;93057:25;62299:49920;92238:15;;93049:33;93045:191;;93259:23;62299:49920;92238:15;;93250:32;;93246:184;;93460:33;92238:15;;93460:33;:::i;:::-;62299:49920;93497:3;62299:49920;;;;;;93497:3;62299:49920;;;;;;;93459:97;93504:51;;;;:::i;93459:97::-;93643:23;62299:49920;;93643:34;;;;-1:-1:-1;;;62299:49920:11;;;;;;;93777:57;62299:49920;93777:57;;:::i;:::-;:67;;62299:49920;93643:218;;93497:3;62299:49920;;;;;;93497:3;62299:49920;;;;;;;93497:3;62299:49920;94037:19;94036:45;62299:49920;93891:39;93909:21;62299:49920;93891:39;;;:::i;94036:45::-;62299:49920;92139:2030;:::o;93643:218::-;;;;;;93246:184;93299:8;;62299:49920;93299:8;:::o;93045:191::-;93099:8;62299:49920;93099:8;:::o;92468:40::-;92495:13;62299:49920;;92490:18;;92468:40;;;90884:856;91124:25;62299:49920;90982:15;;91116:33;91112:222;;91357:23;62299:49920;90982:15;;91348:32;;91344:217;;91579:33;90982:15;;91579:33;:::i;:::-;62299:49920;91616:3;62299:49920;;;;;;91616:3;62299:49920;;;;;;;91578:97;91623:51;;;;:::i;91344:217::-;91397:10;;91404:3;91397:10;:::o;2575:307:6:-;1899:1;2702:7;62299:49920:11;2702:18:6;2698:86;;1899:1;2702:7;62299:49920:11;2575:307:6:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:6;;-1:-1:-1;2743:30:6;100211:3064:11;62299:49920;100350:15;62299:49920;;;;;;;;;;100369:14;100350:33;;:69;;;;100211:3064;100346:224;;62299:49920;100682:28;62299:49920;100598:15;100674:36;100670:173;;100906:26;62299:49920;100598:15;100897:35;;100893:188;;100682:12;62299:49920;;101189:33;62299:49920;;-1:-1:-1;101155:199:11;;101428:25;62299:49920;100598:15;101420:33;101416:182;;101660:23;62299:49920;100598:15;101652:31;101660:23;;;101704;62299:49920;;;;;;;;;101704:53;;;;101700:199;;101917:27;62299:49920;;101917:32;;;101970:20;;;100906:26;101970:20;:::o;101913:787::-;62299:49920;102154:27;102105:174;102154:27;;:::i;:::-;62299:49920;102154:57;102153:125;;62299:49920;102236:9;102153:125;62299:49920;102105:174;;:::i;:::-;100598:15;102097:182;62299:49920;;;102429:13;102422:20;:::o;102093:607::-;100906:26;102564:20;:::o;102153:125::-;62299:49920;102269:9;102153:125;;101700:199;101778:21;;100369:14;101778:21;:::o;101648:1618::-;102765:23;62299:49920;;;;;;102765:28;;;102761:178;;62299:49920;;-1:-1:-1;102953:203:11;;100369:14;103170:21;:::o;102953:203::-;101189:33;103030:27;:::o;102761:178::-;102814:20;;101660:23;102814:20;:::o;101416:182::-;100682:28;101470:20;:::o;101155:199::-;101246:13;101239:20;:::o;100893:188::-;62299:49920;100949:23;:::o;100350:69::-;62299:49920;100406:13;100387:32;;100350:69;;103410:1232;103748:13;62299:49920;-1:-1:-1;;;;;;;62299:49920:11;103947:42;;;;;62299:49920;;-1:-1:-1;;;103947:42:11;;87622:14;103947:42;;;62299:49920;;103576:297;;62299:49920;;;;;;103576:297;;103947:42;;;;;;;;103410:1232;62299:49920;;;;104066:343;104445:15;62299:49920;;;;;;;;;;;;;;;87622:14;103576:297;62299:49920;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;103486:15;62299:49920;;104424:55;-1:-1:-1;;;62299:49920:11;;104445:15;62299:49920;103410:1232::o;103947:42::-;;;;103576:297;103947:42;;:::i;:::-;103576:297;103947:42;;;;62299:49920;;;103576:297;62299:49920;;;;;103410:1232;103748:13;62299:49920;-1:-1:-1;;;;;;;62299:49920:11;103947:42;;;;;62299:49920;;-1:-1:-1;;;103947:42:11;;79315:13;103947:42;;;62299:49920;;-1:-1:-1;;62299:49920:11;;;;;;-1:-1:-1;;103947:42:11;;;;;;;;103410:1232;62299:49920;;;;104066:343;104445:15;62299:49920;;;;;;;;;;;;;;;79315:13;-1:-1:-1;62299:49920:11;-1:-1:-1;;;;;;;;;;;62299:49920:11;;;103486:15;62299:49920;;104424:55;-1:-1:-1;;;62299:49920:11;;104445:15;62299:49920;103410:1232::o;103947:42::-;;;;-1:-1:-1;103947:42:11;;:::i;:::-;-1:-1:-1;103947:42:11;;;62299:49920;;;;:::o;:::-;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;104932:2995;62299:49920;105000:20;;;:::i;:::-;62299:49920;;;;;;105024:14;105000:38;:79;;;;104932:2995;62299:49920;;;105138:21;105178:11;105170:75;105178:11;;;105170:75;:::i;:::-;105315:12;62299:49920;105315:32;105311:244;;104932:2995;105813:24;105597:792;108252:13;108283;105315:12;62299:49920;108298:31;;;;;;105791:46;;;106238:21;105791:46;;;;105942:21;105938:270;;106238:21;:::i;:::-;106409:17;;106401:75;106409:17;;106401:75;:::i;:::-;106617:2;62299:49920;;;;;;106617:2;62299:49920;;;;;106623:3;106768:27;62299:49920;;106768:27;;;:::i;:::-;106936:14;62299:49920;;;-1:-1:-1;;;106936:22:11;;62299:49920;;;;;;;;106936:22;;62299:49920;;-1:-1:-1;;;;;62299:49920:11;106936:22;;;;;;;;;;;;;;;108278:403;-1:-1:-1;62299:49920:11;;;;;;;-1:-1:-1;;;;;62299:49920:11;106928:60;;;;:::i;:::-;;62299:49920;;;;;;;;106936:14;62299:49920;;;107398:24;62299:49920;;107228:293;;;;;62299:49920;107228:293;62299:49920;;;;;;;;;;;;;107228:293;;106936:22;107228:293;;62299:49920;;:::i;:::-;107228:293;;;;;;;;108278:403;62299:49920;;107539:42;62299:49920;;;;;;;;;;;107539:42;107670:24;62299:49920;;;104932:2995::o;107228:293::-;;;;;:::i;:::-;;;;62299:49920;;;-1:-1:-1;;;62299:49920:11;;;106936:22;62299:49920;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;106623:3;;62299:49920;106936:22;;;;;62299:49920;106936:22;;62299:49920;106936:22;;;;;;62299:49920;106936:22;;;:::i;:::-;;;62299:49920;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;106936:22;;;;;;;;;;-1:-1:-1;106936:22:11;;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;105938:270;106094:21;-1:-1:-1;106094:21:11;106238;:::i;108331:3::-;108427:23;;108533:36;62299:49920;108427:23;;;;:::i;:::-;62299:49920;;;;;;;;;;;;;;105024:14;62299:49920;;;;;;108533:36;;:::i;:::-;108331:3;62299:49920;108283:13;;;105311:244;105429:13;;:::i;:::-;105311:244;;105000:79;105042:20;;;:::i;:::-;62299:49920;;;;;;105066:13;105042:37;105000:79;;104932:2995;105000:20;;:::i;:::-;-1:-1:-1;62299:49920:11;;;;;;;105024:14;105000:38;:79;;;;104932:2995;62299:49920;;;105138:21;105178:11;;106401:75;105178:11;;105170:75;;;:::i;:::-;105315:12;62299:49920;106401:75;105311:244;105429:13;;:::i;:::-;106401:75;:::i;105000:79::-;105042:20;;;:::i;:::-;62299:49920;;;;;;105066:13;105042:37;105000:79;;2912:187:0;3004:6;62299:49920:11;;-1:-1:-1;;;;;62299:49920:11;;;-1:-1:-1;;;;;;62299:49920:11;;;;;;;;;3052:40:0;;3004:6;3052:40;2912:187::o;1796:162::-;1710:6;62299:49920:11;-1:-1:-1;;;;;62299:49920:11;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:2;1901:40:0;62299:49920:11;;1710:6:0;1901:40;109014:3200:11;109082:20;;:::i;:::-;:37;-1:-1:-1;62299:49920:11;;;;;;;109106:13;109082:37;62299:49920;;109233:12;62299:49920;109233:31;62299:49920;;;109410:13;;109458:3;109233:12;62299:49920;109425:31;;;;;109495:23;;;:::i;:::-;62299:49920;;;;;;;;-1:-1:-1;;;;;62299:49920:11;;;;109622:8;62299:49920;;;;;;;;109621:17;109617:1362;;109458:3;;62299:49920;;109410:13;;109617:1362;62299:49920;;;;109818:29;62299:49920;109789:64;;;;;:::i;:::-;-1:-1:-1;109943:1021:11;;;62299:49920;;;109622:8;62299:49920;;;;;;;-1:-1:-1;;62299:49920:11;;;;;110138:28;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;110138:28;62299:49920;110138:28;62299:49920;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;110305:53;62299:49920;109818:29;62299:49920;;;;;;110305:53;109943:1021;109617:1362;;;62299:49920;-1:-1:-1;;;62299:49920:11;;;;;;;;109943:1021;62299:49920;;;109818:29;62299:49920;;;;110499:19;62299:49920;;110499:60;62299:49920;;;;;;110499:60;:::i;:::-;62299:49920;;110660:51;62299:49920;109818:29;62299:49920;;;;;;110660:51;62299:49920;110807:14;109943:1021;;;109425:31;;;;111011:13;;:::i;:::-;111153:21;111149:322;;109405:1585;62299:49920;111516:28;62299:49920;;111691:29;62299:49920;;;;;;;;;111516:28;62299:49920;;;;;;;;;;;;;;;;111486:720;62299:49920;;;112043:15;62299:49920;;111486:720;109014:3200::o;62299:49920::-;;;-1:-1:-1;;;;;62299:49920:11;;;;;-1:-1:-1;62299:49920:11;;;;;;;;;;;;;111149:322;105000:20;;:::i;:::-;62299:49920;;;;;;105024:14;105000:38;:79;;;;111149:322;62299:49920;;;105138:21;105178:11;105170:75;105178:11;;;105170:75;:::i;:::-;109233:12;62299:49920;105315:32;105311:244;;111149:322;105597:792;;;;106409:17;;106401:75;106409:17;;106401:75;:::i;:::-;106617:2;62299:49920;;;;;;106617:2;62299:49920;;;;;106623:3;106768:27;62299:49920;;106768:27;;;:::i;:::-;106936:14;62299:49920;;;-1:-1:-1;;;106936:22:11;;62299:49920;;;;;;;;106936:22;;62299:49920;;-1:-1:-1;;;;;62299:49920:11;106936:22;;;;;;;;;;;;;;;105597:792;-1:-1:-1;62299:49920:11;;;;;;;-1:-1:-1;;;;;62299:49920:11;106928:60;;;;:::i;:::-;;62299:49920;;;;;;;;106936:14;62299:49920;;;107398:24;62299:49920;;107228:293;;;;;62299:49920;107228:293;62299:49920;;;;;;;;;;;;;107228:293;;106936:22;107228:293;;62299:49920;;:::i;:::-;107228:293;;;;;;;;105597:792;62299:49920;107539:42;62299:49920;;;;;;;;;;;107539:42;109106:13;62299:49920;;;111149:322;;;107228:293;;;;;;;;:::i;:::-;;;;;;62299:49920;;;;;;;;;106936:22;;;;;62299:49920;106936:22;;62299:49920;106936:22;;;;;;62299:49920;106936:22;;;:::i;:::-;;;62299:49920;;;;;-1:-1:-1;;;;;62299:49920:11;;;;;;106936:22;;;;;;;;;;-1:-1:-1;106936:22:11;;105597:792;105813:24;;108252:13;108283;109233:12;62299:49920;108298:31;;;;;;105791:46;;;106238:21;105791:46;;;;105942:21;105938:270;;106238:21;:::i;:::-;105597:792;;108331:3;108427:23;;108533:36;62299:49920;108427:23;;;;:::i;108533:36::-;108331:3;62299:49920;108283:13;;;105311:244;105429:13;;:::i;:::-;105311:244;;105000:79;105042:20;;;:::i;:::-;62299:49920;;;;;;109106:13;105042:37;105000:79;;62299:49920;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;-1:-1:-1;;;62299:49920:11;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"callRound()":"7475a4cb","checkMissionStartCondition()":"ad1ca6bf","currentProgressPct()":"fb84e12f","enrollPlayer()":"987c543a","enrolled(address)":"10eb0e0e","factoryShare()":"003e16a5","failedRefundAmounts(address)":"b2a4a5d2","forceFinalizeMission()":"12124848","getFailedRefundPlayers()":"7cf61b69","getMissionData()":"7ce17de4","getPlayerCount()":"c2e52206","getRealtimeStatus()":"68c6ba21","getWinners()":"df15c37e","hasWon(address)":"a52b2b88","increasePot()":"eb2bab77","initialize(address,address,uint8,uint256,uint256,uint256,uint8,uint8,uint256,uint256,uint8,string)":"5e83e15c","isArming()":"dd1121f6","isFinalized()":"8d4e4083","isPlayer(address)":"09c95e10","missionFactory()":"fa4cf5a1","missionStartConditionChecked()":"293c2213","owner()":"8da5cb5b","ownerShare()":"8f1c3151","pendingPayout(address)":"e6810a50","playerState(address)":"fcca0c84","refundPlayers()":"98bdae43","refunded(address)":"c033a490","remainingRounds()":"a7e22a3e","renounceOwnership()":"715018a6","secondsUntilNextRound()":"5407441f","transferOwnership(address)":"f2fde38b","wasRefunded(address)":"268b2b51","withdrawFunds()":"24600fc3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllRoundsDone\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyJoined\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyWon\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractsNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsLeft\",\"type\":\"uint256\"}],\"name\":\"Cooldown\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nowTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTs\",\"type\":\"uint256\"}],\"name\":\"EnrollmentClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nowTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTs\",\"type\":\"uint256\"}],\"name\":\"EnrollmentNotStarted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"maxPlayers\",\"type\":\"uint8\"}],\"name\":\"MaxPlayers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissionEnded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsLeft\",\"type\":\"uint256\"}],\"name\":\"MonthlyLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nowTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"missionStart\",\"type\":\"uint256\"}],\"name\":\"NotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotJoined\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"PayoutFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsLeft\",\"type\":\"uint256\"}],\"name\":\"WeeklyLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"name\":\"WrongEntryFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"factoryAmount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum MissionType\",\"name\":\"missionType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MissionInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nrOfPlayers\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address[]\",\"name\":\"player\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MissionRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum Status\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"enum Status\",\"name\":\"newStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MissionStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPlayers\",\"type\":\"uint256\"}],\"name\":\"PlayerEnrolled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlayerRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"croCurrent\",\"type\":\"uint256\"}],\"name\":\"PotIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"roundNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"croRemaining\",\"type\":\"uint256\"}],\"name\":\"RoundCalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"callRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMissionStartCondition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentProgressPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enrollPlayer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enrolled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"failedRefundAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forceFinalizeMission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFailedRefundPlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMissionData\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"enum MissionType\",\"name\":\"missionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"enrollmentStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enrollmentEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enrollmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"enrollmentMinPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"enrollmentMaxPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"missionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"missionEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"missionRounds\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"roundCount\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"croStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"croCurrent\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountWon\",\"type\":\"uint256\"}],\"internalType\":\"struct Mission.PlayersWon[]\",\"name\":\"playersWon\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"pauseTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"refundedPlayers\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct Mission.MissionData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlayerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRealtimeStatus\",\"outputs\":[{\"internalType\":\"enum Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinners\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountWon\",\"type\":\"uint256\"}],\"internalType\":\"struct Mission.PlayersWon[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increasePot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_missionFactory\",\"type\":\"address\"},{\"internalType\":\"enum MissionType\",\"name\":\"_missionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_enrollmentStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_enrollmentEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_enrollmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_enrollmentMinPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_enrollmentMaxPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_missionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_missionEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_missionRounds\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isArming\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isPlayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"missionFactory\",\"outputs\":[{\"internalType\":\"contract MissionFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"missionStartConditionChecked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"pendingPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"playerState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"won\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundPlayers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"refunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingRounds\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsUntilNextRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"wasRefunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"callRound()\":{\"details\":\"A player can only win once. The mission must be Active and not expired.After each round, the mission is Paused for:      - 5 minutes for normal rounds      - 1 minute before the final roundEmits {RoundClaimed}.Reverts if:      - Mission is in Paused status      - Mission is not Active      - Player has already won a round      - Player is not enrolled in the mission      - All rounds have been claimed      - Payout transfer failsIf it is the last round, sets status to Success and withdraws funds\"},\"checkMissionStartCondition()\":{\"details\":\"Checks if the mission's conditions are met to start. Only callable by the owner or an authorized address This function must be called after the enrollment period ends and before the mission starts to refund players if the conditions are not met. If calling the function is obmitted,  calling refundPlayers() is the last chance to refund players.If conditions are not met, sets status to Failed and refunds players.\"},\"constructor\":{\"details\":\"Constructor for the Mission contract. Initializes the contract with the owner set to address(0) to prevent accidental ownership. The actual ownership will be set during the initialization phase.\"},\"currentProgressPct()\":{\"details\":\"Returns the current progress percentage of the mission. This function calculates the progress based on the elapsed time since the mission started.\",\"returns\":{\"_0\":\"The current progress percentage of the mission.\"}},\"enrollPlayer()\":{\"details\":\"Player can enroll only during the enrollment window and only once.Reverts if:      - Player is a contract      - Enrollment period not open      - Max players reached      - Insufficient CRO sent      - Player has already enrolled      - Player has reached their weekly/monthly limit\"},\"forceFinalizeMission()\":{\"details\":\"Ends mission and withdraws remaining pot.\"},\"getFailedRefundPlayers()\":{\"details\":\"Returns the addresses of players who have failed refunds. This function iterates through all players and collects those with failed refund amounts.\",\"returns\":{\"_0\":\"An array of player addresses who have failed refunds.\"}},\"getMissionData()\":{\"details\":\"Returns the MissionData structure.\"},\"getPlayerCount()\":{\"details\":\"Returns the current number of players enrolled in the mission. This function retrieves the length of the players array in the mission data.\"},\"getRealtimeStatus()\":{\"details\":\"Returns the current real-time status of the mission. This function checks the current time and mission data to determine the status.\",\"returns\":{\"_0\":\"The current status of the mission.\"}},\"getWinners()\":{\"details\":\"Returns the array of players who won in the mission. This function retrieves the playersWon array from the mission data.\"},\"increasePot()\":{\"details\":\"Add funds to prize pool.\"},\"initialize(address,address,uint8,uint256,uint256,uint256,uint8,uint8,uint256,uint256,uint8,string)\":{\"details\":\"Initializes the Mission contract. This function sets the initial values for the mission and registers it with the MissionFactory. It can only be called once during contract deployment.\",\"params\":{\"_enrollmentAmount\":\"The amount required for enrollment.\",\"_enrollmentEnd\":\"The end time for enrollment.\",\"_enrollmentMaxPlayers\":\"The maximum number of players allowed in the mission.\",\"_enrollmentMinPlayers\":\"The minimum number of players required to start the mission.\",\"_enrollmentStart\":\"The start time for enrollment.\",\"_missionEnd\":\"The end time for the mission.\",\"_missionFactory\":\"The address of the MissionFactory contract.\",\"_missionRounds\":\"The number of rounds in the mission.\",\"_missionStart\":\"The start time for the mission.\",\"_missionType\":\"The type of the mission.\",\"_owner\":\"The address of the owner of the contract.\"}},\"isArming()\":{\"details\":\"Returns whether the mission is in the arming phase. This function checks if the current time is between the enrollment end and mission start times.\",\"returns\":{\"_0\":\"A boolean indicating if the mission is in the arming phase.\"}},\"isFinalized()\":{\"details\":\"Returns whether the mission is finalized by realtime status,  not the status set in the factory which can lag behind. This function checks if the mission is in Success or Failed status.\",\"returns\":{\"_0\":\"A boolean indicating if the mission is finalized.\"}},\"isPlayer(address)\":{\"details\":\"Returns true if the address is a player in the mission. This function checks if the address is present in the players array of the mission data.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingPayout(address)\":{\"details\":\"Returns the pending payout for a player based on their progress in the mission. This function calculates the pending payout based on the current progress percentage and the last payout amount.\",\"params\":{\"player\":\"The address of the player to check for pending payout.\"},\"returns\":{\"_0\":\"The pending payout amount for the player, or 0 if not applicable.\"}},\"playerState(address)\":{\"details\":\"Returns the player state for a given address. This function checks if the player is enrolled and if they have won in any round.\",\"params\":{\"player\":\"The address of the player to check.\"},\"returns\":{\"joined\":\"A boolean indicating if the player is enrolled in the mission.\",\"won\":\"A boolean indicating if the player has won in any round.\"}},\"refundPlayers()\":{\"details\":\"Refunds players if the mission fails. This function can be called by the owner or an authorized address.\"},\"remainingRounds()\":{\"details\":\"Returns the number of remaining rounds in the mission. This function checks the current real-time status of the mission and returns the number of rounds left.\",\"returns\":{\"_0\":\"The number of remaining rounds in the mission, or 0 if the mission is not in Active or Paused status.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"secondsUntilNextRound()\":{\"details\":\"Returns the number of seconds until the next round starts. This function checks the current real-time status of the mission and calculates the time until the next round.\",\"returns\":{\"_0\":\"The number of seconds until the next round starts, or 0 if the mission is not paused.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"wasRefunded(address)\":{\"details\":\"Checks if a player has been refunded. This function iterates through the refundedPlayers array to check if the address is present.\",\"params\":{\"addr\":\"The address of the player to check for refund status.\"},\"returns\":{\"_0\":\"A boolean indicating if the player has been refunded.\"}},\"withdrawFunds()\":{\"details\":\"Sends:      - 25% to factory owner      - 75% to MissionFactory (for future missions)If `force = true`, also withdraws failed refund amounts.\"}},\"stateVariables\":{\"missionFactory\":{\"details\":\"Reference to the MissionFactory contract. This contract manages the overall mission lifecycle and player interactions.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"callRound()\":{\"notice\":\"Called by a player to claim a round reward.\"},\"enrollPlayer()\":{\"notice\":\"Allows a player to enroll by paying the enrollment fee.\"},\"forceFinalizeMission()\":{\"notice\":\"Allows owner or authorized to finalize a mission after time expiry.\"},\"withdrawFunds()\":{\"notice\":\"Distributes remaining CRO after mission completion or failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MissionFactory.sol\":\"Mission\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MissionFactory.sol\":{\"keccak256\":\"0x3af8015c31c8d64ac5413ba235e28efe88bfef7916268c451609511a5e28ea10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e599d2549568837cc3f2b643ccd4ebdca7b3d78eecf47c398ec26e9d142adc8\",\"dweb:/ipfs/QmUYsGY88pbdGDiuVAPjmZoW5aKPnbJrqsruCVWjY92aaC\"]}},\"version\":1}"},"MissionFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_impl","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"AuthorizedAddressAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"AuthorizedAddressRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"newWeekly","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"newMonthly","type":"uint8"}],"name":"EnrollmentLimitUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"EnrollmentRecorded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"missionAddress","type":"address"},{"indexed":true,"internalType":"enum MissionType","name":"missionType","type":"uint8"}],"name":"MissionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"enum MissionType","name":"missionType","type":"uint8"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"MissionFundsRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"confirmer","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"OwnershipTransferConfirmed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"OwnershipTransferProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"OWNERSHIP_PROPOSAL_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addAuthorizedAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"canEnroll","outputs":[{"internalType":"bool","name":"ok","type":"bool"},{"internalType":"enum Limit","name":"breach","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"confirmOwnershipTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum MissionType","name":"_missionType","type":"uint8"},{"internalType":"uint256","name":"_enrollmentStart","type":"uint256"},{"internalType":"uint256","name":"_enrollmentEnd","type":"uint256"},{"internalType":"uint256","name":"_enrollmentAmount","type":"uint256"},{"internalType":"uint8","name":"_enrollmentMinPlayers","type":"uint8"},{"internalType":"uint8","name":"_enrollmentMaxPlayers","type":"uint8"},{"internalType":"uint256","name":"_missionStart","type":"uint256"},{"internalType":"uint256","name":"_missionEnd","type":"uint256"},{"internalType":"uint8","name":"_missionRounds","type":"uint8"},{"internalType":"string","name":"_missionName","type":"string"}],"name":"createMission","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getAllMissions","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"enum Status[]","name":"","type":"uint8[]"},{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFactorySummary","outputs":[{"internalType":"address","name":"ownerAddress","type":"address"},{"internalType":"address","name":"factoryAddress","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"totalMissions","type":"uint256"},{"internalType":"uint256","name":"weekly","type":"uint256"},{"internalType":"uint256","name":"monthly","type":"uint256"},{"internalType":"uint256","name":"missionFunds","type":"uint256"},{"internalType":"uint256","name":"ownerFunds","type":"uint256"},{"internalType":"uint256","name":"successes","type":"uint256"},{"internalType":"uint256","name":"failures","type":"uint256"},{"internalType":"uint256[]","name":"fundsPerTypeArray","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum MissionType","name":"_type","type":"uint8"}],"name":"getFundsByType","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"getLatestMissions","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint8[]","name":"","type":"uint8[]"},{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"missionAddress","type":"address"}],"name":"getMissionData","outputs":[{"components":[{"internalType":"address[]","name":"players","type":"address[]"},{"internalType":"enum MissionType","name":"missionType","type":"uint8"},{"internalType":"uint256","name":"enrollmentStart","type":"uint256"},{"internalType":"uint256","name":"enrollmentEnd","type":"uint256"},{"internalType":"uint256","name":"enrollmentAmount","type":"uint256"},{"internalType":"uint8","name":"enrollmentMinPlayers","type":"uint8"},{"internalType":"uint8","name":"enrollmentMaxPlayers","type":"uint8"},{"internalType":"uint256","name":"missionStart","type":"uint256"},{"internalType":"uint256","name":"missionEnd","type":"uint256"},{"internalType":"uint8","name":"missionRounds","type":"uint8"},{"internalType":"uint8","name":"roundCount","type":"uint8"},{"internalType":"uint256","name":"croStart","type":"uint256"},{"internalType":"uint256","name":"croCurrent","type":"uint256"},{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"amountWon","type":"uint256"}],"internalType":"struct Mission.PlayersWon[]","name":"playersWon","type":"tuple[]"},{"internalType":"uint256","name":"pauseTimestamp","type":"uint256"},{"internalType":"address[]","name":"refundedPlayers","type":"address[]"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct Mission.MissionData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Status","name":"s","type":"uint8"}],"name":"getMissionsByStatus","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint8[]","name":"","type":"uint8[]"},{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMissionsEnded","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint8[]","name":"","type":"uint8[]"},{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMissionsNotEnded","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint8[]","name":"","type":"uint8[]"},{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwnershipProposal","outputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"timeLeft","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerLimits","outputs":[{"internalType":"uint8","name":"weekUsed","type":"uint8"},{"internalType":"uint8","name":"weekMax","type":"uint8"},{"internalType":"uint8","name":"monthUsed","type":"uint8"},{"internalType":"uint8","name":"monthMax","type":"uint8"},{"internalType":"uint256","name":"secToWeek","type":"uint256"},{"internalType":"uint256","name":"secToMonth","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerParticipation","outputs":[{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"enum Status[]","name":"","type":"uint8[]"},{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalMissions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isMission","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"missionImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"missionNames","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"missionStatus","outputs":[{"internalType":"enum Status","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum MissionType","name":"","type":"uint8"}],"name":"missionTypeCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"missions","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"monthlyLimit","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalProposer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"proposeOwnershipTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposedNewOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"recordEnrollment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum MissionType","name":"missionType","type":"uint8"}],"name":"registerMissionFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeAuthorizedAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum MissionType","name":"","type":"uint8"}],"name":"reservedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reservedFundsBreakdown","outputs":[{"internalType":"uint256[7]","name":"","type":"uint256[7]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"secondsTillMonthlySlot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"secondsTillWeeklySlot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"_weekly","type":"uint8"},{"internalType":"uint8","name":"_monthly","type":"uint8"}],"name":"setEnrollmentLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Status","name":"newStatus","type":"uint8"}],"name":"setMissionStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalMissionFailures","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalMissionFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalMissionSuccesses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalOwnerEarnedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"weeklyLimit","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a03461012557601f613c0f38819003918201601f19168301916001600160401b0383118484101761012a5780849260209460405283398101031261012557516001600160a01b03811680820361012557331561010f5760008054336001600160a01b0319821681178355604051939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055610a0461ffff196003541617600355156100e15750608052604051613ace9081610141823960805181818161045f01528181610aea01526112530152f35b62461bcd60e51b8152602060048201526009602482015268696d706c207a65726f60b81b6044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004361015610011575b005b600090813560e01c90816304a6175214612b24575080630814ab8214612add5780630a6005da14612ab95780630fc8c4ed14612a90578063155dd5ee146129285780631e59d5841461279657806320c5718f1461250e57806321040fc3146123fe5780632c8fe526146123ba5780632d771f30146123915780632e33b07f146108765780633589cf7214612373578063370127621461229457806342f1181e146121a3578063503c0b8814611f315780635c5bb6f214611f135780636367972314611ef55780636805036d14611d955780636d8a139014611d6a5780637071293914611c7f578063715018a614611c255780637200b82914611abd57806372eecd211461115b5780637e9eae501461103d57806383fbea511461101f578063861a68d614610ffe5780638c09b7c314610fbe5780638da5cb5b14610f975780639804a58614610f4d578063a9bea78914610dd9578063aa1f059514610d97578063b620291314610bb1578063b6de7b4314610b5b578063b918161114610b19578063bd48772514610ad4578063c17f9e59146108a0578063c416ad2a14610876578063c892fde314610858578063cbf2080d146106c1578063d3050eba146106a3578063d41eca64146105f5578063d8d6e8ff1461056e578063df4db463146104e7578063e5047770146103ba578063eff0ab92146102a9578063f08e231e146102765763f2fde38b0361000f5734610273576020366003190112610273576004356001600160a01b0381168082036102715761024c6138b7565b1561025d5761025a90613902565b80f35b631e4fbdf760e01b82526004829052602482fd5b825b80fd5b5034610273576020366003190112610273576004359060078210156102735760206102a083612eb2565b54604051908152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b6578152600f6020526040812080548291825b82811061033157505050816102fd57602091505b604051908152f35b62093a80820180921161031d575061031860209142906132e4565b6102f5565b634e487b7160e01b81526011600452602490fd5b61033b8183612ce7565b90549060031b1c62093a8081018091116103a257421061035e575b6001016102e1565b84158015610389575b15610356579350600161037a8583612ce7565b90549060031b1c949050610356565b50846103958284612ce7565b90549060031b1c10610367565b634e487b7160e01b85526011600452602485fd5b5080fd5b5034610273578060031936011261027357610100906040516103dc8382612dd4565b600781526020810191601f198401368437805b60078110156104165760019061040481612e99565b5461040f8286612f9e565b52016103ef565b5091909160018060a01b0381541660025493600354956004549060055490600654916007549360ff6040519b8c9b6101608d01998d528c6020309101528c604060018060a01b037f00000000000000000000000000000000000000000000000000000000000000001691015260608d015281811660808d015260081c1660a08b015260c08a015260e089015287015261012086015261016061014086015251809152610180840192915b8181106104ce575050500390f35b82518452859450602093840193909201916001016104c0565b503461027357806003193601126102735760e090816040516105098282612dd4565b3690376040519061051a8383612dd4565b82368337805b60078110156105435760019061053581612e99565b548160051b85015201610520565b506040519190825b6007821061055857505050f35b602080600192855181520193019101909161054b565b50346102735760203660031901126102735760043560088110156103b657338252600c6020526105a460ff60408420541661384c565b338252600d6020526040822060ff1981541660ff8316179055600681146000146105da57506105d4600654612ee6565b60065580f35b6007146105e45780f35b6105ef600754612ee6565b60075580f35b50346102735760403660031901126102735760043560ff81168091036103b65760243560ff81169182820361069f577f321994b8855ae38e4fd6162f7a0bd7cde88be83aa3acc96e03c17b7f733b43e19260409260018060a01b038654163314801561068a575b6106659061327c565b8261ff006003549260081b169161ffff1916171760035582519182526020820152a180f35b50338652600b6020528386205460ff1661065c565b8380fd5b50346102735780600319360112610273576020604051620151808152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b6578152600f602052604081208190829083809181908054915b8281106107ad5750505060035494801560001461077b575080915b80610755575060c09460ff8092945b8160405197168752818316602088015216604086015260081c166060840152608083015260a0820152f35b9062278d00820180921161031d575060c09460ff610775819342906132e4565b9461072a565b62093a808101809111610799576107939042906132e4565b9161071b565b634e487b7160e01b82526011600452602482fd5b6107b78183612ce7565b90549060031b1c62278d0081018082116108335742106107db575b50600101610700565b956107e590612ee6565b958515801561084f575b610847575b62093a808101808211610833574210156107d2579661081290612ee6565b968815801561082a575b156107d257975060016107d2565b5088811061081c565b634e487b7160e01b86526011600452602486fd5b9450846107f4565b508581106107ef565b50346102735780600319360112610273576020600654604051908152f35b5034610273576020366003190112610273576004359060078210156102735760206102a083612e99565b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657338252600d60205260ff6040832054166008811015610ac057600103610a8a5762278cff19420190428211610a7657808352600f60205260408320805492845b84811080610a5d575b156109235761091e90612ee6565b610907565b83838792806109a9575b50805490600160401b821015610995578161095091600161096894018155612ce7565b429082549060031b91821b91600019901b1916179055565b7f498f5e6dcf570483a1848853791046a7f10012193176d71f959f46eb7713d7446020604051428152a280f35b634e487b7160e01b84526041600452602484fd5b92805b6109b78584546132e4565b811015610a075780610a016109d76109d1886001956132d7565b86612ce7565b90549060031b1c6109e88387612ce7565b90919082549060031b91821b91600019901b1916179055565b016109ac565b5092835b818110610a18575061092d565b82548015610a49576001919060001901610a328186612ce7565b8154906000199060031b1b19169055845501610a0b565b634e487b7160e01b86526031600452602486fd5b5081610a698285612ce7565b90549060031b1c10610910565b634e487b7160e01b83526011600452602483fd5b60405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b6044820152606490fd5b634e487b7160e01b83526021600452602483fd5b50346102735780600319360112610273576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65760408260ff9260209452600b84522054166040519015158152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657604082610b9992610bad9452601060205220612df5565b604051918291602083526020830190612bc3565b0390f35b50346102735780600319360112610273576002548190825b818110610d175750610bda82612f22565b90610bed610be784612f22565b93612f54565b9084805b828210610c0b57505050610bad9060405193849384612c41565b610c1482612cb6565b905460039190911b1c6001600160a01b03168752600d602052604087205460ff16600881101580610d0357600682148015610cf7575b610c5b575b50509060010190610bf1565b610c6484612cb6565b905460039190911b1c6001600160a01b0316610c808489612f9e565b52610ce35781610cdc91610c966001948a612f9e565b52610ca084612cb6565b848060a01b0391549060031b1c1689526010602052610cc160408a20612df5565b610ccb8288612f9e565b52610cd68187612f9e565b50612ee6565b9038610c4f565b634e487b7160e01b88526021600452602488fd5b50508760078214610c4a565b634e487b7160e01b89526021600452602489fd5b610d2081612cb6565b905460039190911b1c6001600160a01b03168452600d602052604084205460ff166008811015610d835760068114908115610d78575b50610d64575b600101610bc9565b91610d70600191612ee6565b929050610d5c565b600791501438610d56565b634e487b7160e01b85526021600452602485fd5b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65760408260ff9260209452600c84522054166040519015158152f35b5060203660031901126102735760043560078110156103b657338252600c602052610e0a60ff60408420541661384c565b610e126138e0565b3415610f0957338252600d60205260ff6040832054166008811015610ac0576006148015610ee7575b15610eab57610e4981612e99565b610e543482546132d7565b9055610e62346004546132d7565b600455610e74600334046005546132d7565b600555604051903482527f606617fd09d9890413e3c46147b844d4562351f86e0f7a5c60849bbf0ef0281160203393a36001805580f35b60405162461bcd60e51b815260206004820152601460248201527321b0b63632b9103737ba10309036b4b9b9b4b7b760611b6044820152606490fd5b50338252600d60205260ff6040832054166008811015610ac057600714610e3b565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b5034610273576020366003190112610273576004356001600160a01b03811681036103b657610f7b906136cd565b60405191151582526003811015610ac057604092506020820152f35b5034610273578060031936011261027357546040516001600160a01b039091168152602090f35b50346102735780600319360112610273576080610fd961365c565b604080516001600160a01b039586168152949093166020850152918301526060820152f35b5034610273578060031936011261027357602060ff60035416604051908152f35b50346102735780600319360112610273576020600754604051908152f35b50346102735760203660031901126102735760043590600254808311611153575b61106783612f22565b9161107184612f22565b9361107b81612f54565b926000198101908111835b83811061109d5760405180610bad888b8b84612c41565b816103a2576110b46110af82856132e4565b612cb6565b905460039190911b1c6001600160a01b0316806110d1838a612f9e565b528552600d60205260ff604086205416600881101561113f57906001916110f8828b612f9e565b5261110281612cb6565b838060a01b0391549060031b1c168652601060205261112360408720612df5565b61112d8289612f9e565b526111388188612f9e565b5001611086565b634e487b7160e01b86526021600452602486fd5b91508161105e565b5061014036600319011261027357600760043510156102735760843560ff811681036103b65760a4359160ff8316830361027357610104359160ff831683036103b65761012435926001600160401b0384116102715736602385011215610271578360040135936001600160401b03851161069f57366024868301011161069f5783546001600160a01b031633148015611aa7575b6111f99061327c565b6112016138e0565b600560ff831610611a485760ff821660ff8416106119dd5760ff831660ff8716106119735760443560243510156119225760443560c435106118c45760c43560e43511156118805760643515611827577f0000000000000000000000000000000000000000000000000000000000000000608881901c62ffffff16763d602d80600a3d3981f3363d3d373d3d3d363d7300000017855260781b6e5af43d82803e903d91602b57fd5bf3176020526001600160a01b036037600986f0169485156118185784906112d1600435612eb2565b6112db8154612ee6565b9055801561163e57808060246112f2602094612ecb565b956113006040519788612dd4565b828752018386013783010152945b848452600c60205260408420600160ff19825416179055848452600d6020526040842060ff19815416905584845260106020526040842086516001600160401b03811161162a5761135f8254612d68565b601f81116115e5575b50806020601f8211600114611581578791611576575b508160011b916000199060031b1c19161790555b83546001600160a01b031692853b156115725760ff9291838092604051966317a0f85760e21b885260048801523060248801526113d460448801600435612ca9565b6024356064880152604435608488015260643560a48801521660c48601521660e484015260c43561010484015260e4356101248401521661014482015261018061016482015281818061142b610184820188612bc3565b038134875af18015611539578290611562575b5050600254600160401b81101561154e5780600161145f9201600255612cb6565b81546001600160a01b0360039290921b91821b19169084901b179055600435827f0ac1ac89285bf936f515aafcf6808b3e062e77fd57f52c8892d20fc9409b8b538380a36114ae600435612e99565b5460021c80151580611544575b6114e2575b505060018055610bad6040519283928352604060208401526040830190612bc3565b6114ed600435612e99565b6114f88282546132e4565b9055823b156103b657816004916040519283809263eb2bab7760e01b8252875af1801561153957156114c05761152f828092612dd4565b61027357806114c0565b6040513d84823e3d90fd5b50804710156114bb565b634e487b7160e01b82526041600452602482fd5b61156b91612dd4565b388161143e565b8480fd5b90508801513861137e565b915082875281872087925b8a601f19841685106115ce57506001935082601f198116106115b5575b5050811b019055611392565b8a015160001960f88460031b161c1916905538806115a9565b81015182556020938401936001909201910161158c565b82875260208720601f830160051c81019160208410611620575b601f0160051c01905b8181106116155750611368565b878155600101611608565b90915081906115ff565b634e487b7160e01b86526041600452602486fd5b50505061164c600435613949565b611657600435612eb2565b54848172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8110156117f5575b806d04ee2d6d415b85acef8100000000600a9210156117da575b662386f26fc100008110156117c6575b6305f5e1008110156117b5575b6127108110156117a6575b6064811015611798575b1015611790575b6001810191600a60216116f76116e186612ecb565b956116ef6040519788612dd4565b808752612ecb565b602086019490601f19013686378501015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490811561173757600a90611708565b505061177992602060039261178a94604051968461175e899651809287808a019101612ba0565b8501916201016960ed1b858401525180936023840190612ba0565b01010301601f198101835282612dd4565b9461130e565b6001016116cc565b6064600291049201916116c5565b612710600491049201916116bb565b6305f5e100600891049201916116b0565b662386f26fc10000601091049201916116a3565b6d04ee2d6d415b85acef810000000060209104920191611693565b506040905072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8204611679565b63b06ebf3d60e01b8552600485fd5b60405162461bcd60e51b815260206004820152602b60248201527f456e726f6c6c6d656e7420616d6f756e74206d7573742062652067726561746560448201526a72207468616e207a65726f60a81b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4d697373696f6e207374617274206d757374206265206265666f726520656e646044820152fd5b60405162461bcd60e51b815260206004820152603060248201527f4d697373696f6e207374617274206d757374206265206f6e206f72206166746560448201526f1c88195b9c9bdb1b1b595b9d08195b9960821b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f456e726f6c6c6d656e74207374617274206d757374206265206265666f726520604482015262195b9960ea1b6064820152608490fd5b608460405162461bcd60e51b815260206004820152604060248201527f4d6178696d756d20706c6179657273206d75737420626520677265617465722060448201527f7468616e206f7220657175616c20746f206d696e696d756d20706c61796572736064820152fd5b60405162461bcd60e51b815260206004820152603f60248201527f4d696e696d756d20706c6179657273206d75737420626520677265617465722060448201527f7468616e206f7220657175616c20746f206d697373696f6e20726f756e6473006064820152608490fd5b60405162461bcd60e51b815260206004820152603160248201527f4d697373696f6e20726f756e6473206d7573742062652067726561746572207460448201527068616e206f7220657175616c20746f203560781b6064820152608490fd5b50338452600b602052604084205460ff166111f0565b503461027357806003193601126102735780546001600160a01b031633148015611c0f575b611aeb9061327c565b600a546001600160a01b03163314611bcb57600854620151808101809111610799574211611b9357600954611b28906001600160a01b0316613902565b600954604080516001600160a01b03909216825242602083015233917fdd72dd33198968a9cdc9b1e5cbff344fb8d04d99f8c15c0a02416b04e857b4679190a26001600160601b0360a01b600954166009556001600160601b0360a01b600a5416600a558060085580f35b60405162461bcd60e51b815260206004820152601060248201526f141c9bdc1bdcd85b08195e1c1a5c995960821b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f43616e6e6f7420636f6e6669726d20796f7572206f776e2070726f706f73616c6044820152fd5b50338152600b602052604081205460ff16611ae2565b5034610273578060031936011261027357611c3e6138b7565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65781546001600160a01b031633148015611d54575b611cc39061327c565b611cce8115156132f1565b808252600b60205260ff60408320541615611d1e57808252600b60205260408220805460ff191690557f66d5f06f711af3c9feba3203fdb00b51345d514c68585d9d319c5ff5e6f775928280a280f35b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b50338252600b602052604082205460ff16611cba565b5034610273578060031936011261027357610bad611d86613360565b60409391935193849384612cff565b50346102735780600319360112610273576002548190825b818110611e885750611dbe82612f22565b90611dcb610be784612f22565b9084805b828210611de957505050610bad9060405193849384612c41565b611df282612cb6565b905460039190911b1c6001600160a01b03168752600d602052604087205460ff16600881101580610d0357600682141580611e7b575b611e39575b50509060010190611dcf565b611e4284612cb6565b905460039190911b1c6001600160a01b0316611e5e8489612f9e565b52610ce35781611e7491610c966001948a612f9e565b9038611e2d565b5050876007821415611e28565b611e9181612cb6565b905460039190911b1c6001600160a01b03168452600d602052604084205460ff166008811015610d835760068114159081611ee9575b50611ed5575b600101611dad565b91611ee1600191612ee6565b929050611ecd565b60079150141538611ec7565b50346102735780600319360112610273576020600454604051908152f35b50346102735780600319360112610273576020600254604051908152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657600254829080805b6120f55750611f6e84612f22565b92611f81611f7b86612f22565b95612f54565b928092805b611f9a5760405180610bad878a8a84612cff565b6000198101818111610a7657611faf90612cb6565b9054604051629c95e160e41b81526004810186905260039290921b1c6001600160a01b031690602081602481855afa9081156120bc5784916120c7575b50612002575b50611ffc9061332f565b80611f86565b806120108689979497612f9e565b526040516368c6ba2160e01b8152602081600481855afa9081156120bc578491612080575b509161207991612051611ffc9461204c848d612f9e565b613354565b8452601060205261206460408520612df5565b61206e8289612f9e565b52610cd68188612f9e565b9390611ff2565b90506020813d82116120b4575b8161209a60209383612dd4565b8101031261069f5751600881101561069f57612079612035565b3d915061208d565b6040513d86823e3d90fd5b6120e8915060203d81116120ee575b6120e08183612dd4565b81019061333c565b38611fec565b503d6120d6565b600019810181811161218f57602061210e602492612cb6565b9054604051629c95e160e41b8152600481018990529384929091839160031b1c6001600160a01b03165afa9081156120bc578491612171575b5061215c575b6121569061332f565b80611f60565b9361216961215691612ee6565b94905061214d565b612189915060203d81116120ee576120e08183612dd4565b38612147565b634e487b7160e01b84526011600452602484fd5b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65781546001600160a01b03163314801561227e575b6121e79061327c565b6121f28115156132f1565b808252600b60205260ff60408320541661224457808252600b60205260408220805460ff191660011790557f10ac961f00d5e732ba4dcc2c6fb09bebea0eb9edd2a75c8109775ef288382e678280a280f35b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e48185d5d1a1bdc9a5e995960721b6044820152606490fd5b50338252600b602052604082205460ff166121de565b5034610273576020366003190112610273576004356001600160a01b038116908190036103b6578152600f6020526040812080548291825b82811061230257505050816122e75760209150604051908152f35b62278d00820180921161031d575061031860209142906132e4565b61230c8183612ce7565b90549060031b1c62278d0081018091116103a257421061232f575b6001016122cc565b8415801561235a575b15612327579350600161234b8583612ce7565b90549060031b1c949050612327565b50846123668284612ce7565b90549060031b1c10612338565b50346102735780600319360112610273576020600554604051908152f35b5034610273578060031936011261027357600a546040516001600160a01b039091168152602090f35b503461027357602036600319011261027357600435906002548210156102735760206123e583612cb6565b905460405160039290921b1c6001600160a01b03168152f35b5034610273576020366003190112610273576004356001600160a01b0381168082036102715782546001600160a01b0316331480156124f8575b6124419061327c565b80156124bf576001600160601b0360a01b6009541617600955336001600160601b0360a01b600a541617600a55426008557fc29bdbd554e41df97e5c40fc273a09677ac133c245f0064bdffef5cc72176e19604051806124b9339442908360209093929193604081019460018060a01b031681520152565b0390a280f35b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b2103732bb9037bbb732b960791b6044820152606490fd5b50338352600b602052604083205460ff16612438565b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657606061020060405161254681612da2565b82815284602082015284604082015284838201528460808201528460a08201528460c08201528460e08201528461010082015284610120820152846101408201528461016082015284610180820152826101a0820152846101c0820152826101e082015201528015612751578160049160405192838092631f385f7960e21b82525afa90811561153957829161272f575b5090604051918291602083526125fb82516102206020860152610240850190612b63565b9061260e60208401516040860190612ca9565b6040830151606085015260608301516080850152608083015160a085015260ff60a08401511660c085015260ff60c08401511660e085015260e083015161010085015261010083015161012085015260ff6101208401511661014085015260ff610140840151166101608501526101608301516101808501526101808301516101a08501526101a083015191601f19858203016101c0860152602080845192838152019301915b81811061270157505050906102006126ec610bad936101c08401516101e08701526101e0840151601f198783030184880152612b63565b910151838203601f1901610220850152612bc3565b825180516001600160a01b0316855260209081015181860152879650604090940193909201916001016126b5565b61274b91503d8084833e6127438183612dd4565b81019061303e565b386125d7565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d697373696f6e20616464726573730000000000000000006044820152606490fd5b50346102735760203660031901126102735760043590600882101591826103b657600254928293835b8181106128cd57506127d085612f22565b936127e36127dd87612f22565b96612f54565b938190825b8481106127ff5760405180610bad898c8c84612c41565b61280881612cb6565b905460039190911b1c6001600160a01b03168452600d602052604084205460ff1686610d83576008811015610d83578214612846575b6001016127e8565b91945061285282612cb6565b905460039190911b1c6001600160a01b031661286e8689612f9e565b5260016128c58496612880818c612f9e565b60ff8516905261288f85612cb6565b848060a01b0391549060031b1c16865260106020526128b060408720612df5565b6128ba828b612f9e565b52610cd6818a612f9e565b92905061283e565b6128d681612cb6565b905460039190911b1c6001600160a01b03168552600d602052604085205460ff168361113f57600881101561113f578414612914575b6001016127bf565b94612920600191612ee6565b95905061290c565b5034610273576020366003190112610273576004356129456138b7565b61294d6138e0565b81546001600160a01b031690808215612a535715612a4c575b478111612a10578280808084865af13d15612a0b573d61298581612ecb565b906129936040519283612dd4565b81528460203d92013e5b156129d45760207feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d91604051908152a26001805580f35b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b61299d565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b5047612966565b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21036b0b730b3b2b91037bbb732b960591b6044820152606490fd5b50346102735780600319360112610273576009546040516001600160a01b039091168152602090f35b5034610273578060031936011261027357602060ff60035460081c16604051908152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65760408260ff9260209452600d8452205416612b226040518092612b40565bf35b9050346103b657816003193601126103b6576020906008548152f35b906008821015612b4d5752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b818110612b815750505090565b82516001600160a01b0316845260209384019390920191600101612b74565b60005b838110612bb35750506000910152565b8181015183820152602001612ba3565b90602091612bdc81518092818552858086019101612ba0565b601f01601f1916010190565b9080602083519182815201916020808360051b8301019401926000915b838310612c1457505050505090565b9091929394602080612c32600193601f198682030187528951612bc3565b97019301930191939290612c05565b939290612c5690606086526060860190612b63565b9380850360208201526020808451968781520193016000955b808710612c8e575050612c8b9394506040818403910152612be8565b90565b909360208060019260ff885116815201950196019590612c6f565b906007821015612b4d5752565b600254811015612cd157600260005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015612cd15760005260206000200190600090565b939290612d1490606086526060860190612b63565b9380850360208201526020808451968781520193016000955b808710612d49575050612c8b9394506040818403910152612be8565b909360208082612d5c6001948951612b40565b01950196019590612d2d565b90600182811c92168015612d98575b6020831014612d8257565b634e487b7160e01b600052602260045260246000fd5b91607f1691612d77565b61022081019081106001600160401b03821117612dbe57604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117612dbe57604052565b9060405191826000825492612e0984612d68565b8084529360018116908115612e775750600114612e30575b50612e2e92500383612dd4565b565b90506000929192526020600020906000915b818310612e5b575050906020612e2e9282010138612e21565b6020919350806001915483858901015201910190918492612e42565b905060209250612e2e94915060ff191682840152151560051b82010138612e21565b6007811015612b4d57600052600e602052604060002090565b6007811015612b4d576000526011602052604060002090565b6001600160401b038111612dbe57601f01601f191660200190565b6000198114612ef55760010190565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038111612dbe5760051b60200190565b90612f2c82612f0b565b612f396040519182612dd4565b8281528092612f4a601f1991612f0b565b0190602036910137565b90612f5e82612f0b565b612f6b6040519182612dd4565b8281528092612f7c601f1991612f0b565b019060005b828110612f8d57505050565b806060602080938501015201612f81565b8051821015612cd15760209160051b010190565b51906001600160a01b0382168203612fc657565b600080fd5b9080601f83011215612fc6578151612fe281612f0b565b92612ff06040519485612dd4565b81845260208085019260051b820101928311612fc657602001905b8282106130185750505090565b6020809161302584612fb2565b81520191019061300b565b519060ff82168203612fc657565b602081830312612fc6578051906001600160401b038211612fc657019061022082820312612fc6576040519161307383612da2565b80516001600160401b038111612fc6578261308f918301612fcb565b835260208101516007811015612fc65760208401526040810151604084015260608101516060840152608081015160808401526130ce60a08201613030565b60a08401526130df60c08201613030565b60c084015260e081015160e08401526101008101516101008401526131076101208201613030565b61012084015261311a6101408201613030565b6101408401526101608101516101608401526101808101516101808401526101a08101516001600160401b038111612fc657810182601f82011215612fc657805161316481612f0b565b916131726040519384612dd4565b81835260208084019260061b82010190858211612fc657602001915b818310613231575050506101a08401526101c08101516101c08401526101e08101516001600160401b038111612fc657826131ca918301612fcb565b6101e0840152610200810151906001600160401b038211612fc6570181601f82011215612fc65780516131fc81612ecb565b9261320a6040519485612dd4565b81845260208284010111612fc6576132289160208085019101612ba0565b61020082015290565b604083870312612fc6576040519060408201908282106001600160401b03831117612dbe57604092602092845261326786612fb2565b8152828601518382015281520192019161318e565b1561328357565b60405162461bcd60e51b815260206004820152602660248201527f4e6f74206f776e6572206f72204d697373696f6e466163746f727920617574686044820152651bdc9a5e995960d21b6064820152608490fd5b91908201809211612ef557565b91908203918211612ef557565b156132f857565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b8015612ef5576000190190565b90816020910312612fc657518015158103612fc65790565b6008821015612b4d5752565b60025480156135f357624f19ff194201428111612ef55762278cff194201428111612ef5576000929182805b613505575b5061339b84612f22565b6133a485612f22565b956133ae86612f54565b946000905b801515806134fc575b156134f15760001901906133cf82612cb6565b60018060a01b0391549060031b1c1680600052600d60205260ff60406000205416604051631f385f7960e21b8152600081600481865afa9081156134e5578c918a916000916134cc575b508960e0820181815110806134a5575b1561349a5750506101000151105b61348b57829161204c856134599381966134536001998d612f9e565b52612f9e565b600052601060205261346e6040600020612df5565b613478828a612f9e565b526134838189612f9e565b5001906133b3565b50949998509295505050505050565b915091505110613437565b5092505091506008831015612b4d578c91898b926006861480613429575060078614613429565b6134df913d8091833e6127438183612dd4565b38613419565b6040513d6000823e3d90fd5b509196955092505050565b508782106133bc565b600094939419019261351684612cb6565b60018060a01b0391549060031b1c1680600052600d6020526004600060ff6040822054169260405192838092631f385f7960e21b82525afa9081156134e557859285916000936135d8575b5060e08301908282511090816135a8575b501561359d5750506101000151105b6135965761358f8491612ee6565b949361338c565b9392613391565b915091505110613581565b92505092506008811015612b4d5785928160068793149081156135cd575b5038613572565b6007915014386135c6565b6135ec91933d8091833e6127438183612dd4565b9138613561565b506020604051916136048284612dd4565b6000835260003681376040519261361b8385612dd4565b6000845260003681376040519260006136348286612dd4565b8452601f19810160005b81811061364d57505050929190565b6060868201840152820161363e565b60085480156136be5762015180810191828211612ef557824210156136a357600954600a546001600160a01b03908116949116919061369c9042906132e4565b9193929190565b600954600a546001600160a01b039182169450169190600090565b50600090600090600090600090565b6001600160a01b03166000908152600f602052604081208054829182918291825b8281106137b5575050506003549160ff8316119060ff82159360081c16119182159282806137ae575b6137a05781613798575b5061378c5781613784575b5061377a5762093a808101809111612ef5576137499042906132e4565b9062278d008101809111612ef5576137629042906132e4565b1115613772576002905b60009190565b60019061376c565b5050600090600290565b90503861372c565b50505050600090600190565b905038613721565b505050505050600190600090565b5080613717565b6137bf8183612ce7565b90549060031b1c62278d008101808211612ef55742106137e3575b506001016136ee565b936137ed90612ee6565b9387158015613843575b61383b575b62093a808101808211612ef5574210156137da579461381a90612ee6565b9486158015613832575b156137da57955060016137da565b50868110613824565b9650866137fc565b508781106137f7565b1561385357565b60405162461bcd60e51b815260206004820152603660248201527f4d697373696f6e466163746f72793a2063616c6c6572206973206e6f742061206044820152751d985b1a59081b5a5cdcda5bdb8818dbdb9d1c9858dd60521b6064820152608490fd5b6000546001600160a01b031633036138cb57565b63118cdaa760e01b6000523360045260246000fd5b6002600154146138f1576002600155565b633ee5aeb560e01b60005260046000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b6007811015612b4d5760018114613a7357600060028214613a46575060038114613a20576000600482146139fa5750600581146139d5576006600091146139af5750604051613999604082612dd4565b6006815265437573746f6d60d01b602082015290565b506040516139be604082612dd4565b60078152664d6f6e74686c7960c81b602082015290565b506040516139e4604082612dd4565b60068152655765656b6c7960d01b602082015290565b50506040805190613a0b9082612dd4565b60058152644461696c7960d81b602082015290565b50604051613a2f604082612dd4565b600781526642694461696c7960c81b602082015290565b50506040805190613a579082612dd4565b600c81526b517561727465724461696c7960a01b602082015290565b50604051613a82604082612dd4565b6006815265486f75726c7960d01b60208201529056fea2646970667358221220ffb580fc005c8ea7b3f3148b4f5e4b6b3c1694ce5ea774f49e3d5cdc171a97c564736f6c634300081e0033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0x125 JUMPI PUSH1 0x1F PUSH2 0x3C0F CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x12A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x125 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x125 JUMPI CALLER ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH2 0xA04 PUSH2 0xFFFF NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE ISZERO PUSH2 0xE1 JUMPI POP PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3ACE SWAP1 DUP2 PUSH2 0x141 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x45F ADD MSTORE DUP2 DUP2 PUSH2 0xAEA ADD MSTORE PUSH2 0x1253 ADD MSTORE RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x696D706C207A65726F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4A61752 EQ PUSH2 0x2B24 JUMPI POP DUP1 PUSH4 0x814AB82 EQ PUSH2 0x2ADD JUMPI DUP1 PUSH4 0xA6005DA EQ PUSH2 0x2AB9 JUMPI DUP1 PUSH4 0xFC8C4ED EQ PUSH2 0x2A90 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x2928 JUMPI DUP1 PUSH4 0x1E59D584 EQ PUSH2 0x2796 JUMPI DUP1 PUSH4 0x20C5718F EQ PUSH2 0x250E JUMPI DUP1 PUSH4 0x21040FC3 EQ PUSH2 0x23FE JUMPI DUP1 PUSH4 0x2C8FE526 EQ PUSH2 0x23BA JUMPI DUP1 PUSH4 0x2D771F30 EQ PUSH2 0x2391 JUMPI DUP1 PUSH4 0x2E33B07F EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x3589CF72 EQ PUSH2 0x2373 JUMPI DUP1 PUSH4 0x37012762 EQ PUSH2 0x2294 JUMPI DUP1 PUSH4 0x42F1181E EQ PUSH2 0x21A3 JUMPI DUP1 PUSH4 0x503C0B88 EQ PUSH2 0x1F31 JUMPI DUP1 PUSH4 0x5C5BB6F2 EQ PUSH2 0x1F13 JUMPI DUP1 PUSH4 0x63679723 EQ PUSH2 0x1EF5 JUMPI DUP1 PUSH4 0x6805036D EQ PUSH2 0x1D95 JUMPI DUP1 PUSH4 0x6D8A1390 EQ PUSH2 0x1D6A JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x1C7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C25 JUMPI DUP1 PUSH4 0x7200B829 EQ PUSH2 0x1ABD JUMPI DUP1 PUSH4 0x72EECD21 EQ PUSH2 0x115B JUMPI DUP1 PUSH4 0x7E9EAE50 EQ PUSH2 0x103D JUMPI DUP1 PUSH4 0x83FBEA51 EQ PUSH2 0x101F JUMPI DUP1 PUSH4 0x861A68D6 EQ PUSH2 0xFFE JUMPI DUP1 PUSH4 0x8C09B7C3 EQ PUSH2 0xFBE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF97 JUMPI DUP1 PUSH4 0x9804A586 EQ PUSH2 0xF4D JUMPI DUP1 PUSH4 0xA9BEA789 EQ PUSH2 0xDD9 JUMPI DUP1 PUSH4 0xAA1F0595 EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0xB6202913 EQ PUSH2 0xBB1 JUMPI DUP1 PUSH4 0xB6DE7B43 EQ PUSH2 0xB5B JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xBD487725 EQ PUSH2 0xAD4 JUMPI DUP1 PUSH4 0xC17F9E59 EQ PUSH2 0x8A0 JUMPI DUP1 PUSH4 0xC416AD2A EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC892FDE3 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xCBF2080D EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xD3050EBA EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xD41ECA64 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xD8D6E8FF EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xDF4DB463 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xE5047770 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xEFF0AB92 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xF08E231E EQ PUSH2 0x276 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x271 JUMPI PUSH2 0x24C PUSH2 0x38B7 JUMP JUMPDEST ISZERO PUSH2 0x25D JUMPI PUSH2 0x25A SWAP1 PUSH2 0x3902 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP3 JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x20 PUSH2 0x2A0 DUP4 PUSH2 0x2EB2 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x331 JUMPI POP POP POP DUP2 PUSH2 0x2FD JUMPI PUSH1 0x20 SWAP2 POP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH3 0x93A80 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D JUMPI POP PUSH2 0x318 PUSH1 0x20 SWAP2 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x33B DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x3A2 JUMPI TIMESTAMP LT PUSH2 0x35E JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2E1 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI JUMPDEST ISZERO PUSH2 0x356 JUMPI SWAP4 POP PUSH1 0x1 PUSH2 0x37A DUP6 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP5 SWAP1 POP PUSH2 0x356 JUMP JUMPDEST POP DUP5 PUSH2 0x395 DUP3 DUP5 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR LT PUSH2 0x367 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH2 0x100 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x3DC DUP4 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1F NOT DUP5 ADD CALLDATASIZE DUP5 CALLDATACOPY DUP1 JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x404 DUP2 PUSH2 0x2E99 JUMP JUMPDEST SLOAD PUSH2 0x40F DUP3 DUP7 PUSH2 0x2F9E JUMP JUMPDEST MSTORE ADD PUSH2 0x3EF JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x2 SLOAD SWAP4 PUSH1 0x3 SLOAD SWAP6 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP2 PUSH1 0x7 SLOAD SWAP4 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 PUSH2 0x160 DUP14 ADD SWAP10 DUP14 MSTORE DUP13 PUSH1 0x20 ADDRESS SWAP2 ADD MSTORE DUP13 PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE DUP2 DUP2 AND PUSH1 0x80 DUP14 ADD MSTORE PUSH1 0x8 SHR AND PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x160 PUSH2 0x140 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH2 0x180 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x4CE JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4C0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0xE0 SWAP1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x509 DUP3 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x40 MLOAD SWAP1 PUSH2 0x51A DUP4 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 CALLDATASIZE DUP4 CALLDATACOPY DUP1 JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x543 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x535 DUP2 PUSH2 0x2E99 JUMP JUMPDEST SLOAD DUP2 PUSH1 0x5 SHL DUP6 ADD MSTORE ADD PUSH2 0x520 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP1 DUP3 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x558 JUMPI POP POP POP RETURN JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x54B JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x5A4 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x384C JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x6 DUP2 EQ PUSH1 0x0 EQ PUSH2 0x5DA JUMPI POP PUSH2 0x5D4 PUSH1 0x6 SLOAD PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x7 EQ PUSH2 0x5E4 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x5EF PUSH1 0x7 SLOAD PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3B6 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x69F JUMPI PUSH32 0x321994B8855AE38E4FD6162F7A0BD7CDE88BE83AA3ACC96E03C17B7F733B43E1 SWAP3 PUSH1 0x40 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x68A JUMPI JUMPDEST PUSH2 0x665 SWAP1 PUSH2 0x327C JUMP JUMPDEST DUP3 PUSH2 0xFF00 PUSH1 0x3 SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 PUSH2 0xFFFF NOT AND OR OR PUSH1 0x3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLER DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x65C JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 DUP3 SWAP1 DUP4 DUP1 SWAP2 DUP2 SWAP1 DUP1 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x7AD JUMPI POP POP POP PUSH1 0x3 SLOAD SWAP5 DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x77B JUMPI POP DUP1 SWAP2 JUMPDEST DUP1 PUSH2 0x755 JUMPI POP PUSH1 0xC0 SWAP5 PUSH1 0xFF DUP1 SWAP3 SWAP5 JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP8 AND DUP8 MSTORE DUP2 DUP4 AND PUSH1 0x20 DUP9 ADD MSTORE AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x8 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 PUSH3 0x278D00 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D JUMPI POP PUSH1 0xC0 SWAP5 PUSH1 0xFF PUSH2 0x775 DUP2 SWAP4 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP5 PUSH2 0x72A JUMP JUMPDEST PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x799 JUMPI PUSH2 0x793 SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP2 PUSH2 0x71B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x7B7 DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x278D00 DUP2 ADD DUP1 DUP3 GT PUSH2 0x833 JUMPI TIMESTAMP LT PUSH2 0x7DB JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x700 JUMP JUMPDEST SWAP6 PUSH2 0x7E5 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP6 DUP6 ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI JUMPDEST PUSH2 0x847 JUMPI JUMPDEST PUSH3 0x93A80 DUP2 ADD DUP1 DUP3 GT PUSH2 0x833 JUMPI TIMESTAMP LT ISZERO PUSH2 0x7D2 JUMPI SWAP7 PUSH2 0x812 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP7 DUP9 ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI JUMPDEST ISZERO PUSH2 0x7D2 JUMPI SWAP8 POP PUSH1 0x1 PUSH2 0x7D2 JUMP JUMPDEST POP DUP9 DUP2 LT PUSH2 0x81C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP5 POP DUP5 PUSH2 0x7F4 JUMP JUMPDEST POP DUP6 DUP2 LT PUSH2 0x7EF JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x20 PUSH2 0x2A0 DUP4 PUSH2 0x2E99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x1 SUB PUSH2 0xA8A JUMPI PUSH3 0x278CFF NOT TIMESTAMP ADD SWAP1 TIMESTAMP DUP3 GT PUSH2 0xA76 JUMPI DUP1 DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP3 DUP5 JUMPDEST DUP5 DUP2 LT DUP1 PUSH2 0xA5D JUMPI JUMPDEST ISZERO PUSH2 0x923 JUMPI PUSH2 0x91E SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST DUP4 DUP4 DUP8 SWAP3 DUP1 PUSH2 0x9A9 JUMPI JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x995 JUMPI DUP2 PUSH2 0x950 SWAP2 PUSH1 0x1 PUSH2 0x968 SWAP5 ADD DUP2 SSTORE PUSH2 0x2CE7 JUMP JUMPDEST TIMESTAMP SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x498F5E6DCF570483A1848853791046A7F10012193176D71F959F46EB7713D744 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP3 DUP1 JUMPDEST PUSH2 0x9B7 DUP6 DUP5 SLOAD PUSH2 0x32E4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA07 JUMPI DUP1 PUSH2 0xA01 PUSH2 0x9D7 PUSH2 0x9D1 DUP9 PUSH1 0x1 SWAP6 PUSH2 0x32D7 JUMP JUMPDEST DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH2 0x9E8 DUP4 DUP8 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD PUSH2 0x9AC JUMP JUMPDEST POP SWAP3 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xA18 JUMPI POP PUSH2 0x92D JUMP JUMPDEST DUP3 SLOAD DUP1 ISZERO PUSH2 0xA49 JUMPI PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD PUSH2 0xA32 DUP2 DUP7 PUSH2 0x2CE7 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE DUP5 SSTORE ADD PUSH2 0xA0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP2 PUSH2 0xA69 DUP3 DUP6 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR LT PUSH2 0x910 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B73B30B634B21031B0B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH2 0xB99 SWAP3 PUSH2 0xBAD SWAP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x2 SLOAD DUP2 SWAP1 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0xD17 JUMPI POP PUSH2 0xBDA DUP3 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0xBED PUSH2 0xBE7 DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP4 PUSH2 0x2F54 JUMP JUMPDEST SWAP1 DUP5 DUP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xC0B JUMPI POP POP POP PUSH2 0xBAD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0xC14 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO DUP1 PUSH2 0xD03 JUMPI PUSH1 0x6 DUP3 EQ DUP1 ISZERO PUSH2 0xCF7 JUMPI JUMPDEST PUSH2 0xC5B JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0xC64 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC80 DUP5 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCE3 JUMPI DUP2 PUSH2 0xCDC SWAP2 PUSH2 0xC96 PUSH1 0x1 SWAP5 DUP11 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCA0 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP10 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0xCC1 PUSH1 0x40 DUP11 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0xCCB DUP3 DUP9 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCD6 DUP2 DUP8 PUSH2 0x2F9E JUMP JUMPDEST POP PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC4F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP POP DUP8 PUSH1 0x7 DUP3 EQ PUSH2 0xC4A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH2 0xD20 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xD83 JUMPI PUSH1 0x6 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xD78 JUMPI JUMPDEST POP PUSH2 0xD64 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 PUSH2 0xD70 PUSH1 0x1 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x7 SWAP2 POP EQ CODESIZE PUSH2 0xD56 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0xE0A PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x384C JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x38E0 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xF09 JUMPI CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0xEE7 JUMPI JUMPDEST ISZERO PUSH2 0xEAB JUMPI PUSH2 0xE49 DUP2 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0xE54 CALLVALUE DUP3 SLOAD PUSH2 0x32D7 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xE62 CALLVALUE PUSH1 0x4 SLOAD PUSH2 0x32D7 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0xE74 PUSH1 0x3 CALLVALUE DIV PUSH1 0x5 SLOAD PUSH2 0x32D7 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 CALLVALUE DUP3 MSTORE PUSH32 0x606617FD09D9890413E3C46147B844D4562351F86E0F7A5C60849BBF0EF02811 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B63632B9103737BA10309036B4B9B9B4B7B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x7 EQ PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x3B6 JUMPI PUSH2 0xF7B SWAP1 PUSH2 0x36CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x40 SWAP3 POP PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x80 PUSH2 0xFD9 PUSH2 0x365C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP1 DUP4 GT PUSH2 0x1153 JUMPI JUMPDEST PUSH2 0x1067 DUP4 PUSH2 0x2F22 JUMP JUMPDEST SWAP2 PUSH2 0x1071 DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP4 PUSH2 0x107B DUP2 PUSH2 0x2F54 JUMP JUMPDEST SWAP3 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT DUP4 JUMPDEST DUP4 DUP2 LT PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xBAD DUP9 DUP12 DUP12 DUP5 PUSH2 0x2C41 JUMP JUMPDEST DUP2 PUSH2 0x3A2 JUMPI PUSH2 0x10B4 PUSH2 0x10AF DUP3 DUP6 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x10D1 DUP4 DUP11 PUSH2 0x2F9E JUMP JUMPDEST MSTORE DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x113F JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x10F8 DUP3 DUP12 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x1102 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP7 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x1123 PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x112D DUP3 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x1138 DUP2 DUP9 PUSH2 0x2F9E JUMP JUMPDEST POP ADD PUSH2 0x1086 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP2 POP DUP2 PUSH2 0x105E JUMP JUMPDEST POP PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x7 PUSH1 0x4 CALLDATALOAD LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x3B6 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x273 JUMPI PUSH2 0x104 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x3B6 JUMPI PUSH2 0x124 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x271 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x271 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x69F JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP4 ADD ADD GT PUSH2 0x69F JUMPI DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1AA7 JUMPI JUMPDEST PUSH2 0x11F9 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH2 0x1201 PUSH2 0x38E0 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF DUP4 AND LT PUSH2 0x1A48 JUMPI PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND LT PUSH2 0x19DD JUMPI PUSH1 0xFF DUP4 AND PUSH1 0xFF DUP8 AND LT PUSH2 0x1973 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD LT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD LT PUSH2 0x18C4 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD GT ISZERO PUSH2 0x1880 JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x1827 JUMPI PUSH32 0x0 PUSH1 0x88 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 OR DUP6 MSTORE PUSH1 0x78 SHL PUSH15 0x5AF43D82803E903D91602B57FD5BF3 OR PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x37 PUSH1 0x9 DUP7 CREATE AND SWAP5 DUP6 ISZERO PUSH2 0x1818 JUMPI DUP5 SWAP1 PUSH2 0x12D1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB2 JUMP JUMPDEST PUSH2 0x12DB DUP2 SLOAD PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 SSTORE DUP1 ISZERO PUSH2 0x163E JUMPI DUP1 DUP1 PUSH1 0x24 PUSH2 0x12F2 PUSH1 0x20 SWAP5 PUSH2 0x2ECB JUMP JUMPDEST SWAP6 PUSH2 0x1300 PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP8 MSTORE ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP5 JUMPDEST DUP5 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x162A JUMPI PUSH2 0x135F DUP3 SLOAD PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15E5 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1581 JUMPI DUP8 SWAP2 PUSH2 0x1576 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP6 EXTCODESIZE ISZERO PUSH2 0x1572 JUMPI PUSH1 0xFF SWAP3 SWAP2 DUP4 DUP1 SWAP3 PUSH1 0x40 MLOAD SWAP7 PUSH4 0x17A0F857 PUSH1 0xE2 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE ADDRESS PUSH1 0x24 DUP9 ADD MSTORE PUSH2 0x13D4 PUSH1 0x44 DUP9 ADD PUSH1 0x4 CALLDATALOAD PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x64 DUP9 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x84 DUP9 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA4 DUP9 ADD MSTORE AND PUSH1 0xC4 DUP7 ADD MSTORE AND PUSH1 0xE4 DUP5 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x104 DUP5 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH2 0x124 DUP5 ADD MSTORE AND PUSH2 0x144 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x164 DUP3 ADD MSTORE DUP2 DUP2 DUP1 PUSH2 0x142B PUSH2 0x184 DUP3 ADD DUP9 PUSH2 0x2BC3 JUMP JUMPDEST SUB DUP2 CALLVALUE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x1539 JUMPI DUP3 SWAP1 PUSH2 0x1562 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x154E JUMPI DUP1 PUSH1 0x1 PUSH2 0x145F SWAP3 ADD PUSH1 0x2 SSTORE PUSH2 0x2CB6 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP5 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD DUP3 PUSH32 0xAC1AC89285BF936F515AAFCF6808B3E062E77FD57F52C8892D20FC9409B8B53 DUP4 DUP1 LOG3 PUSH2 0x14AE PUSH1 0x4 CALLDATALOAD PUSH2 0x2E99 JUMP JUMPDEST SLOAD PUSH1 0x2 SHR DUP1 ISZERO ISZERO DUP1 PUSH2 0x1544 JUMPI JUMPDEST PUSH2 0x14E2 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE PUSH2 0xBAD PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST PUSH2 0x14ED PUSH1 0x4 CALLDATALOAD PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x14F8 DUP3 DUP3 SLOAD PUSH2 0x32E4 JUMP JUMPDEST SWAP1 SSTORE DUP3 EXTCODESIZE ISZERO PUSH2 0x3B6 JUMPI DUP2 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xEB2BAB77 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x1539 JUMPI ISZERO PUSH2 0x14C0 JUMPI PUSH2 0x152F DUP3 DUP1 SWAP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0x273 JUMPI DUP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x14BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x156B SWAP2 PUSH2 0x2DD4 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x143E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 POP DUP9 ADD MLOAD CODESIZE PUSH2 0x137E JUMP JUMPDEST SWAP2 POP DUP3 DUP8 MSTORE DUP2 DUP8 KECCAK256 DUP8 SWAP3 JUMPDEST DUP11 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x15CE JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x15B5 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1392 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x15A9 JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x158C JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1620 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1615 JUMPI POP PUSH2 0x1368 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP POP PUSH2 0x164C PUSH1 0x4 CALLDATALOAD PUSH2 0x3949 JUMP JUMPDEST PUSH2 0x1657 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB2 JUMP JUMPDEST SLOAD DUP5 DUP2 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x17F5 JUMPI JUMPDEST DUP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0xA SWAP3 LT ISZERO PUSH2 0x17DA JUMPI JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x17C6 JUMPI JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0x17B5 JUMPI JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x17A6 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x1798 JUMPI JUMPDEST LT ISZERO PUSH2 0x1790 JUMPI JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 PUSH1 0xA PUSH1 0x21 PUSH2 0x16F7 PUSH2 0x16E1 DUP7 PUSH2 0x2ECB JUMP JUMPDEST SWAP6 PUSH2 0x16EF PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x2DD4 JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x2ECB JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP7 CALLDATACOPY DUP6 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP2 ISZERO PUSH2 0x1737 JUMPI PUSH1 0xA SWAP1 PUSH2 0x1708 JUMP JUMPDEST POP POP PUSH2 0x1779 SWAP3 PUSH1 0x20 PUSH1 0x3 SWAP3 PUSH2 0x178A SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP5 PUSH2 0x175E DUP10 SWAP7 MLOAD DUP1 SWAP3 DUP8 DUP1 DUP11 ADD SWAP2 ADD PUSH2 0x2BA0 JUMP JUMPDEST DUP6 ADD SWAP2 PUSH3 0x10169 PUSH1 0xED SHL DUP6 DUP5 ADD MSTORE MLOAD DUP1 SWAP4 PUSH1 0x23 DUP5 ADD SWAP1 PUSH2 0x2BA0 JUMP JUMPDEST ADD ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2DD4 JUMP JUMPDEST SWAP5 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x4 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16BB JUMP JUMPDEST PUSH4 0x5F5E100 PUSH1 0x8 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16B0 JUMP JUMPDEST PUSH7 0x2386F26FC10000 PUSH1 0x10 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16A3 JUMP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0x20 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x1693 JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP3 DIV PUSH2 0x1679 JUMP JUMPDEST PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E726F6C6C6D656E7420616D6F756E74206D75737420626520677265617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x72207468616E207A65726F PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E207374617274206D757374206265206265666F726520656E64 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E207374617274206D757374206265206F6E206F722061667465 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1C88195B9C9BDB1B1B595B9D08195B99 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E726F6C6C6D656E74207374617274206D757374206265206265666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x195B99 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20706C6179657273206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E206F7220657175616C20746F206D696E696D756D20706C6179657273 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D20706C6179657273206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E206F7220657175616C20746F206D697373696F6E20726F756E647300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E20726F756E6473206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x68616E206F7220657175616C20746F2035 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLER DUP5 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x11F0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1C0F JUMPI JUMPDEST PUSH2 0x1AEB SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BCB JUMPI PUSH1 0x8 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x799 JUMPI TIMESTAMP GT PUSH2 0x1B93 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1B28 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3902 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xDD72DD33198968A9CDC9B1E5CBFF344FB8D04D99F8C15C0A02416B04E857B467 SWAP2 SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND PUSH1 0xA SSTORE DUP1 PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x141C9BDC1BDCD85B08195E1C1A5C9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420636F6E6669726D20796F7572206F776E2070726F706F73616C PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AE2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH2 0x1C3E PUSH2 0x38B7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1D54 JUMPI JUMPDEST PUSH2 0x1CC3 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH2 0x1CCE DUP2 ISZERO ISZERO PUSH2 0x32F1 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1D1E JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x66D5F06F711AF3C9FEBA3203FDB00B51345D514C68585D9D319C5FF5E6F77592 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1CBA JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH2 0xBAD PUSH2 0x1D86 PUSH2 0x3360 JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 SWAP4 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2CFF JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x2 SLOAD DUP2 SWAP1 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x1E88 JUMPI POP PUSH2 0x1DBE DUP3 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x1DCB PUSH2 0xBE7 DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 DUP5 DUP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DE9 JUMPI POP POP POP PUSH2 0xBAD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x1DF2 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO DUP1 PUSH2 0xD03 JUMPI PUSH1 0x6 DUP3 EQ ISZERO DUP1 PUSH2 0x1E7B JUMPI JUMPDEST PUSH2 0x1E39 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x1E42 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E5E DUP5 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCE3 JUMPI DUP2 PUSH2 0x1E74 SWAP2 PUSH2 0xC96 PUSH1 0x1 SWAP5 DUP11 PUSH2 0x2F9E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1E2D JUMP JUMPDEST POP POP DUP8 PUSH1 0x7 DUP3 EQ ISZERO PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x1E91 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xD83 JUMPI PUSH1 0x6 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x1EE9 JUMPI JUMPDEST POP PUSH2 0x1ED5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1DAD JUMP JUMPDEST SWAP2 PUSH2 0x1EE1 PUSH1 0x1 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x7 SWAP2 POP EQ ISZERO CODESIZE PUSH2 0x1EC7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x2 SLOAD DUP3 SWAP1 DUP1 DUP1 JUMPDEST PUSH2 0x20F5 JUMPI POP PUSH2 0x1F6E DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP3 PUSH2 0x1F81 PUSH2 0x1F7B DUP7 PUSH2 0x2F22 JUMP JUMPDEST SWAP6 PUSH2 0x2F54 JUMP JUMPDEST SWAP3 DUP1 SWAP3 DUP1 JUMPDEST PUSH2 0x1F9A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xBAD DUP8 DUP11 DUP11 DUP5 PUSH2 0x2CFF JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0xA76 JUMPI PUSH2 0x1FAF SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x9C95E1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x20BC JUMPI DUP5 SWAP2 PUSH2 0x20C7 JUMPI JUMPDEST POP PUSH2 0x2002 JUMPI JUMPDEST POP PUSH2 0x1FFC SWAP1 PUSH2 0x332F JUMP JUMPDEST DUP1 PUSH2 0x1F86 JUMP JUMPDEST DUP1 PUSH2 0x2010 DUP7 DUP10 SWAP8 SWAP5 SWAP8 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH4 0x68C6BA21 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x20BC JUMPI DUP5 SWAP2 PUSH2 0x2080 JUMPI JUMPDEST POP SWAP2 PUSH2 0x2079 SWAP2 PUSH2 0x2051 PUSH2 0x1FFC SWAP5 PUSH2 0x204C DUP5 DUP14 PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3354 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x2064 PUSH1 0x40 DUP6 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x206E DUP3 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCD6 DUP2 DUP9 PUSH2 0x2F9E JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x20B4 JUMPI JUMPDEST DUP2 PUSH2 0x209A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69F JUMPI MLOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH2 0x2079 PUSH2 0x2035 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x208D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x20E8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x20EE JUMPI JUMPDEST PUSH2 0x20E0 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x333C JUMP JUMPDEST CODESIZE PUSH2 0x1FEC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x218F JUMPI PUSH1 0x20 PUSH2 0x210E PUSH1 0x24 SWAP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x9C95E1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE SWAP4 DUP5 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x20BC JUMPI DUP5 SWAP2 PUSH2 0x2171 JUMPI JUMPDEST POP PUSH2 0x215C JUMPI JUMPDEST PUSH2 0x2156 SWAP1 PUSH2 0x332F JUMP JUMPDEST DUP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP4 PUSH2 0x2169 PUSH2 0x2156 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x214D JUMP JUMPDEST PUSH2 0x2189 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x20EE JUMPI PUSH2 0x20E0 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST CODESIZE PUSH2 0x2147 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x227E JUMPI JUMPDEST PUSH2 0x21E7 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH2 0x21F2 DUP2 ISZERO ISZERO PUSH2 0x32F1 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x2244 JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x10AC961F00D5E732BA4DCC2C6FB09BEBEA0EB9EDD2A75C8109775EF288382E67 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E48185D5D1A1BDC9A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x21DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x2302 JUMPI POP POP POP DUP2 PUSH2 0x22E7 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH3 0x278D00 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D JUMPI POP PUSH2 0x318 PUSH1 0x20 SWAP2 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x230C DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x278D00 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x3A2 JUMPI TIMESTAMP LT PUSH2 0x232F JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x22CC JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x235A JUMPI JUMPDEST ISZERO PUSH2 0x2327 JUMPI SWAP4 POP PUSH1 0x1 PUSH2 0x234B DUP6 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP5 SWAP1 POP PUSH2 0x2327 JUMP JUMPDEST POP DUP5 PUSH2 0x2366 DUP3 DUP5 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR LT PUSH2 0x2338 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x20 PUSH2 0x23E5 DUP4 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x271 JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x24F8 JUMPI JUMPDEST PUSH2 0x2441 SWAP1 PUSH2 0x327C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE TIMESTAMP PUSH1 0x8 SSTORE PUSH32 0xC29BDBD554E41DF97E5C40FC273A09677AC133C245F0064BDFFEF5CC72176E19 PUSH1 0x40 MLOAD DUP1 PUSH2 0x24B9 CALLER SWAP5 TIMESTAMP SWAP1 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B2103732BB9037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2438 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x60 PUSH2 0x200 PUSH1 0x40 MLOAD PUSH2 0x2546 DUP2 PUSH2 0x2DA2 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP5 DUP4 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP5 PUSH1 0xA0 DUP3 ADD MSTORE DUP5 PUSH1 0xC0 DUP3 ADD MSTORE DUP5 PUSH1 0xE0 DUP3 ADD MSTORE DUP5 PUSH2 0x100 DUP3 ADD MSTORE DUP5 PUSH2 0x120 DUP3 ADD MSTORE DUP5 PUSH2 0x140 DUP3 ADD MSTORE DUP5 PUSH2 0x160 DUP3 ADD MSTORE DUP5 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP5 PUSH2 0x1C0 DUP3 ADD MSTORE DUP3 PUSH2 0x1E0 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO PUSH2 0x2751 JUMPI DUP2 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1F385F79 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1539 JUMPI DUP3 SWAP2 PUSH2 0x272F JUMPI JUMPDEST POP SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH2 0x25FB DUP3 MLOAD PUSH2 0x220 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x240 DUP6 ADD SWAP1 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 PUSH2 0x260E PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xA0 DUP5 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xC0 DUP5 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x120 DUP5 ADD MLOAD AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x140 DUP5 ADD MLOAD AND PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x180 DUP4 ADD MLOAD PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1A0 DUP4 ADD MLOAD SWAP2 PUSH1 0x1F NOT DUP6 DUP3 SUB ADD PUSH2 0x1C0 DUP7 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x2701 JUMPI POP POP POP SWAP1 PUSH2 0x200 PUSH2 0x26EC PUSH2 0xBAD SWAP4 PUSH2 0x1C0 DUP5 ADD MLOAD PUSH2 0x1E0 DUP8 ADD MSTORE PUSH2 0x1E0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP8 DUP4 SUB ADD DUP5 DUP9 ADD MSTORE PUSH2 0x2B63 JUMP JUMPDEST SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x220 DUP6 ADD MSTORE PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP2 DUP7 ADD MSTORE DUP8 SWAP7 POP PUSH1 0x40 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x274B SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x2743 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x303E JUMP JUMPDEST CODESIZE PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D697373696F6E2061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 DUP3 LT ISZERO SWAP2 DUP3 PUSH2 0x3B6 JUMPI PUSH1 0x2 SLOAD SWAP3 DUP3 SWAP4 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x28CD JUMPI POP PUSH2 0x27D0 DUP6 PUSH2 0x2F22 JUMP JUMPDEST SWAP4 PUSH2 0x27E3 PUSH2 0x27DD DUP8 PUSH2 0x2F22 JUMP JUMPDEST SWAP7 PUSH2 0x2F54 JUMP JUMPDEST SWAP4 DUP2 SWAP1 DUP3 JUMPDEST DUP5 DUP2 LT PUSH2 0x27FF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xBAD DUP10 DUP13 DUP13 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x2808 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND DUP7 PUSH2 0xD83 JUMPI PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xD83 JUMPI DUP3 EQ PUSH2 0x2846 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x27E8 JUMP JUMPDEST SWAP2 SWAP5 POP PUSH2 0x2852 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x286E DUP7 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x28C5 DUP5 SWAP7 PUSH2 0x2880 DUP2 DUP13 PUSH2 0x2F9E JUMP JUMPDEST PUSH1 0xFF DUP6 AND SWAP1 MSTORE PUSH2 0x288F DUP6 PUSH2 0x2CB6 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP7 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x28B0 PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x28BA DUP3 DUP12 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCD6 DUP2 DUP11 PUSH2 0x2F9E JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x283E JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND DUP4 PUSH2 0x113F JUMPI PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x113F JUMPI DUP5 EQ PUSH2 0x2914 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP5 PUSH2 0x2920 PUSH1 0x1 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0x290C JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2945 PUSH2 0x38B7 JUMP JUMPDEST PUSH2 0x294D PUSH2 0x38E0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 DUP3 ISZERO PUSH2 0x2A53 JUMPI ISZERO PUSH2 0x2A4C JUMPI JUMPDEST SELFBALANCE DUP2 GT PUSH2 0x2A10 JUMPI DUP3 DUP1 DUP1 DUP1 DUP5 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x2A0B JUMPI RETURNDATASIZE PUSH2 0x2985 DUP2 PUSH2 0x2ECB JUMP JUMPDEST SWAP1 PUSH2 0x2993 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x29D4 JUMPI PUSH1 0x20 PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21036B0B730B3B2B91037BBB732B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xD DUP5 MSTORE KECCAK256 SLOAD AND PUSH2 0x2B22 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x2B40 JUMP JUMPDEST RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3B6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3B6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x2B4D JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2B81 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2BB3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2BA3 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2BDC DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2C14 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x2C32 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x2BC3 JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x2C05 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 PUSH2 0x2C56 SWAP1 PUSH1 0x60 DUP7 MSTORE PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x2B63 JUMP JUMPDEST SWAP4 DUP1 DUP6 SUB PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP7 DUP8 DUP2 MSTORE ADD SWAP4 ADD PUSH1 0x0 SWAP6 JUMPDEST DUP1 DUP8 LT PUSH2 0x2C8E JUMPI POP POP PUSH2 0x2C8B SWAP4 SWAP5 POP PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2BE8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 PUSH1 0xFF DUP9 MLOAD AND DUP2 MSTORE ADD SWAP6 ADD SWAP7 ADD SWAP6 SWAP1 PUSH2 0x2C6F JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x2B4D JUMPI MSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 PUSH2 0x2D14 SWAP1 PUSH1 0x60 DUP7 MSTORE PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x2B63 JUMP JUMPDEST SWAP4 DUP1 DUP6 SUB PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP7 DUP8 DUP2 MSTORE ADD SWAP4 ADD PUSH1 0x0 SWAP6 JUMPDEST DUP1 DUP8 LT PUSH2 0x2D49 JUMPI POP POP PUSH2 0x2C8B SWAP4 SWAP5 POP PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2BE8 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x20 DUP1 DUP3 PUSH2 0x2D5C PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x2B40 JUMP JUMPDEST ADD SWAP6 ADD SWAP7 ADD SWAP6 SWAP1 PUSH2 0x2D2D JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2D98 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2D82 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2D77 JUMP JUMPDEST PUSH2 0x220 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2DBE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2DBE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2E09 DUP5 PUSH2 0x2D68 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2E77 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2E30 JUMPI JUMPDEST POP PUSH2 0x2E2E SWAP3 POP SUB DUP4 PUSH2 0x2DD4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2E5B JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x2E2E SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x2E2E SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2DBE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2EF5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2DBE JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2F2C DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x2F39 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2F4A PUSH1 0x1F NOT SWAP2 PUSH2 0x2F0B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x2F5E DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x2F6B PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2F7C PUSH1 0x1F NOT SWAP2 PUSH2 0x2F0B JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F8D JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x2F81 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2FC6 JUMPI DUP2 MLOAD PUSH2 0x2FE2 DUP2 PUSH2 0x2F0B JUMP JUMPDEST SWAP3 PUSH2 0x2FF0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2FC6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3018 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3025 DUP5 PUSH2 0x2FB2 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x300B JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x2FC6 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2FC6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2FC6 JUMPI ADD SWAP1 PUSH2 0x220 DUP3 DUP3 SUB SLT PUSH2 0x2FC6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3073 DUP4 PUSH2 0x2DA2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC6 JUMPI DUP3 PUSH2 0x308F SWAP2 DUP4 ADD PUSH2 0x2FCB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2FC6 JUMPI PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x30CE PUSH1 0xA0 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x30DF PUSH1 0xC0 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x3107 PUSH2 0x120 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x311A PUSH2 0x140 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC6 JUMPI DUP2 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2FC6 JUMPI DUP1 MLOAD PUSH2 0x3164 DUP2 PUSH2 0x2F0B JUMP JUMPDEST SWAP2 PUSH2 0x3172 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP3 PUSH1 0x6 SHL DUP3 ADD ADD SWAP1 DUP6 DUP3 GT PUSH2 0x2FC6 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3231 JUMPI POP POP POP PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1E0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC6 JUMPI DUP3 PUSH2 0x31CA SWAP2 DUP4 ADD PUSH2 0x2FCB JUMP JUMPDEST PUSH2 0x1E0 DUP5 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2FC6 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2FC6 JUMPI DUP1 MLOAD PUSH2 0x31FC DUP2 PUSH2 0x2ECB JUMP JUMPDEST SWAP3 PUSH2 0x320A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2FC6 JUMPI PUSH2 0x3228 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2BA0 JUMP JUMPDEST PUSH2 0x200 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP4 DUP8 SUB SLT PUSH2 0x2FC6 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x2DBE JUMPI PUSH1 0x40 SWAP3 PUSH1 0x20 SWAP3 DUP5 MSTORE PUSH2 0x3267 DUP7 PUSH2 0x2FB2 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP7 ADD MLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x318E JUMP JUMPDEST ISZERO PUSH2 0x3283 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F776E6572206F72204D697373696F6E466163746F72792061757468 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1BDC9A5E9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2EF5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2EF5 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x32F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2EF5 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2FC6 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2FC6 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x2B4D JUMPI MSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x35F3 JUMPI PUSH3 0x4F19FF NOT TIMESTAMP ADD TIMESTAMP DUP2 GT PUSH2 0x2EF5 JUMPI PUSH3 0x278CFF NOT TIMESTAMP ADD TIMESTAMP DUP2 GT PUSH2 0x2EF5 JUMPI PUSH1 0x0 SWAP3 SWAP2 DUP3 DUP1 JUMPDEST PUSH2 0x3505 JUMPI JUMPDEST POP PUSH2 0x339B DUP5 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x33A4 DUP6 PUSH2 0x2F22 JUMP JUMPDEST SWAP6 PUSH2 0x33AE DUP7 PUSH2 0x2F54 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x34FC JUMPI JUMPDEST ISZERO PUSH2 0x34F1 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x33CF DUP3 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x1F385F79 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34E5 JUMPI DUP13 SWAP2 DUP11 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x34CC JUMPI JUMPDEST POP DUP10 PUSH1 0xE0 DUP3 ADD DUP2 DUP2 MLOAD LT DUP1 PUSH2 0x34A5 JUMPI JUMPDEST ISZERO PUSH2 0x349A JUMPI POP POP PUSH2 0x100 ADD MLOAD LT JUMPDEST PUSH2 0x348B JUMPI DUP3 SWAP2 PUSH2 0x204C DUP6 PUSH2 0x3459 SWAP4 DUP2 SWAP7 PUSH2 0x3453 PUSH1 0x1 SWAP10 DUP14 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x2F9E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x346E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x3478 DUP3 DUP11 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x3483 DUP2 DUP10 PUSH2 0x2F9E JUMP JUMPDEST POP ADD SWAP1 PUSH2 0x33B3 JUMP JUMPDEST POP SWAP5 SWAP10 SWAP9 POP SWAP3 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP2 POP SWAP2 POP MLOAD LT PUSH2 0x3437 JUMP JUMPDEST POP SWAP3 POP POP SWAP2 POP PUSH1 0x8 DUP4 LT ISZERO PUSH2 0x2B4D JUMPI DUP13 SWAP2 DUP10 DUP12 SWAP3 PUSH1 0x6 DUP7 EQ DUP1 PUSH2 0x3429 JUMPI POP PUSH1 0x7 DUP7 EQ PUSH2 0x3429 JUMP JUMPDEST PUSH2 0x34DF SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x2743 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST CODESIZE PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP7 SWAP6 POP SWAP3 POP POP POP JUMP JUMPDEST POP DUP8 DUP3 LT PUSH2 0x33BC JUMP JUMPDEST PUSH1 0x0 SWAP5 SWAP4 SWAP5 NOT ADD SWAP3 PUSH2 0x3516 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x0 PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1F385F79 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34E5 JUMPI DUP6 SWAP3 DUP6 SWAP2 PUSH1 0x0 SWAP4 PUSH2 0x35D8 JUMPI JUMPDEST POP PUSH1 0xE0 DUP4 ADD SWAP1 DUP3 DUP3 MLOAD LT SWAP1 DUP2 PUSH2 0x35A8 JUMPI JUMPDEST POP ISZERO PUSH2 0x359D JUMPI POP POP PUSH2 0x100 ADD MLOAD LT JUMPDEST PUSH2 0x3596 JUMPI PUSH2 0x358F DUP5 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP5 SWAP4 PUSH2 0x338C JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x3391 JUMP JUMPDEST SWAP2 POP SWAP2 POP MLOAD LT PUSH2 0x3581 JUMP JUMPDEST SWAP3 POP POP SWAP3 POP PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI DUP6 SWAP3 DUP2 PUSH1 0x6 DUP8 SWAP4 EQ SWAP1 DUP2 ISZERO PUSH2 0x35CD JUMPI JUMPDEST POP CODESIZE PUSH2 0x3572 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP EQ CODESIZE PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x35EC SWAP2 SWAP4 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x2743 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x3561 JUMP JUMPDEST POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3604 DUP3 DUP5 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 PUSH2 0x361B DUP4 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 PUSH2 0x3634 DUP3 DUP7 PUSH2 0x2DD4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1F NOT DUP2 ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x364D JUMPI POP POP POP SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP7 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH2 0x363E JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 ISZERO PUSH2 0x36BE JUMPI PUSH3 0x15180 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x2EF5 JUMPI DUP3 TIMESTAMP LT ISZERO PUSH2 0x36A3 JUMPI PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 SWAP2 AND SWAP2 SWAP1 PUSH2 0x369C SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 POP AND SWAP2 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x37B5 JUMPI POP POP POP PUSH1 0x3 SLOAD SWAP2 PUSH1 0xFF DUP4 AND GT SWAP1 PUSH1 0xFF DUP3 ISZERO SWAP4 PUSH1 0x8 SHR AND GT SWAP2 DUP3 ISZERO SWAP3 DUP3 DUP1 PUSH2 0x37AE JUMPI JUMPDEST PUSH2 0x37A0 JUMPI DUP2 PUSH2 0x3798 JUMPI JUMPDEST POP PUSH2 0x378C JUMPI DUP2 PUSH2 0x3784 JUMPI JUMPDEST POP PUSH2 0x377A JUMPI PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2EF5 JUMPI PUSH2 0x3749 SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP1 PUSH3 0x278D00 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2EF5 JUMPI PUSH2 0x3762 SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST GT ISZERO PUSH2 0x3772 JUMPI PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x376C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x372C JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x3721 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP1 PUSH2 0x3717 JUMP JUMPDEST PUSH2 0x37BF DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x278D00 DUP2 ADD DUP1 DUP3 GT PUSH2 0x2EF5 JUMPI TIMESTAMP LT PUSH2 0x37E3 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x36EE JUMP JUMPDEST SWAP4 PUSH2 0x37ED SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP4 DUP8 ISZERO DUP1 ISZERO PUSH2 0x3843 JUMPI JUMPDEST PUSH2 0x383B JUMPI JUMPDEST PUSH3 0x93A80 DUP2 ADD DUP1 DUP3 GT PUSH2 0x2EF5 JUMPI TIMESTAMP LT ISZERO PUSH2 0x37DA JUMPI SWAP5 PUSH2 0x381A SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP5 DUP7 ISZERO DUP1 ISZERO PUSH2 0x3832 JUMPI JUMPDEST ISZERO PUSH2 0x37DA JUMPI SWAP6 POP PUSH1 0x1 PUSH2 0x37DA JUMP JUMPDEST POP DUP7 DUP2 LT PUSH2 0x3824 JUMP JUMPDEST SWAP7 POP DUP7 PUSH2 0x37FC JUMP JUMPDEST POP DUP8 DUP2 LT PUSH2 0x37F7 JUMP JUMPDEST ISZERO PUSH2 0x3853 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E466163746F72793A2063616C6C6572206973206E6F74206120 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D985B1A59081B5A5CDCDA5BDB8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x38CB JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x38F1 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3A73 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 EQ PUSH2 0x3A46 JUMPI POP PUSH1 0x3 DUP2 EQ PUSH2 0x3A20 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 EQ PUSH2 0x39FA JUMPI POP PUSH1 0x5 DUP2 EQ PUSH2 0x39D5 JUMPI PUSH1 0x6 PUSH1 0x0 SWAP2 EQ PUSH2 0x39AF JUMPI POP PUSH1 0x40 MLOAD PUSH2 0x3999 PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x437573746F6D PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x39BE PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x4D6F6E74686C79 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x39E4 PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x5765656B6C79 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x3A0B SWAP1 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x4461696C79 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3A2F PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x42694461696C79 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x3A57 SWAP1 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x517561727465724461696C79 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3A82 PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x486F75726C79 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xB5 DUP1 0xFC STOP TLOAD DUP15 0xA7 0xB3 RETURN EQ DUP12 0x4F MCOPY 0x4B PUSH12 0x3C1694CE5EA774F49E3D5CDC OR BYTE SWAP8 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"6380:55784:11:-:0;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;12622:10;1273:26:0;1269:95;;-1:-1:-1;6380:55784:11;;12622:10;-1:-1:-1;;;;;;6380:55784:11;;;;;;;;;;12622:10;;-1:-1:-1;;;;;6380:55784:11;;3052:40:0;;-1:-1:-1;3052:40:0;1857:1:6;;;6380:55784:11;;;9845:1;6380:55784;;;9845:1;6380:55784;12653:19;6380:55784;;12697:29;;;6380:55784;;;;;;;;12697:29;6380:55784;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;9845:1;6380:55784;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;6380:55784:11;;-1:-1:-1;1322:31:0;6380:55784:11;-1:-1:-1;6380:55784:11;;;;;;-1:-1:-1;6380:55784:11;;;;;-1:-1:-1;6380:55784:11"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":12210,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":12235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":13116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_MissionData_fromMemory":{"entryPoint":12350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":12336,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":11107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_array_enum_Status_dyn_array_string_dyn":{"entryPoint":11519,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_address_dyn_array_uint8_dyn_array_string_dyn":{"entryPoint":11329,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":11240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_MissionType":{"entryPoint":11433,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_Status":{"entryPoint":11072,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":11203,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":12066,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_string_dyn":{"entryPoint":12116,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":12043,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":11979,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":13015,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":13028,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":11765,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":11168,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint256":{"entryPoint":13103,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11624,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":11732,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_44937":{"entryPoint":11682,"id":null,"parameterSlots":1,"returnSlots":0},"fun_canEnroll":{"entryPoint":14029,"id":6371,"parameterSlots":1,"returnSlots":2},"fun_checkOwner":{"entryPoint":14519,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getAllMissions":{"entryPoint":13152,"id":7831,"parameterSlots":0,"returnSlots":3},"fun_getOwnershipProposal":{"entryPoint":13916,"id":8482,"parameterSlots":0,"returnSlots":4},"fun_nonReentrantBefore":{"entryPoint":14560,"id":798,"parameterSlots":0,"returnSlots":0},"fun_toHumanReadableName":{"entryPoint":14665,"id":6027,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership":{"entryPoint":14594,"id":146,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":12006,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_enum_MissionType__uint256__of_enum_MissionType":{"entryPoint":11954,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_enum_MissionType_uint256_of_enum_MissionType":{"entryPoint":11929,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":12190,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_1462":{"entryPoint":13041,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7cae":{"entryPoint":12924,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9d3d":{"entryPoint":14412,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":11495,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_address_dyn_":{"entryPoint":11446,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"write_to_memory_enum_Status":{"entryPoint":13140,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"5907":[{"length":32,"start":1119},{"length":32,"start":2794},{"length":32,"start":4691}]},"linkReferences":{},"object":"6080806040526004361015610011575b005b600090813560e01c90816304a6175214612b24575080630814ab8214612add5780630a6005da14612ab95780630fc8c4ed14612a90578063155dd5ee146129285780631e59d5841461279657806320c5718f1461250e57806321040fc3146123fe5780632c8fe526146123ba5780632d771f30146123915780632e33b07f146108765780633589cf7214612373578063370127621461229457806342f1181e146121a3578063503c0b8814611f315780635c5bb6f214611f135780636367972314611ef55780636805036d14611d955780636d8a139014611d6a5780637071293914611c7f578063715018a614611c255780637200b82914611abd57806372eecd211461115b5780637e9eae501461103d57806383fbea511461101f578063861a68d614610ffe5780638c09b7c314610fbe5780638da5cb5b14610f975780639804a58614610f4d578063a9bea78914610dd9578063aa1f059514610d97578063b620291314610bb1578063b6de7b4314610b5b578063b918161114610b19578063bd48772514610ad4578063c17f9e59146108a0578063c416ad2a14610876578063c892fde314610858578063cbf2080d146106c1578063d3050eba146106a3578063d41eca64146105f5578063d8d6e8ff1461056e578063df4db463146104e7578063e5047770146103ba578063eff0ab92146102a9578063f08e231e146102765763f2fde38b0361000f5734610273576020366003190112610273576004356001600160a01b0381168082036102715761024c6138b7565b1561025d5761025a90613902565b80f35b631e4fbdf760e01b82526004829052602482fd5b825b80fd5b5034610273576020366003190112610273576004359060078210156102735760206102a083612eb2565b54604051908152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b6578152600f6020526040812080548291825b82811061033157505050816102fd57602091505b604051908152f35b62093a80820180921161031d575061031860209142906132e4565b6102f5565b634e487b7160e01b81526011600452602490fd5b61033b8183612ce7565b90549060031b1c62093a8081018091116103a257421061035e575b6001016102e1565b84158015610389575b15610356579350600161037a8583612ce7565b90549060031b1c949050610356565b50846103958284612ce7565b90549060031b1c10610367565b634e487b7160e01b85526011600452602485fd5b5080fd5b5034610273578060031936011261027357610100906040516103dc8382612dd4565b600781526020810191601f198401368437805b60078110156104165760019061040481612e99565b5461040f8286612f9e565b52016103ef565b5091909160018060a01b0381541660025493600354956004549060055490600654916007549360ff6040519b8c9b6101608d01998d528c6020309101528c604060018060a01b037f00000000000000000000000000000000000000000000000000000000000000001691015260608d015281811660808d015260081c1660a08b015260c08a015260e089015287015261012086015261016061014086015251809152610180840192915b8181106104ce575050500390f35b82518452859450602093840193909201916001016104c0565b503461027357806003193601126102735760e090816040516105098282612dd4565b3690376040519061051a8383612dd4565b82368337805b60078110156105435760019061053581612e99565b548160051b85015201610520565b506040519190825b6007821061055857505050f35b602080600192855181520193019101909161054b565b50346102735760203660031901126102735760043560088110156103b657338252600c6020526105a460ff60408420541661384c565b338252600d6020526040822060ff1981541660ff8316179055600681146000146105da57506105d4600654612ee6565b60065580f35b6007146105e45780f35b6105ef600754612ee6565b60075580f35b50346102735760403660031901126102735760043560ff81168091036103b65760243560ff81169182820361069f577f321994b8855ae38e4fd6162f7a0bd7cde88be83aa3acc96e03c17b7f733b43e19260409260018060a01b038654163314801561068a575b6106659061327c565b8261ff006003549260081b169161ffff1916171760035582519182526020820152a180f35b50338652600b6020528386205460ff1661065c565b8380fd5b50346102735780600319360112610273576020604051620151808152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b6578152600f602052604081208190829083809181908054915b8281106107ad5750505060035494801560001461077b575080915b80610755575060c09460ff8092945b8160405197168752818316602088015216604086015260081c166060840152608083015260a0820152f35b9062278d00820180921161031d575060c09460ff610775819342906132e4565b9461072a565b62093a808101809111610799576107939042906132e4565b9161071b565b634e487b7160e01b82526011600452602482fd5b6107b78183612ce7565b90549060031b1c62278d0081018082116108335742106107db575b50600101610700565b956107e590612ee6565b958515801561084f575b610847575b62093a808101808211610833574210156107d2579661081290612ee6565b968815801561082a575b156107d257975060016107d2565b5088811061081c565b634e487b7160e01b86526011600452602486fd5b9450846107f4565b508581106107ef565b50346102735780600319360112610273576020600654604051908152f35b5034610273576020366003190112610273576004359060078210156102735760206102a083612e99565b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657338252600d60205260ff6040832054166008811015610ac057600103610a8a5762278cff19420190428211610a7657808352600f60205260408320805492845b84811080610a5d575b156109235761091e90612ee6565b610907565b83838792806109a9575b50805490600160401b821015610995578161095091600161096894018155612ce7565b429082549060031b91821b91600019901b1916179055565b7f498f5e6dcf570483a1848853791046a7f10012193176d71f959f46eb7713d7446020604051428152a280f35b634e487b7160e01b84526041600452602484fd5b92805b6109b78584546132e4565b811015610a075780610a016109d76109d1886001956132d7565b86612ce7565b90549060031b1c6109e88387612ce7565b90919082549060031b91821b91600019901b1916179055565b016109ac565b5092835b818110610a18575061092d565b82548015610a49576001919060001901610a328186612ce7565b8154906000199060031b1b19169055845501610a0b565b634e487b7160e01b86526031600452602486fd5b5081610a698285612ce7565b90549060031b1c10610910565b634e487b7160e01b83526011600452602483fd5b60405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b6044820152606490fd5b634e487b7160e01b83526021600452602483fd5b50346102735780600319360112610273576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65760408260ff9260209452600b84522054166040519015158152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657604082610b9992610bad9452601060205220612df5565b604051918291602083526020830190612bc3565b0390f35b50346102735780600319360112610273576002548190825b818110610d175750610bda82612f22565b90610bed610be784612f22565b93612f54565b9084805b828210610c0b57505050610bad9060405193849384612c41565b610c1482612cb6565b905460039190911b1c6001600160a01b03168752600d602052604087205460ff16600881101580610d0357600682148015610cf7575b610c5b575b50509060010190610bf1565b610c6484612cb6565b905460039190911b1c6001600160a01b0316610c808489612f9e565b52610ce35781610cdc91610c966001948a612f9e565b52610ca084612cb6565b848060a01b0391549060031b1c1689526010602052610cc160408a20612df5565b610ccb8288612f9e565b52610cd68187612f9e565b50612ee6565b9038610c4f565b634e487b7160e01b88526021600452602488fd5b50508760078214610c4a565b634e487b7160e01b89526021600452602489fd5b610d2081612cb6565b905460039190911b1c6001600160a01b03168452600d602052604084205460ff166008811015610d835760068114908115610d78575b50610d64575b600101610bc9565b91610d70600191612ee6565b929050610d5c565b600791501438610d56565b634e487b7160e01b85526021600452602485fd5b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65760408260ff9260209452600c84522054166040519015158152f35b5060203660031901126102735760043560078110156103b657338252600c602052610e0a60ff60408420541661384c565b610e126138e0565b3415610f0957338252600d60205260ff6040832054166008811015610ac0576006148015610ee7575b15610eab57610e4981612e99565b610e543482546132d7565b9055610e62346004546132d7565b600455610e74600334046005546132d7565b600555604051903482527f606617fd09d9890413e3c46147b844d4562351f86e0f7a5c60849bbf0ef0281160203393a36001805580f35b60405162461bcd60e51b815260206004820152601460248201527321b0b63632b9103737ba10309036b4b9b9b4b7b760611b6044820152606490fd5b50338252600d60205260ff6040832054166008811015610ac057600714610e3b565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b5034610273576020366003190112610273576004356001600160a01b03811681036103b657610f7b906136cd565b60405191151582526003811015610ac057604092506020820152f35b5034610273578060031936011261027357546040516001600160a01b039091168152602090f35b50346102735780600319360112610273576080610fd961365c565b604080516001600160a01b039586168152949093166020850152918301526060820152f35b5034610273578060031936011261027357602060ff60035416604051908152f35b50346102735780600319360112610273576020600754604051908152f35b50346102735760203660031901126102735760043590600254808311611153575b61106783612f22565b9161107184612f22565b9361107b81612f54565b926000198101908111835b83811061109d5760405180610bad888b8b84612c41565b816103a2576110b46110af82856132e4565b612cb6565b905460039190911b1c6001600160a01b0316806110d1838a612f9e565b528552600d60205260ff604086205416600881101561113f57906001916110f8828b612f9e565b5261110281612cb6565b838060a01b0391549060031b1c168652601060205261112360408720612df5565b61112d8289612f9e565b526111388188612f9e565b5001611086565b634e487b7160e01b86526021600452602486fd5b91508161105e565b5061014036600319011261027357600760043510156102735760843560ff811681036103b65760a4359160ff8316830361027357610104359160ff831683036103b65761012435926001600160401b0384116102715736602385011215610271578360040135936001600160401b03851161069f57366024868301011161069f5783546001600160a01b031633148015611aa7575b6111f99061327c565b6112016138e0565b600560ff831610611a485760ff821660ff8416106119dd5760ff831660ff8716106119735760443560243510156119225760443560c435106118c45760c43560e43511156118805760643515611827577f0000000000000000000000000000000000000000000000000000000000000000608881901c62ffffff16763d602d80600a3d3981f3363d3d373d3d3d363d7300000017855260781b6e5af43d82803e903d91602b57fd5bf3176020526001600160a01b036037600986f0169485156118185784906112d1600435612eb2565b6112db8154612ee6565b9055801561163e57808060246112f2602094612ecb565b956113006040519788612dd4565b828752018386013783010152945b848452600c60205260408420600160ff19825416179055848452600d6020526040842060ff19815416905584845260106020526040842086516001600160401b03811161162a5761135f8254612d68565b601f81116115e5575b50806020601f8211600114611581578791611576575b508160011b916000199060031b1c19161790555b83546001600160a01b031692853b156115725760ff9291838092604051966317a0f85760e21b885260048801523060248801526113d460448801600435612ca9565b6024356064880152604435608488015260643560a48801521660c48601521660e484015260c43561010484015260e4356101248401521661014482015261018061016482015281818061142b610184820188612bc3565b038134875af18015611539578290611562575b5050600254600160401b81101561154e5780600161145f9201600255612cb6565b81546001600160a01b0360039290921b91821b19169084901b179055600435827f0ac1ac89285bf936f515aafcf6808b3e062e77fd57f52c8892d20fc9409b8b538380a36114ae600435612e99565b5460021c80151580611544575b6114e2575b505060018055610bad6040519283928352604060208401526040830190612bc3565b6114ed600435612e99565b6114f88282546132e4565b9055823b156103b657816004916040519283809263eb2bab7760e01b8252875af1801561153957156114c05761152f828092612dd4565b61027357806114c0565b6040513d84823e3d90fd5b50804710156114bb565b634e487b7160e01b82526041600452602482fd5b61156b91612dd4565b388161143e565b8480fd5b90508801513861137e565b915082875281872087925b8a601f19841685106115ce57506001935082601f198116106115b5575b5050811b019055611392565b8a015160001960f88460031b161c1916905538806115a9565b81015182556020938401936001909201910161158c565b82875260208720601f830160051c81019160208410611620575b601f0160051c01905b8181106116155750611368565b878155600101611608565b90915081906115ff565b634e487b7160e01b86526041600452602486fd5b50505061164c600435613949565b611657600435612eb2565b54848172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8110156117f5575b806d04ee2d6d415b85acef8100000000600a9210156117da575b662386f26fc100008110156117c6575b6305f5e1008110156117b5575b6127108110156117a6575b6064811015611798575b1015611790575b6001810191600a60216116f76116e186612ecb565b956116ef6040519788612dd4565b808752612ecb565b602086019490601f19013686378501015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490811561173757600a90611708565b505061177992602060039261178a94604051968461175e899651809287808a019101612ba0565b8501916201016960ed1b858401525180936023840190612ba0565b01010301601f198101835282612dd4565b9461130e565b6001016116cc565b6064600291049201916116c5565b612710600491049201916116bb565b6305f5e100600891049201916116b0565b662386f26fc10000601091049201916116a3565b6d04ee2d6d415b85acef810000000060209104920191611693565b506040905072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8204611679565b63b06ebf3d60e01b8552600485fd5b60405162461bcd60e51b815260206004820152602b60248201527f456e726f6c6c6d656e7420616d6f756e74206d7573742062652067726561746560448201526a72207468616e207a65726f60a81b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4d697373696f6e207374617274206d757374206265206265666f726520656e646044820152fd5b60405162461bcd60e51b815260206004820152603060248201527f4d697373696f6e207374617274206d757374206265206f6e206f72206166746560448201526f1c88195b9c9bdb1b1b595b9d08195b9960821b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f456e726f6c6c6d656e74207374617274206d757374206265206265666f726520604482015262195b9960ea1b6064820152608490fd5b608460405162461bcd60e51b815260206004820152604060248201527f4d6178696d756d20706c6179657273206d75737420626520677265617465722060448201527f7468616e206f7220657175616c20746f206d696e696d756d20706c61796572736064820152fd5b60405162461bcd60e51b815260206004820152603f60248201527f4d696e696d756d20706c6179657273206d75737420626520677265617465722060448201527f7468616e206f7220657175616c20746f206d697373696f6e20726f756e6473006064820152608490fd5b60405162461bcd60e51b815260206004820152603160248201527f4d697373696f6e20726f756e6473206d7573742062652067726561746572207460448201527068616e206f7220657175616c20746f203560781b6064820152608490fd5b50338452600b602052604084205460ff166111f0565b503461027357806003193601126102735780546001600160a01b031633148015611c0f575b611aeb9061327c565b600a546001600160a01b03163314611bcb57600854620151808101809111610799574211611b9357600954611b28906001600160a01b0316613902565b600954604080516001600160a01b03909216825242602083015233917fdd72dd33198968a9cdc9b1e5cbff344fb8d04d99f8c15c0a02416b04e857b4679190a26001600160601b0360a01b600954166009556001600160601b0360a01b600a5416600a558060085580f35b60405162461bcd60e51b815260206004820152601060248201526f141c9bdc1bdcd85b08195e1c1a5c995960821b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f43616e6e6f7420636f6e6669726d20796f7572206f776e2070726f706f73616c6044820152fd5b50338152600b602052604081205460ff16611ae2565b5034610273578060031936011261027357611c3e6138b7565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65781546001600160a01b031633148015611d54575b611cc39061327c565b611cce8115156132f1565b808252600b60205260ff60408320541615611d1e57808252600b60205260408220805460ff191690557f66d5f06f711af3c9feba3203fdb00b51345d514c68585d9d319c5ff5e6f775928280a280f35b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b50338252600b602052604082205460ff16611cba565b5034610273578060031936011261027357610bad611d86613360565b60409391935193849384612cff565b50346102735780600319360112610273576002548190825b818110611e885750611dbe82612f22565b90611dcb610be784612f22565b9084805b828210611de957505050610bad9060405193849384612c41565b611df282612cb6565b905460039190911b1c6001600160a01b03168752600d602052604087205460ff16600881101580610d0357600682141580611e7b575b611e39575b50509060010190611dcf565b611e4284612cb6565b905460039190911b1c6001600160a01b0316611e5e8489612f9e565b52610ce35781611e7491610c966001948a612f9e565b9038611e2d565b5050876007821415611e28565b611e9181612cb6565b905460039190911b1c6001600160a01b03168452600d602052604084205460ff166008811015610d835760068114159081611ee9575b50611ed5575b600101611dad565b91611ee1600191612ee6565b929050611ecd565b60079150141538611ec7565b50346102735780600319360112610273576020600454604051908152f35b50346102735780600319360112610273576020600254604051908152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657600254829080805b6120f55750611f6e84612f22565b92611f81611f7b86612f22565b95612f54565b928092805b611f9a5760405180610bad878a8a84612cff565b6000198101818111610a7657611faf90612cb6565b9054604051629c95e160e41b81526004810186905260039290921b1c6001600160a01b031690602081602481855afa9081156120bc5784916120c7575b50612002575b50611ffc9061332f565b80611f86565b806120108689979497612f9e565b526040516368c6ba2160e01b8152602081600481855afa9081156120bc578491612080575b509161207991612051611ffc9461204c848d612f9e565b613354565b8452601060205261206460408520612df5565b61206e8289612f9e565b52610cd68188612f9e565b9390611ff2565b90506020813d82116120b4575b8161209a60209383612dd4565b8101031261069f5751600881101561069f57612079612035565b3d915061208d565b6040513d86823e3d90fd5b6120e8915060203d81116120ee575b6120e08183612dd4565b81019061333c565b38611fec565b503d6120d6565b600019810181811161218f57602061210e602492612cb6565b9054604051629c95e160e41b8152600481018990529384929091839160031b1c6001600160a01b03165afa9081156120bc578491612171575b5061215c575b6121569061332f565b80611f60565b9361216961215691612ee6565b94905061214d565b612189915060203d81116120ee576120e08183612dd4565b38612147565b634e487b7160e01b84526011600452602484fd5b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65781546001600160a01b03163314801561227e575b6121e79061327c565b6121f28115156132f1565b808252600b60205260ff60408320541661224457808252600b60205260408220805460ff191660011790557f10ac961f00d5e732ba4dcc2c6fb09bebea0eb9edd2a75c8109775ef288382e678280a280f35b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e48185d5d1a1bdc9a5e995960721b6044820152606490fd5b50338252600b602052604082205460ff166121de565b5034610273576020366003190112610273576004356001600160a01b038116908190036103b6578152600f6020526040812080548291825b82811061230257505050816122e75760209150604051908152f35b62278d00820180921161031d575061031860209142906132e4565b61230c8183612ce7565b90549060031b1c62278d0081018091116103a257421061232f575b6001016122cc565b8415801561235a575b15612327579350600161234b8583612ce7565b90549060031b1c949050612327565b50846123668284612ce7565b90549060031b1c10612338565b50346102735780600319360112610273576020600554604051908152f35b5034610273578060031936011261027357600a546040516001600160a01b039091168152602090f35b503461027357602036600319011261027357600435906002548210156102735760206123e583612cb6565b905460405160039290921b1c6001600160a01b03168152f35b5034610273576020366003190112610273576004356001600160a01b0381168082036102715782546001600160a01b0316331480156124f8575b6124419061327c565b80156124bf576001600160601b0360a01b6009541617600955336001600160601b0360a01b600a541617600a55426008557fc29bdbd554e41df97e5c40fc273a09677ac133c245f0064bdffef5cc72176e19604051806124b9339442908360209093929193604081019460018060a01b031681520152565b0390a280f35b60405162461bcd60e51b815260206004820152601160248201527024b73b30b634b2103732bb9037bbb732b960791b6044820152606490fd5b50338352600b602052604083205460ff16612438565b5034610273576020366003190112610273576004356001600160a01b038116908190036103b657606061020060405161254681612da2565b82815284602082015284604082015284838201528460808201528460a08201528460c08201528460e08201528461010082015284610120820152846101408201528461016082015284610180820152826101a0820152846101c0820152826101e082015201528015612751578160049160405192838092631f385f7960e21b82525afa90811561153957829161272f575b5090604051918291602083526125fb82516102206020860152610240850190612b63565b9061260e60208401516040860190612ca9565b6040830151606085015260608301516080850152608083015160a085015260ff60a08401511660c085015260ff60c08401511660e085015260e083015161010085015261010083015161012085015260ff6101208401511661014085015260ff610140840151166101608501526101608301516101808501526101808301516101a08501526101a083015191601f19858203016101c0860152602080845192838152019301915b81811061270157505050906102006126ec610bad936101c08401516101e08701526101e0840151601f198783030184880152612b63565b910151838203601f1901610220850152612bc3565b825180516001600160a01b0316855260209081015181860152879650604090940193909201916001016126b5565b61274b91503d8084833e6127438183612dd4565b81019061303e565b386125d7565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d697373696f6e20616464726573730000000000000000006044820152606490fd5b50346102735760203660031901126102735760043590600882101591826103b657600254928293835b8181106128cd57506127d085612f22565b936127e36127dd87612f22565b96612f54565b938190825b8481106127ff5760405180610bad898c8c84612c41565b61280881612cb6565b905460039190911b1c6001600160a01b03168452600d602052604084205460ff1686610d83576008811015610d83578214612846575b6001016127e8565b91945061285282612cb6565b905460039190911b1c6001600160a01b031661286e8689612f9e565b5260016128c58496612880818c612f9e565b60ff8516905261288f85612cb6565b848060a01b0391549060031b1c16865260106020526128b060408720612df5565b6128ba828b612f9e565b52610cd6818a612f9e565b92905061283e565b6128d681612cb6565b905460039190911b1c6001600160a01b03168552600d602052604085205460ff168361113f57600881101561113f578414612914575b6001016127bf565b94612920600191612ee6565b95905061290c565b5034610273576020366003190112610273576004356129456138b7565b61294d6138e0565b81546001600160a01b031690808215612a535715612a4c575b478111612a10578280808084865af13d15612a0b573d61298581612ecb565b906129936040519283612dd4565b81528460203d92013e5b156129d45760207feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d91604051908152a26001805580f35b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b61299d565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b5047612966565b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21036b0b730b3b2b91037bbb732b960591b6044820152606490fd5b50346102735780600319360112610273576009546040516001600160a01b039091168152602090f35b5034610273578060031936011261027357602060ff60035460081c16604051908152f35b5034610273576020366003190112610273576004356001600160a01b038116908190036103b65760408260ff9260209452600d8452205416612b226040518092612b40565bf35b9050346103b657816003193601126103b6576020906008548152f35b906008821015612b4d5752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b818110612b815750505090565b82516001600160a01b0316845260209384019390920191600101612b74565b60005b838110612bb35750506000910152565b8181015183820152602001612ba3565b90602091612bdc81518092818552858086019101612ba0565b601f01601f1916010190565b9080602083519182815201916020808360051b8301019401926000915b838310612c1457505050505090565b9091929394602080612c32600193601f198682030187528951612bc3565b97019301930191939290612c05565b939290612c5690606086526060860190612b63565b9380850360208201526020808451968781520193016000955b808710612c8e575050612c8b9394506040818403910152612be8565b90565b909360208060019260ff885116815201950196019590612c6f565b906007821015612b4d5752565b600254811015612cd157600260005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015612cd15760005260206000200190600090565b939290612d1490606086526060860190612b63565b9380850360208201526020808451968781520193016000955b808710612d49575050612c8b9394506040818403910152612be8565b909360208082612d5c6001948951612b40565b01950196019590612d2d565b90600182811c92168015612d98575b6020831014612d8257565b634e487b7160e01b600052602260045260246000fd5b91607f1691612d77565b61022081019081106001600160401b03821117612dbe57604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117612dbe57604052565b9060405191826000825492612e0984612d68565b8084529360018116908115612e775750600114612e30575b50612e2e92500383612dd4565b565b90506000929192526020600020906000915b818310612e5b575050906020612e2e9282010138612e21565b6020919350806001915483858901015201910190918492612e42565b905060209250612e2e94915060ff191682840152151560051b82010138612e21565b6007811015612b4d57600052600e602052604060002090565b6007811015612b4d576000526011602052604060002090565b6001600160401b038111612dbe57601f01601f191660200190565b6000198114612ef55760010190565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038111612dbe5760051b60200190565b90612f2c82612f0b565b612f396040519182612dd4565b8281528092612f4a601f1991612f0b565b0190602036910137565b90612f5e82612f0b565b612f6b6040519182612dd4565b8281528092612f7c601f1991612f0b565b019060005b828110612f8d57505050565b806060602080938501015201612f81565b8051821015612cd15760209160051b010190565b51906001600160a01b0382168203612fc657565b600080fd5b9080601f83011215612fc6578151612fe281612f0b565b92612ff06040519485612dd4565b81845260208085019260051b820101928311612fc657602001905b8282106130185750505090565b6020809161302584612fb2565b81520191019061300b565b519060ff82168203612fc657565b602081830312612fc6578051906001600160401b038211612fc657019061022082820312612fc6576040519161307383612da2565b80516001600160401b038111612fc6578261308f918301612fcb565b835260208101516007811015612fc65760208401526040810151604084015260608101516060840152608081015160808401526130ce60a08201613030565b60a08401526130df60c08201613030565b60c084015260e081015160e08401526101008101516101008401526131076101208201613030565b61012084015261311a6101408201613030565b6101408401526101608101516101608401526101808101516101808401526101a08101516001600160401b038111612fc657810182601f82011215612fc657805161316481612f0b565b916131726040519384612dd4565b81835260208084019260061b82010190858211612fc657602001915b818310613231575050506101a08401526101c08101516101c08401526101e08101516001600160401b038111612fc657826131ca918301612fcb565b6101e0840152610200810151906001600160401b038211612fc6570181601f82011215612fc65780516131fc81612ecb565b9261320a6040519485612dd4565b81845260208284010111612fc6576132289160208085019101612ba0565b61020082015290565b604083870312612fc6576040519060408201908282106001600160401b03831117612dbe57604092602092845261326786612fb2565b8152828601518382015281520192019161318e565b1561328357565b60405162461bcd60e51b815260206004820152602660248201527f4e6f74206f776e6572206f72204d697373696f6e466163746f727920617574686044820152651bdc9a5e995960d21b6064820152608490fd5b91908201809211612ef557565b91908203918211612ef557565b156132f857565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b8015612ef5576000190190565b90816020910312612fc657518015158103612fc65790565b6008821015612b4d5752565b60025480156135f357624f19ff194201428111612ef55762278cff194201428111612ef5576000929182805b613505575b5061339b84612f22565b6133a485612f22565b956133ae86612f54565b946000905b801515806134fc575b156134f15760001901906133cf82612cb6565b60018060a01b0391549060031b1c1680600052600d60205260ff60406000205416604051631f385f7960e21b8152600081600481865afa9081156134e5578c918a916000916134cc575b508960e0820181815110806134a5575b1561349a5750506101000151105b61348b57829161204c856134599381966134536001998d612f9e565b52612f9e565b600052601060205261346e6040600020612df5565b613478828a612f9e565b526134838189612f9e565b5001906133b3565b50949998509295505050505050565b915091505110613437565b5092505091506008831015612b4d578c91898b926006861480613429575060078614613429565b6134df913d8091833e6127438183612dd4565b38613419565b6040513d6000823e3d90fd5b509196955092505050565b508782106133bc565b600094939419019261351684612cb6565b60018060a01b0391549060031b1c1680600052600d6020526004600060ff6040822054169260405192838092631f385f7960e21b82525afa9081156134e557859285916000936135d8575b5060e08301908282511090816135a8575b501561359d5750506101000151105b6135965761358f8491612ee6565b949361338c565b9392613391565b915091505110613581565b92505092506008811015612b4d5785928160068793149081156135cd575b5038613572565b6007915014386135c6565b6135ec91933d8091833e6127438183612dd4565b9138613561565b506020604051916136048284612dd4565b6000835260003681376040519261361b8385612dd4565b6000845260003681376040519260006136348286612dd4565b8452601f19810160005b81811061364d57505050929190565b6060868201840152820161363e565b60085480156136be5762015180810191828211612ef557824210156136a357600954600a546001600160a01b03908116949116919061369c9042906132e4565b9193929190565b600954600a546001600160a01b039182169450169190600090565b50600090600090600090600090565b6001600160a01b03166000908152600f602052604081208054829182918291825b8281106137b5575050506003549160ff8316119060ff82159360081c16119182159282806137ae575b6137a05781613798575b5061378c5781613784575b5061377a5762093a808101809111612ef5576137499042906132e4565b9062278d008101809111612ef5576137629042906132e4565b1115613772576002905b60009190565b60019061376c565b5050600090600290565b90503861372c565b50505050600090600190565b905038613721565b505050505050600190600090565b5080613717565b6137bf8183612ce7565b90549060031b1c62278d008101808211612ef55742106137e3575b506001016136ee565b936137ed90612ee6565b9387158015613843575b61383b575b62093a808101808211612ef5574210156137da579461381a90612ee6565b9486158015613832575b156137da57955060016137da565b50868110613824565b9650866137fc565b508781106137f7565b1561385357565b60405162461bcd60e51b815260206004820152603660248201527f4d697373696f6e466163746f72793a2063616c6c6572206973206e6f742061206044820152751d985b1a59081b5a5cdcda5bdb8818dbdb9d1c9858dd60521b6064820152608490fd5b6000546001600160a01b031633036138cb57565b63118cdaa760e01b6000523360045260246000fd5b6002600154146138f1576002600155565b633ee5aeb560e01b60005260046000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b6007811015612b4d5760018114613a7357600060028214613a46575060038114613a20576000600482146139fa5750600581146139d5576006600091146139af5750604051613999604082612dd4565b6006815265437573746f6d60d01b602082015290565b506040516139be604082612dd4565b60078152664d6f6e74686c7960c81b602082015290565b506040516139e4604082612dd4565b60068152655765656b6c7960d01b602082015290565b50506040805190613a0b9082612dd4565b60058152644461696c7960d81b602082015290565b50604051613a2f604082612dd4565b600781526642694461696c7960c81b602082015290565b50506040805190613a579082612dd4565b600c81526b517561727465724461696c7960a01b602082015290565b50604051613a82604082612dd4565b6006815265486f75726c7960d01b60208201529056fea2646970667358221220ffb580fc005c8ea7b3f3148b4f5e4b6b3c1694ce5ea774f49e3d5cdc171a97c564736f6c634300081e0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4A61752 EQ PUSH2 0x2B24 JUMPI POP DUP1 PUSH4 0x814AB82 EQ PUSH2 0x2ADD JUMPI DUP1 PUSH4 0xA6005DA EQ PUSH2 0x2AB9 JUMPI DUP1 PUSH4 0xFC8C4ED EQ PUSH2 0x2A90 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x2928 JUMPI DUP1 PUSH4 0x1E59D584 EQ PUSH2 0x2796 JUMPI DUP1 PUSH4 0x20C5718F EQ PUSH2 0x250E JUMPI DUP1 PUSH4 0x21040FC3 EQ PUSH2 0x23FE JUMPI DUP1 PUSH4 0x2C8FE526 EQ PUSH2 0x23BA JUMPI DUP1 PUSH4 0x2D771F30 EQ PUSH2 0x2391 JUMPI DUP1 PUSH4 0x2E33B07F EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0x3589CF72 EQ PUSH2 0x2373 JUMPI DUP1 PUSH4 0x37012762 EQ PUSH2 0x2294 JUMPI DUP1 PUSH4 0x42F1181E EQ PUSH2 0x21A3 JUMPI DUP1 PUSH4 0x503C0B88 EQ PUSH2 0x1F31 JUMPI DUP1 PUSH4 0x5C5BB6F2 EQ PUSH2 0x1F13 JUMPI DUP1 PUSH4 0x63679723 EQ PUSH2 0x1EF5 JUMPI DUP1 PUSH4 0x6805036D EQ PUSH2 0x1D95 JUMPI DUP1 PUSH4 0x6D8A1390 EQ PUSH2 0x1D6A JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x1C7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C25 JUMPI DUP1 PUSH4 0x7200B829 EQ PUSH2 0x1ABD JUMPI DUP1 PUSH4 0x72EECD21 EQ PUSH2 0x115B JUMPI DUP1 PUSH4 0x7E9EAE50 EQ PUSH2 0x103D JUMPI DUP1 PUSH4 0x83FBEA51 EQ PUSH2 0x101F JUMPI DUP1 PUSH4 0x861A68D6 EQ PUSH2 0xFFE JUMPI DUP1 PUSH4 0x8C09B7C3 EQ PUSH2 0xFBE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF97 JUMPI DUP1 PUSH4 0x9804A586 EQ PUSH2 0xF4D JUMPI DUP1 PUSH4 0xA9BEA789 EQ PUSH2 0xDD9 JUMPI DUP1 PUSH4 0xAA1F0595 EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0xB6202913 EQ PUSH2 0xBB1 JUMPI DUP1 PUSH4 0xB6DE7B43 EQ PUSH2 0xB5B JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xBD487725 EQ PUSH2 0xAD4 JUMPI DUP1 PUSH4 0xC17F9E59 EQ PUSH2 0x8A0 JUMPI DUP1 PUSH4 0xC416AD2A EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC892FDE3 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xCBF2080D EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xD3050EBA EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xD41ECA64 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xD8D6E8FF EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xDF4DB463 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xE5047770 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xEFF0AB92 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xF08E231E EQ PUSH2 0x276 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x271 JUMPI PUSH2 0x24C PUSH2 0x38B7 JUMP JUMPDEST ISZERO PUSH2 0x25D JUMPI PUSH2 0x25A SWAP1 PUSH2 0x3902 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP3 JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x20 PUSH2 0x2A0 DUP4 PUSH2 0x2EB2 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x331 JUMPI POP POP POP DUP2 PUSH2 0x2FD JUMPI PUSH1 0x20 SWAP2 POP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH3 0x93A80 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D JUMPI POP PUSH2 0x318 PUSH1 0x20 SWAP2 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x33B DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x3A2 JUMPI TIMESTAMP LT PUSH2 0x35E JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2E1 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI JUMPDEST ISZERO PUSH2 0x356 JUMPI SWAP4 POP PUSH1 0x1 PUSH2 0x37A DUP6 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP5 SWAP1 POP PUSH2 0x356 JUMP JUMPDEST POP DUP5 PUSH2 0x395 DUP3 DUP5 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR LT PUSH2 0x367 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH2 0x100 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x3DC DUP4 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1F NOT DUP5 ADD CALLDATASIZE DUP5 CALLDATACOPY DUP1 JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x404 DUP2 PUSH2 0x2E99 JUMP JUMPDEST SLOAD PUSH2 0x40F DUP3 DUP7 PUSH2 0x2F9E JUMP JUMPDEST MSTORE ADD PUSH2 0x3EF JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x2 SLOAD SWAP4 PUSH1 0x3 SLOAD SWAP6 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP2 PUSH1 0x7 SLOAD SWAP4 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 PUSH2 0x160 DUP14 ADD SWAP10 DUP14 MSTORE DUP13 PUSH1 0x20 ADDRESS SWAP2 ADD MSTORE DUP13 PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE DUP2 DUP2 AND PUSH1 0x80 DUP14 ADD MSTORE PUSH1 0x8 SHR AND PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x160 PUSH2 0x140 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH2 0x180 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x4CE JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4C0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0xE0 SWAP1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x509 DUP3 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY PUSH1 0x40 MLOAD SWAP1 PUSH2 0x51A DUP4 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 CALLDATASIZE DUP4 CALLDATACOPY DUP1 JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x543 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x535 DUP2 PUSH2 0x2E99 JUMP JUMPDEST SLOAD DUP2 PUSH1 0x5 SHL DUP6 ADD MSTORE ADD PUSH2 0x520 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 SWAP1 DUP3 JUMPDEST PUSH1 0x7 DUP3 LT PUSH2 0x558 JUMPI POP POP POP RETURN JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP6 MLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x54B JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x5A4 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x384C JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x6 DUP2 EQ PUSH1 0x0 EQ PUSH2 0x5DA JUMPI POP PUSH2 0x5D4 PUSH1 0x6 SLOAD PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x7 EQ PUSH2 0x5E4 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x5EF PUSH1 0x7 SLOAD PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3B6 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0x69F JUMPI PUSH32 0x321994B8855AE38E4FD6162F7A0BD7CDE88BE83AA3ACC96E03C17B7F733B43E1 SWAP3 PUSH1 0x40 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x68A JUMPI JUMPDEST PUSH2 0x665 SWAP1 PUSH2 0x327C JUMP JUMPDEST DUP3 PUSH2 0xFF00 PUSH1 0x3 SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 PUSH2 0xFFFF NOT AND OR OR PUSH1 0x3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLER DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x65C JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 DUP3 SWAP1 DUP4 DUP1 SWAP2 DUP2 SWAP1 DUP1 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x7AD JUMPI POP POP POP PUSH1 0x3 SLOAD SWAP5 DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x77B JUMPI POP DUP1 SWAP2 JUMPDEST DUP1 PUSH2 0x755 JUMPI POP PUSH1 0xC0 SWAP5 PUSH1 0xFF DUP1 SWAP3 SWAP5 JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP8 AND DUP8 MSTORE DUP2 DUP4 AND PUSH1 0x20 DUP9 ADD MSTORE AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x8 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 PUSH3 0x278D00 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D JUMPI POP PUSH1 0xC0 SWAP5 PUSH1 0xFF PUSH2 0x775 DUP2 SWAP4 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP5 PUSH2 0x72A JUMP JUMPDEST PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x799 JUMPI PUSH2 0x793 SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP2 PUSH2 0x71B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x7B7 DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x278D00 DUP2 ADD DUP1 DUP3 GT PUSH2 0x833 JUMPI TIMESTAMP LT PUSH2 0x7DB JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x700 JUMP JUMPDEST SWAP6 PUSH2 0x7E5 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP6 DUP6 ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI JUMPDEST PUSH2 0x847 JUMPI JUMPDEST PUSH3 0x93A80 DUP2 ADD DUP1 DUP3 GT PUSH2 0x833 JUMPI TIMESTAMP LT ISZERO PUSH2 0x7D2 JUMPI SWAP7 PUSH2 0x812 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP7 DUP9 ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI JUMPDEST ISZERO PUSH2 0x7D2 JUMPI SWAP8 POP PUSH1 0x1 PUSH2 0x7D2 JUMP JUMPDEST POP DUP9 DUP2 LT PUSH2 0x81C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP5 POP DUP5 PUSH2 0x7F4 JUMP JUMPDEST POP DUP6 DUP2 LT PUSH2 0x7EF JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x20 PUSH2 0x2A0 DUP4 PUSH2 0x2E99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x1 SUB PUSH2 0xA8A JUMPI PUSH3 0x278CFF NOT TIMESTAMP ADD SWAP1 TIMESTAMP DUP3 GT PUSH2 0xA76 JUMPI DUP1 DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP3 DUP5 JUMPDEST DUP5 DUP2 LT DUP1 PUSH2 0xA5D JUMPI JUMPDEST ISZERO PUSH2 0x923 JUMPI PUSH2 0x91E SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST DUP4 DUP4 DUP8 SWAP3 DUP1 PUSH2 0x9A9 JUMPI JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x995 JUMPI DUP2 PUSH2 0x950 SWAP2 PUSH1 0x1 PUSH2 0x968 SWAP5 ADD DUP2 SSTORE PUSH2 0x2CE7 JUMP JUMPDEST TIMESTAMP SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x498F5E6DCF570483A1848853791046A7F10012193176D71F959F46EB7713D744 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP3 DUP1 JUMPDEST PUSH2 0x9B7 DUP6 DUP5 SLOAD PUSH2 0x32E4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA07 JUMPI DUP1 PUSH2 0xA01 PUSH2 0x9D7 PUSH2 0x9D1 DUP9 PUSH1 0x1 SWAP6 PUSH2 0x32D7 JUMP JUMPDEST DUP7 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH2 0x9E8 DUP4 DUP8 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD PUSH2 0x9AC JUMP JUMPDEST POP SWAP3 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xA18 JUMPI POP PUSH2 0x92D JUMP JUMPDEST DUP3 SLOAD DUP1 ISZERO PUSH2 0xA49 JUMPI PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 NOT ADD PUSH2 0xA32 DUP2 DUP7 PUSH2 0x2CE7 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE DUP5 SSTORE ADD PUSH2 0xA0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP2 PUSH2 0xA69 DUP3 DUP6 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR LT PUSH2 0x910 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B73B30B634B21031B0B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH2 0xB99 SWAP3 PUSH2 0xBAD SWAP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x2 SLOAD DUP2 SWAP1 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0xD17 JUMPI POP PUSH2 0xBDA DUP3 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0xBED PUSH2 0xBE7 DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP4 PUSH2 0x2F54 JUMP JUMPDEST SWAP1 DUP5 DUP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xC0B JUMPI POP POP POP PUSH2 0xBAD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0xC14 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO DUP1 PUSH2 0xD03 JUMPI PUSH1 0x6 DUP3 EQ DUP1 ISZERO PUSH2 0xCF7 JUMPI JUMPDEST PUSH2 0xC5B JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0xC64 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC80 DUP5 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCE3 JUMPI DUP2 PUSH2 0xCDC SWAP2 PUSH2 0xC96 PUSH1 0x1 SWAP5 DUP11 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCA0 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP10 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0xCC1 PUSH1 0x40 DUP11 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0xCCB DUP3 DUP9 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCD6 DUP2 DUP8 PUSH2 0x2F9E JUMP JUMPDEST POP PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC4F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP POP DUP8 PUSH1 0x7 DUP3 EQ PUSH2 0xC4A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH2 0xD20 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xD83 JUMPI PUSH1 0x6 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xD78 JUMPI JUMPDEST POP PUSH2 0xD64 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 PUSH2 0xD70 PUSH1 0x1 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x7 SWAP2 POP EQ CODESIZE PUSH2 0xD56 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xC DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0xE0A PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x384C JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x38E0 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xF09 JUMPI CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x6 EQ DUP1 ISZERO PUSH2 0xEE7 JUMPI JUMPDEST ISZERO PUSH2 0xEAB JUMPI PUSH2 0xE49 DUP2 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0xE54 CALLVALUE DUP3 SLOAD PUSH2 0x32D7 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xE62 CALLVALUE PUSH1 0x4 SLOAD PUSH2 0x32D7 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0xE74 PUSH1 0x3 CALLVALUE DIV PUSH1 0x5 SLOAD PUSH2 0x32D7 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 CALLVALUE DUP3 MSTORE PUSH32 0x606617FD09D9890413E3C46147B844D4562351F86E0F7A5C60849BBF0EF02811 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B63632B9103737BA10309036B4B9B9B4B7B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x7 EQ PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x3B6 JUMPI PUSH2 0xF7B SWAP1 PUSH2 0x36CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x40 SWAP3 POP PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x80 PUSH2 0xFD9 PUSH2 0x365C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP1 DUP4 GT PUSH2 0x1153 JUMPI JUMPDEST PUSH2 0x1067 DUP4 PUSH2 0x2F22 JUMP JUMPDEST SWAP2 PUSH2 0x1071 DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP4 PUSH2 0x107B DUP2 PUSH2 0x2F54 JUMP JUMPDEST SWAP3 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT DUP4 JUMPDEST DUP4 DUP2 LT PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xBAD DUP9 DUP12 DUP12 DUP5 PUSH2 0x2C41 JUMP JUMPDEST DUP2 PUSH2 0x3A2 JUMPI PUSH2 0x10B4 PUSH2 0x10AF DUP3 DUP6 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x10D1 DUP4 DUP11 PUSH2 0x2F9E JUMP JUMPDEST MSTORE DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x113F JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x10F8 DUP3 DUP12 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x1102 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP7 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x1123 PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x112D DUP3 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x1138 DUP2 DUP9 PUSH2 0x2F9E JUMP JUMPDEST POP ADD PUSH2 0x1086 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP2 POP DUP2 PUSH2 0x105E JUMP JUMPDEST POP PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x7 PUSH1 0x4 CALLDATALOAD LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x3B6 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x273 JUMPI PUSH2 0x104 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x3B6 JUMPI PUSH2 0x124 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x271 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x271 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x69F JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP4 ADD ADD GT PUSH2 0x69F JUMPI DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1AA7 JUMPI JUMPDEST PUSH2 0x11F9 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH2 0x1201 PUSH2 0x38E0 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF DUP4 AND LT PUSH2 0x1A48 JUMPI PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND LT PUSH2 0x19DD JUMPI PUSH1 0xFF DUP4 AND PUSH1 0xFF DUP8 AND LT PUSH2 0x1973 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD LT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD LT PUSH2 0x18C4 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD GT ISZERO PUSH2 0x1880 JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0x1827 JUMPI PUSH32 0x0 PUSH1 0x88 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 OR DUP6 MSTORE PUSH1 0x78 SHL PUSH15 0x5AF43D82803E903D91602B57FD5BF3 OR PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x37 PUSH1 0x9 DUP7 CREATE AND SWAP5 DUP6 ISZERO PUSH2 0x1818 JUMPI DUP5 SWAP1 PUSH2 0x12D1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB2 JUMP JUMPDEST PUSH2 0x12DB DUP2 SLOAD PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 SSTORE DUP1 ISZERO PUSH2 0x163E JUMPI DUP1 DUP1 PUSH1 0x24 PUSH2 0x12F2 PUSH1 0x20 SWAP5 PUSH2 0x2ECB JUMP JUMPDEST SWAP6 PUSH2 0x1300 PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP8 MSTORE ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP5 JUMPDEST DUP5 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x162A JUMPI PUSH2 0x135F DUP3 SLOAD PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15E5 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1581 JUMPI DUP8 SWAP2 PUSH2 0x1576 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP6 EXTCODESIZE ISZERO PUSH2 0x1572 JUMPI PUSH1 0xFF SWAP3 SWAP2 DUP4 DUP1 SWAP3 PUSH1 0x40 MLOAD SWAP7 PUSH4 0x17A0F857 PUSH1 0xE2 SHL DUP9 MSTORE PUSH1 0x4 DUP9 ADD MSTORE ADDRESS PUSH1 0x24 DUP9 ADD MSTORE PUSH2 0x13D4 PUSH1 0x44 DUP9 ADD PUSH1 0x4 CALLDATALOAD PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x64 DUP9 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x84 DUP9 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA4 DUP9 ADD MSTORE AND PUSH1 0xC4 DUP7 ADD MSTORE AND PUSH1 0xE4 DUP5 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x104 DUP5 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH2 0x124 DUP5 ADD MSTORE AND PUSH2 0x144 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x164 DUP3 ADD MSTORE DUP2 DUP2 DUP1 PUSH2 0x142B PUSH2 0x184 DUP3 ADD DUP9 PUSH2 0x2BC3 JUMP JUMPDEST SUB DUP2 CALLVALUE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x1539 JUMPI DUP3 SWAP1 PUSH2 0x1562 JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x154E JUMPI DUP1 PUSH1 0x1 PUSH2 0x145F SWAP3 ADD PUSH1 0x2 SSTORE PUSH2 0x2CB6 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP5 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD DUP3 PUSH32 0xAC1AC89285BF936F515AAFCF6808B3E062E77FD57F52C8892D20FC9409B8B53 DUP4 DUP1 LOG3 PUSH2 0x14AE PUSH1 0x4 CALLDATALOAD PUSH2 0x2E99 JUMP JUMPDEST SLOAD PUSH1 0x2 SHR DUP1 ISZERO ISZERO DUP1 PUSH2 0x1544 JUMPI JUMPDEST PUSH2 0x14E2 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE PUSH2 0xBAD PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2BC3 JUMP JUMPDEST PUSH2 0x14ED PUSH1 0x4 CALLDATALOAD PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x14F8 DUP3 DUP3 SLOAD PUSH2 0x32E4 JUMP JUMPDEST SWAP1 SSTORE DUP3 EXTCODESIZE ISZERO PUSH2 0x3B6 JUMPI DUP2 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xEB2BAB77 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 GAS CALL DUP1 ISZERO PUSH2 0x1539 JUMPI ISZERO PUSH2 0x14C0 JUMPI PUSH2 0x152F DUP3 DUP1 SWAP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH2 0x273 JUMPI DUP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x14BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x156B SWAP2 PUSH2 0x2DD4 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x143E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 POP DUP9 ADD MLOAD CODESIZE PUSH2 0x137E JUMP JUMPDEST SWAP2 POP DUP3 DUP8 MSTORE DUP2 DUP8 KECCAK256 DUP8 SWAP3 JUMPDEST DUP11 PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x15CE JUMPI POP PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x15B5 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1392 JUMP JUMPDEST DUP11 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x15A9 JUMP JUMPDEST DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x158C JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1620 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1615 JUMPI POP PUSH2 0x1368 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP POP PUSH2 0x164C PUSH1 0x4 CALLDATALOAD PUSH2 0x3949 JUMP JUMPDEST PUSH2 0x1657 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB2 JUMP JUMPDEST SLOAD DUP5 DUP2 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x17F5 JUMPI JUMPDEST DUP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0xA SWAP3 LT ISZERO PUSH2 0x17DA JUMPI JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x17C6 JUMPI JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0x17B5 JUMPI JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x17A6 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x1798 JUMPI JUMPDEST LT ISZERO PUSH2 0x1790 JUMPI JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 PUSH1 0xA PUSH1 0x21 PUSH2 0x16F7 PUSH2 0x16E1 DUP7 PUSH2 0x2ECB JUMP JUMPDEST SWAP6 PUSH2 0x16EF PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x2DD4 JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x2ECB JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP7 CALLDATACOPY DUP6 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP2 ISZERO PUSH2 0x1737 JUMPI PUSH1 0xA SWAP1 PUSH2 0x1708 JUMP JUMPDEST POP POP PUSH2 0x1779 SWAP3 PUSH1 0x20 PUSH1 0x3 SWAP3 PUSH2 0x178A SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP5 PUSH2 0x175E DUP10 SWAP7 MLOAD DUP1 SWAP3 DUP8 DUP1 DUP11 ADD SWAP2 ADD PUSH2 0x2BA0 JUMP JUMPDEST DUP6 ADD SWAP2 PUSH3 0x10169 PUSH1 0xED SHL DUP6 DUP5 ADD MSTORE MLOAD DUP1 SWAP4 PUSH1 0x23 DUP5 ADD SWAP1 PUSH2 0x2BA0 JUMP JUMPDEST ADD ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2DD4 JUMP JUMPDEST SWAP5 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x4 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16BB JUMP JUMPDEST PUSH4 0x5F5E100 PUSH1 0x8 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16B0 JUMP JUMPDEST PUSH7 0x2386F26FC10000 PUSH1 0x10 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x16A3 JUMP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0x20 SWAP2 DIV SWAP3 ADD SWAP2 PUSH2 0x1693 JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP3 DIV PUSH2 0x1679 JUMP JUMPDEST PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E726F6C6C6D656E7420616D6F756E74206D75737420626520677265617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x72207468616E207A65726F PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E207374617274206D757374206265206265666F726520656E64 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E207374617274206D757374206265206F6E206F722061667465 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1C88195B9C9BDB1B1B595B9D08195B99 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E726F6C6C6D656E74207374617274206D757374206265206265666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x195B99 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20706C6179657273206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E206F7220657175616C20746F206D696E696D756D20706C6179657273 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D20706C6179657273206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E206F7220657175616C20746F206D697373696F6E20726F756E647300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E20726F756E6473206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x68616E206F7220657175616C20746F2035 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLER DUP5 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x11F0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1C0F JUMPI JUMPDEST PUSH2 0x1AEB SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BCB JUMPI PUSH1 0x8 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x799 JUMPI TIMESTAMP GT PUSH2 0x1B93 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1B28 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3902 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xDD72DD33198968A9CDC9B1E5CBFF344FB8D04D99F8C15C0A02416B04E857B467 SWAP2 SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND PUSH1 0xA SSTORE DUP1 PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x141C9BDC1BDCD85B08195E1C1A5C9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420636F6E6669726D20796F7572206F776E2070726F706F73616C PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AE2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH2 0x1C3E PUSH2 0x38B7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1D54 JUMPI JUMPDEST PUSH2 0x1CC3 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH2 0x1CCE DUP2 ISZERO ISZERO PUSH2 0x32F1 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x1D1E JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x66D5F06F711AF3C9FEBA3203FDB00B51345D514C68585D9D319C5FF5E6F77592 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1CBA JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH2 0xBAD PUSH2 0x1D86 PUSH2 0x3360 JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 SWAP4 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2CFF JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x2 SLOAD DUP2 SWAP1 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x1E88 JUMPI POP PUSH2 0x1DBE DUP3 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 PUSH2 0x1DCB PUSH2 0xBE7 DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP1 DUP5 DUP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DE9 JUMPI POP POP POP PUSH2 0xBAD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x1DF2 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO DUP1 PUSH2 0xD03 JUMPI PUSH1 0x6 DUP3 EQ ISZERO DUP1 PUSH2 0x1E7B JUMPI JUMPDEST PUSH2 0x1E39 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x1E42 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E5E DUP5 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCE3 JUMPI DUP2 PUSH2 0x1E74 SWAP2 PUSH2 0xC96 PUSH1 0x1 SWAP5 DUP11 PUSH2 0x2F9E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1E2D JUMP JUMPDEST POP POP DUP8 PUSH1 0x7 DUP3 EQ ISZERO PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x1E91 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xD83 JUMPI PUSH1 0x6 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x1EE9 JUMPI JUMPDEST POP PUSH2 0x1ED5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1DAD JUMP JUMPDEST SWAP2 PUSH2 0x1EE1 PUSH1 0x1 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x7 SWAP2 POP EQ ISZERO CODESIZE PUSH2 0x1EC7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x2 SLOAD DUP3 SWAP1 DUP1 DUP1 JUMPDEST PUSH2 0x20F5 JUMPI POP PUSH2 0x1F6E DUP5 PUSH2 0x2F22 JUMP JUMPDEST SWAP3 PUSH2 0x1F81 PUSH2 0x1F7B DUP7 PUSH2 0x2F22 JUMP JUMPDEST SWAP6 PUSH2 0x2F54 JUMP JUMPDEST SWAP3 DUP1 SWAP3 DUP1 JUMPDEST PUSH2 0x1F9A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xBAD DUP8 DUP11 DUP11 DUP5 PUSH2 0x2CFF JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0xA76 JUMPI PUSH2 0x1FAF SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x9C95E1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x20BC JUMPI DUP5 SWAP2 PUSH2 0x20C7 JUMPI JUMPDEST POP PUSH2 0x2002 JUMPI JUMPDEST POP PUSH2 0x1FFC SWAP1 PUSH2 0x332F JUMP JUMPDEST DUP1 PUSH2 0x1F86 JUMP JUMPDEST DUP1 PUSH2 0x2010 DUP7 DUP10 SWAP8 SWAP5 SWAP8 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH4 0x68C6BA21 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x20BC JUMPI DUP5 SWAP2 PUSH2 0x2080 JUMPI JUMPDEST POP SWAP2 PUSH2 0x2079 SWAP2 PUSH2 0x2051 PUSH2 0x1FFC SWAP5 PUSH2 0x204C DUP5 DUP14 PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3354 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x2064 PUSH1 0x40 DUP6 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x206E DUP3 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCD6 DUP2 DUP9 PUSH2 0x2F9E JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x20B4 JUMPI JUMPDEST DUP2 PUSH2 0x209A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69F JUMPI MLOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH2 0x2079 PUSH2 0x2035 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x208D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x20E8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x20EE JUMPI JUMPDEST PUSH2 0x20E0 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x333C JUMP JUMPDEST CODESIZE PUSH2 0x1FEC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD DUP2 DUP2 GT PUSH2 0x218F JUMPI PUSH1 0x20 PUSH2 0x210E PUSH1 0x24 SWAP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x9C95E1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE SWAP4 DUP5 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x20BC JUMPI DUP5 SWAP2 PUSH2 0x2171 JUMPI JUMPDEST POP PUSH2 0x215C JUMPI JUMPDEST PUSH2 0x2156 SWAP1 PUSH2 0x332F JUMP JUMPDEST DUP1 PUSH2 0x1F60 JUMP JUMPDEST SWAP4 PUSH2 0x2169 PUSH2 0x2156 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x214D JUMP JUMPDEST PUSH2 0x2189 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x20EE JUMPI PUSH2 0x20E0 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST CODESIZE PUSH2 0x2147 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x227E JUMPI JUMPDEST PUSH2 0x21E7 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH2 0x21F2 DUP2 ISZERO ISZERO PUSH2 0x32F1 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x2244 JUMPI DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x10AC961F00D5E732BA4DCC2C6FB09BEBEA0EB9EDD2A75C8109775EF288382E67 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E48185D5D1A1BDC9A5E9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x21DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x2302 JUMPI POP POP POP DUP2 PUSH2 0x22E7 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH3 0x278D00 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D JUMPI POP PUSH2 0x318 PUSH1 0x20 SWAP2 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x230C DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x278D00 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x3A2 JUMPI TIMESTAMP LT PUSH2 0x232F JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x22CC JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x235A JUMPI JUMPDEST ISZERO PUSH2 0x2327 JUMPI SWAP4 POP PUSH1 0x1 PUSH2 0x234B DUP6 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP5 SWAP1 POP PUSH2 0x2327 JUMP JUMPDEST POP DUP5 PUSH2 0x2366 DUP3 DUP5 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR LT PUSH2 0x2338 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x20 PUSH2 0x23E5 DUP4 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x271 JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x24F8 JUMPI JUMPDEST PUSH2 0x2441 SWAP1 PUSH2 0x327C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE TIMESTAMP PUSH1 0x8 SSTORE PUSH32 0xC29BDBD554E41DF97E5C40FC273A09677AC133C245F0064BDFFEF5CC72176E19 PUSH1 0x40 MLOAD DUP1 PUSH2 0x24B9 CALLER SWAP5 TIMESTAMP SWAP1 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B2103732BB9037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2438 JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x60 PUSH2 0x200 PUSH1 0x40 MLOAD PUSH2 0x2546 DUP2 PUSH2 0x2DA2 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP5 DUP4 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP5 PUSH1 0xA0 DUP3 ADD MSTORE DUP5 PUSH1 0xC0 DUP3 ADD MSTORE DUP5 PUSH1 0xE0 DUP3 ADD MSTORE DUP5 PUSH2 0x100 DUP3 ADD MSTORE DUP5 PUSH2 0x120 DUP3 ADD MSTORE DUP5 PUSH2 0x140 DUP3 ADD MSTORE DUP5 PUSH2 0x160 DUP3 ADD MSTORE DUP5 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP5 PUSH2 0x1C0 DUP3 ADD MSTORE DUP3 PUSH2 0x1E0 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO PUSH2 0x2751 JUMPI DUP2 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1F385F79 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1539 JUMPI DUP3 SWAP2 PUSH2 0x272F JUMPI JUMPDEST POP SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH2 0x25FB DUP3 MLOAD PUSH2 0x220 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x240 DUP6 ADD SWAP1 PUSH2 0x2B63 JUMP JUMPDEST SWAP1 PUSH2 0x260E PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xA0 DUP5 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0xC0 DUP5 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x120 DUP5 ADD MLOAD AND PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0xFF PUSH2 0x140 DUP5 ADD MLOAD AND PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x160 DUP4 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x180 DUP4 ADD MLOAD PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1A0 DUP4 ADD MLOAD SWAP2 PUSH1 0x1F NOT DUP6 DUP3 SUB ADD PUSH2 0x1C0 DUP7 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x2701 JUMPI POP POP POP SWAP1 PUSH2 0x200 PUSH2 0x26EC PUSH2 0xBAD SWAP4 PUSH2 0x1C0 DUP5 ADD MLOAD PUSH2 0x1E0 DUP8 ADD MSTORE PUSH2 0x1E0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP8 DUP4 SUB ADD DUP5 DUP9 ADD MSTORE PUSH2 0x2B63 JUMP JUMPDEST SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x1F NOT ADD PUSH2 0x220 DUP6 ADD MSTORE PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP2 DUP7 ADD MSTORE DUP8 SWAP7 POP PUSH1 0x40 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x274B SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x2743 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x303E JUMP JUMPDEST CODESIZE PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D697373696F6E2061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x8 DUP3 LT ISZERO SWAP2 DUP3 PUSH2 0x3B6 JUMPI PUSH1 0x2 SLOAD SWAP3 DUP3 SWAP4 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x28CD JUMPI POP PUSH2 0x27D0 DUP6 PUSH2 0x2F22 JUMP JUMPDEST SWAP4 PUSH2 0x27E3 PUSH2 0x27DD DUP8 PUSH2 0x2F22 JUMP JUMPDEST SWAP7 PUSH2 0x2F54 JUMP JUMPDEST SWAP4 DUP2 SWAP1 DUP3 JUMPDEST DUP5 DUP2 LT PUSH2 0x27FF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xBAD DUP10 DUP13 DUP13 DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x2808 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH1 0xFF AND DUP7 PUSH2 0xD83 JUMPI PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xD83 JUMPI DUP3 EQ PUSH2 0x2846 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x27E8 JUMP JUMPDEST SWAP2 SWAP5 POP PUSH2 0x2852 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x286E DUP7 DUP10 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x28C5 DUP5 SWAP7 PUSH2 0x2880 DUP2 DUP13 PUSH2 0x2F9E JUMP JUMPDEST PUSH1 0xFF DUP6 AND SWAP1 MSTORE PUSH2 0x288F DUP6 PUSH2 0x2CB6 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP7 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x28B0 PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x28BA DUP3 DUP12 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0xCD6 DUP2 DUP11 PUSH2 0x2F9E JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x283E JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND DUP4 PUSH2 0x113F JUMPI PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x113F JUMPI DUP5 EQ PUSH2 0x2914 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP5 PUSH2 0x2920 PUSH1 0x1 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0x290C JUMP JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2945 PUSH2 0x38B7 JUMP JUMPDEST PUSH2 0x294D PUSH2 0x38E0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 DUP3 ISZERO PUSH2 0x2A53 JUMPI ISZERO PUSH2 0x2A4C JUMPI JUMPDEST SELFBALANCE DUP2 GT PUSH2 0x2A10 JUMPI DUP3 DUP1 DUP1 DUP1 DUP5 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x2A0B JUMPI RETURNDATASIZE PUSH2 0x2985 DUP2 PUSH2 0x2ECB JUMP JUMPDEST SWAP1 PUSH2 0x2993 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x29D4 JUMPI PUSH1 0x20 PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D SWAP2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21036B0B730B3B2B91037BBB732B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x273 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x273 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x273 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0xD DUP5 MSTORE KECCAK256 SLOAD AND PUSH2 0x2B22 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x2B40 JUMP JUMPDEST RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3B6 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3B6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x2B4D JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2B81 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2BB3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2BA3 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2BDC DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2C14 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x2C32 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x2BC3 JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x2C05 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 PUSH2 0x2C56 SWAP1 PUSH1 0x60 DUP7 MSTORE PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x2B63 JUMP JUMPDEST SWAP4 DUP1 DUP6 SUB PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP7 DUP8 DUP2 MSTORE ADD SWAP4 ADD PUSH1 0x0 SWAP6 JUMPDEST DUP1 DUP8 LT PUSH2 0x2C8E JUMPI POP POP PUSH2 0x2C8B SWAP4 SWAP5 POP PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2BE8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 PUSH1 0xFF DUP9 MLOAD AND DUP2 MSTORE ADD SWAP6 ADD SWAP7 ADD SWAP6 SWAP1 PUSH2 0x2C6F JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x2B4D JUMPI MSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 PUSH2 0x2D14 SWAP1 PUSH1 0x60 DUP7 MSTORE PUSH1 0x60 DUP7 ADD SWAP1 PUSH2 0x2B63 JUMP JUMPDEST SWAP4 DUP1 DUP6 SUB PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP7 DUP8 DUP2 MSTORE ADD SWAP4 ADD PUSH1 0x0 SWAP6 JUMPDEST DUP1 DUP8 LT PUSH2 0x2D49 JUMPI POP POP PUSH2 0x2C8B SWAP4 SWAP5 POP PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2BE8 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x20 DUP1 DUP3 PUSH2 0x2D5C PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x2B40 JUMP JUMPDEST ADD SWAP6 ADD SWAP7 ADD SWAP6 SWAP1 PUSH2 0x2D2D JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2D98 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2D82 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2D77 JUMP JUMPDEST PUSH2 0x220 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2DBE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2DBE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2E09 DUP5 PUSH2 0x2D68 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2E77 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2E30 JUMPI JUMPDEST POP PUSH2 0x2E2E SWAP3 POP SUB DUP4 PUSH2 0x2DD4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2E5B JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x2E2E SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x2E2E SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2E21 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2DBE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2EF5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2DBE JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2F2C DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x2F39 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2F4A PUSH1 0x1F NOT SWAP2 PUSH2 0x2F0B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x2F5E DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0x2F6B PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2F7C PUSH1 0x1F NOT SWAP2 PUSH2 0x2F0B JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2F8D JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x2F81 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2FC6 JUMPI DUP2 MLOAD PUSH2 0x2FE2 DUP2 PUSH2 0x2F0B JUMP JUMPDEST SWAP3 PUSH2 0x2FF0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2FC6 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3018 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3025 DUP5 PUSH2 0x2FB2 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x300B JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x2FC6 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x2FC6 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2FC6 JUMPI ADD SWAP1 PUSH2 0x220 DUP3 DUP3 SUB SLT PUSH2 0x2FC6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3073 DUP4 PUSH2 0x2DA2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC6 JUMPI DUP3 PUSH2 0x308F SWAP2 DUP4 ADD PUSH2 0x2FCB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2FC6 JUMPI PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x30CE PUSH1 0xA0 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x30DF PUSH1 0xC0 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x3107 PUSH2 0x120 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x311A PUSH2 0x140 DUP3 ADD PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC6 JUMPI DUP2 ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2FC6 JUMPI DUP1 MLOAD PUSH2 0x3164 DUP2 PUSH2 0x2F0B JUMP JUMPDEST SWAP2 PUSH2 0x3172 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP3 PUSH1 0x6 SHL DUP3 ADD ADD SWAP1 DUP6 DUP3 GT PUSH2 0x2FC6 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3231 JUMPI POP POP POP PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1E0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC6 JUMPI DUP3 PUSH2 0x31CA SWAP2 DUP4 ADD PUSH2 0x2FCB JUMP JUMPDEST PUSH2 0x1E0 DUP5 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2FC6 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2FC6 JUMPI DUP1 MLOAD PUSH2 0x31FC DUP2 PUSH2 0x2ECB JUMP JUMPDEST SWAP3 PUSH2 0x320A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2FC6 JUMPI PUSH2 0x3228 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x2BA0 JUMP JUMPDEST PUSH2 0x200 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP4 DUP8 SUB SLT PUSH2 0x2FC6 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x2DBE JUMPI PUSH1 0x40 SWAP3 PUSH1 0x20 SWAP3 DUP5 MSTORE PUSH2 0x3267 DUP7 PUSH2 0x2FB2 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP7 ADD MLOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x318E JUMP JUMPDEST ISZERO PUSH2 0x3283 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F776E6572206F72204D697373696F6E466163746F72792061757468 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1BDC9A5E9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2EF5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2EF5 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x32F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2EF5 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2FC6 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2FC6 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP3 LT ISZERO PUSH2 0x2B4D JUMPI MSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x35F3 JUMPI PUSH3 0x4F19FF NOT TIMESTAMP ADD TIMESTAMP DUP2 GT PUSH2 0x2EF5 JUMPI PUSH3 0x278CFF NOT TIMESTAMP ADD TIMESTAMP DUP2 GT PUSH2 0x2EF5 JUMPI PUSH1 0x0 SWAP3 SWAP2 DUP3 DUP1 JUMPDEST PUSH2 0x3505 JUMPI JUMPDEST POP PUSH2 0x339B DUP5 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x33A4 DUP6 PUSH2 0x2F22 JUMP JUMPDEST SWAP6 PUSH2 0x33AE DUP7 PUSH2 0x2F54 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x34FC JUMPI JUMPDEST ISZERO PUSH2 0x34F1 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x33CF DUP3 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x1F385F79 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34E5 JUMPI DUP13 SWAP2 DUP11 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x34CC JUMPI JUMPDEST POP DUP10 PUSH1 0xE0 DUP3 ADD DUP2 DUP2 MLOAD LT DUP1 PUSH2 0x34A5 JUMPI JUMPDEST ISZERO PUSH2 0x349A JUMPI POP POP PUSH2 0x100 ADD MLOAD LT JUMPDEST PUSH2 0x348B JUMPI DUP3 SWAP2 PUSH2 0x204C DUP6 PUSH2 0x3459 SWAP4 DUP2 SWAP7 PUSH2 0x3453 PUSH1 0x1 SWAP10 DUP14 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x2F9E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH2 0x346E PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2DF5 JUMP JUMPDEST PUSH2 0x3478 DUP3 DUP11 PUSH2 0x2F9E JUMP JUMPDEST MSTORE PUSH2 0x3483 DUP2 DUP10 PUSH2 0x2F9E JUMP JUMPDEST POP ADD SWAP1 PUSH2 0x33B3 JUMP JUMPDEST POP SWAP5 SWAP10 SWAP9 POP SWAP3 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP2 POP SWAP2 POP MLOAD LT PUSH2 0x3437 JUMP JUMPDEST POP SWAP3 POP POP SWAP2 POP PUSH1 0x8 DUP4 LT ISZERO PUSH2 0x2B4D JUMPI DUP13 SWAP2 DUP10 DUP12 SWAP3 PUSH1 0x6 DUP7 EQ DUP1 PUSH2 0x3429 JUMPI POP PUSH1 0x7 DUP7 EQ PUSH2 0x3429 JUMP JUMPDEST PUSH2 0x34DF SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x2743 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST CODESIZE PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP7 SWAP6 POP SWAP3 POP POP POP JUMP JUMPDEST POP DUP8 DUP3 LT PUSH2 0x33BC JUMP JUMPDEST PUSH1 0x0 SWAP5 SWAP4 SWAP5 NOT ADD SWAP3 PUSH2 0x3516 DUP5 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x0 PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1F385F79 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x34E5 JUMPI DUP6 SWAP3 DUP6 SWAP2 PUSH1 0x0 SWAP4 PUSH2 0x35D8 JUMPI JUMPDEST POP PUSH1 0xE0 DUP4 ADD SWAP1 DUP3 DUP3 MLOAD LT SWAP1 DUP2 PUSH2 0x35A8 JUMPI JUMPDEST POP ISZERO PUSH2 0x359D JUMPI POP POP PUSH2 0x100 ADD MLOAD LT JUMPDEST PUSH2 0x3596 JUMPI PUSH2 0x358F DUP5 SWAP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP5 SWAP4 PUSH2 0x338C JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x3391 JUMP JUMPDEST SWAP2 POP SWAP2 POP MLOAD LT PUSH2 0x3581 JUMP JUMPDEST SWAP3 POP POP SWAP3 POP PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI DUP6 SWAP3 DUP2 PUSH1 0x6 DUP8 SWAP4 EQ SWAP1 DUP2 ISZERO PUSH2 0x35CD JUMPI JUMPDEST POP CODESIZE PUSH2 0x3572 JUMP JUMPDEST PUSH1 0x7 SWAP2 POP EQ CODESIZE PUSH2 0x35C6 JUMP JUMPDEST PUSH2 0x35EC SWAP2 SWAP4 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x2743 DUP2 DUP4 PUSH2 0x2DD4 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x3561 JUMP JUMPDEST POP PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3604 DUP3 DUP5 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 PUSH2 0x361B DUP4 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH1 0x0 CALLDATASIZE DUP2 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 PUSH2 0x3634 DUP3 DUP7 PUSH2 0x2DD4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1F NOT DUP2 ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x364D JUMPI POP POP POP SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP7 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH2 0x363E JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 ISZERO PUSH2 0x36BE JUMPI PUSH3 0x15180 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x2EF5 JUMPI DUP3 TIMESTAMP LT ISZERO PUSH2 0x36A3 JUMPI PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 SWAP2 AND SWAP2 SWAP1 PUSH2 0x369C SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 POP AND SWAP2 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x37B5 JUMPI POP POP POP PUSH1 0x3 SLOAD SWAP2 PUSH1 0xFF DUP4 AND GT SWAP1 PUSH1 0xFF DUP3 ISZERO SWAP4 PUSH1 0x8 SHR AND GT SWAP2 DUP3 ISZERO SWAP3 DUP3 DUP1 PUSH2 0x37AE JUMPI JUMPDEST PUSH2 0x37A0 JUMPI DUP2 PUSH2 0x3798 JUMPI JUMPDEST POP PUSH2 0x378C JUMPI DUP2 PUSH2 0x3784 JUMPI JUMPDEST POP PUSH2 0x377A JUMPI PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2EF5 JUMPI PUSH2 0x3749 SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST SWAP1 PUSH3 0x278D00 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2EF5 JUMPI PUSH2 0x3762 SWAP1 TIMESTAMP SWAP1 PUSH2 0x32E4 JUMP JUMPDEST GT ISZERO PUSH2 0x3772 JUMPI PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x0 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x376C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x372C JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x3721 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP1 PUSH2 0x3717 JUMP JUMPDEST PUSH2 0x37BF DUP2 DUP4 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH3 0x278D00 DUP2 ADD DUP1 DUP3 GT PUSH2 0x2EF5 JUMPI TIMESTAMP LT PUSH2 0x37E3 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x36EE JUMP JUMPDEST SWAP4 PUSH2 0x37ED SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP4 DUP8 ISZERO DUP1 ISZERO PUSH2 0x3843 JUMPI JUMPDEST PUSH2 0x383B JUMPI JUMPDEST PUSH3 0x93A80 DUP2 ADD DUP1 DUP3 GT PUSH2 0x2EF5 JUMPI TIMESTAMP LT ISZERO PUSH2 0x37DA JUMPI SWAP5 PUSH2 0x381A SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP5 DUP7 ISZERO DUP1 ISZERO PUSH2 0x3832 JUMPI JUMPDEST ISZERO PUSH2 0x37DA JUMPI SWAP6 POP PUSH1 0x1 PUSH2 0x37DA JUMP JUMPDEST POP DUP7 DUP2 LT PUSH2 0x3824 JUMP JUMPDEST SWAP7 POP DUP7 PUSH2 0x37FC JUMP JUMPDEST POP DUP8 DUP2 LT PUSH2 0x37F7 JUMP JUMPDEST ISZERO PUSH2 0x3853 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D697373696F6E466163746F72793A2063616C6C6572206973206E6F74206120 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D985B1A59081B5A5CDCDA5BDB8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x38CB JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x38F1 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3A73 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 EQ PUSH2 0x3A46 JUMPI POP PUSH1 0x3 DUP2 EQ PUSH2 0x3A20 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 EQ PUSH2 0x39FA JUMPI POP PUSH1 0x5 DUP2 EQ PUSH2 0x39D5 JUMPI PUSH1 0x6 PUSH1 0x0 SWAP2 EQ PUSH2 0x39AF JUMPI POP PUSH1 0x40 MLOAD PUSH2 0x3999 PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x437573746F6D PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x39BE PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x4D6F6E74686C79 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x39E4 PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x5765656B6C79 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x3A0B SWAP1 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x4461696C79 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3A2F PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x42694461696C79 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x3A57 SWAP1 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x517561727465724461696C79 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3A82 PUSH1 0x40 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x486F75726C79 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xB5 DUP1 0xFC STOP TLOAD DUP15 0xA7 0xB3 RETURN EQ DUP12 0x4F MCOPY 0x4B PUSH12 0x3C1694CE5EA774F49E3D5CDC OR BYTE SWAP8 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"6380:55784:11:-:0;;;;;;;;;;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;1500:62:0;;:::i;:::-;2627:22;2623:91;;2742:8;;;:::i;:::-;6380:55784:11;;2623:91:0;-1:-1:-1;;;2672:31:0;;6380:55784:11;;;;;2672:31:0;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;;;12150:64;;;:::i;:::-;6380:55784;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;14054:18;6380:55784;;;;;;;;;;14303:12;;;;;;-1:-1:-1;;;14643:13:11;;;6380:55784;14643:45;;;6380:55784;;;;;;14643:45;14415:6;6380:55784;;;;;;;13946:15;14663:25;6380:55784;13946:15;;14663:25;;:::i;:::-;14643:45;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;14317:3;14408:4;;;;:::i;:::-;6380:55784;;;;;;14415:6;6380:55784;;;;;;;13946:15;-1:-1:-1;14404:211:11;;14317:3;6380:55784;;14291:10;;14404:211;14454:13;;:32;;;;14404:211;14450:53;14404:211;14450:53;14499:4;;6380:55784;14499:4;;;;:::i;:::-;6380:55784;;;;;;14450:53;;;14404:211;;14454:32;14471:4;;;;;;:::i;:::-;6380:55784;;;;;;14471:15;14454:32;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;45461:13;45492:3;6380:55784;45476:14;;;;;6380:55784;;45518:29;;;:::i;:::-;6380:55784;45503:44;;;;:::i;:::-;6380:55784;;45461:13;;45476:14;;;;;6380:55784;;;;;;;;45862:8;6380:55784;;45938:11;6380:55784;;;;;46165:21;6380:55784;;45366:21;6380:55784;;;;;;;;;;;;;;;;;45689:4;6380:55784;45689:4;6380:55784;;;;;;;;;;45764:21;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;38230:13;38252:3;6380:55784;38245:5;;;;;6380:55784;;38287:29;;;:::i;:::-;6380:55784;;;;;;;;38230:13;;38245:5;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;9069:10;6380:55784;;9059:9;6380:55784;;9037:209;6380:55784;;;;;;9037:209;:::i;:::-;9069:10;6380:55784;;35647:13;6380:55784;;;;;;;;;;;;;;;;35750:14;35737:27;;35733:311;35750:14;;;6380:55784;35781:23;35750:14;6380:55784;35781:23;:::i;:::-;35750:14;6380:55784;;;35733:311;35911:13;35898:26;35894:150;;6380:55784;;35894:150;35941:22;35911:13;6380:55784;35941:22;:::i;:::-;35911:13;6380:55784;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;16785:41;6380:55784;;;;;;;;;;;8622:10;:21;:47;;;;6380:55784;8600:199;;;:::i;:::-;6380:55784;;16714:21;6380:55784;;;;;;;;;;;16714:21;6380:55784;;;;;;;;;;16785:41;6380:55784;;8622:47;-1:-1:-1;8622:10:11;6380:55784;;8647:10;6380:55784;;;;;;;;8622:47;;6380:55784;;;;;;;;;;;;;;;;;;;;10908:6;6380:55784;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;22979:18;6380:55784;;;;;23077:19;23201:20;;23326:18;;23459:19;23598:9;;6380:55784;;;23593:716;23609:12;;;;;;6380:55784;;;;;24788:51;:16;;:51;:16;;;:51;;;;24913:16;;;:52;6380:55784;24913:52;6380:55784;24913:52;;;;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24913:52;6380:55784;23756:7;6380:55784;;;;;;;22863:15;6380:55784;22863:15;6380:55784;24936:29;22863:15;;;24936:29;;:::i;:::-;24913:52;;;24788:51;24825:6;6380:55784;;;;;;;24811:28;22863:15;;24811:28;;:::i;:::-;24788:51;;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;23623:3;23729:4;;;;:::i;:::-;6380:55784;;;;;;23756:7;6380:55784;;;;;;;22863:15;-1:-1:-1;23748:550:11;;23623:3;;6380:55784;;23598:9;;23748:550;23881:14;;;;:::i;:::-;23918:16;;;:35;;;;23748:550;23914:56;;23748:550;24067:6;6380:55784;;;;;;;22863:15;-1:-1:-1;24059:224:11;23748:550;24059:224;24106:13;;;;:::i;:::-;24146:15;;;:33;;;;24059:224;24142:53;23748:550;24142:53;;-1:-1:-1;6380:55784:11;23748:550;;24146:33;24165:14;;;;24146:33;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;23914:56;23955:15;-1:-1:-1;23955:15:11;23914:56;;23918:35;23938:15;;;;23918:35;;6380:55784;;;;;;;;;;;;;;10383:69;6380:55784;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;;;11793:61;;;:::i;6380:55784::-;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;20506:10;6380:55784;;20492:13;6380:55784;;;;;;;;;;;;;;20521:16;20492:45;6380:55784;;;;20386:15;6380:55784;20386:15;;6380:55784;;;;;;;20780:18;6380:55784;;;;;;;;;20902:171;20909:18;;;:41;;;20902:171;20909:41;;;21054:3;;;:::i;:::-;20902:171;;20909:41;;;;;21087:5;21083:476;;20902:171;6380:55784;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;20521:16;6380:55784;;;;;;:::i;:::-;20386:15;6380:55784;;;;;;;;;;;;;;;;;;;;;21718:31;6380:55784;;;20386:15;6380:55784;;21718:31;6380:55784;;;-1:-1:-1;;;6380:55784:11;;;;;;;;21083:476;21218:13;;21257:3;21237:18;6380:55784;;;21237:18;:::i;:::-;21233:22;;;;;21362:5;21341:27;21354:14;21362:5;;20521:16;21362:5;;:::i;:::-;21354:14;;:::i;:::-;6380:55784;;;;;;21341:10;;;;:::i;:::-;:27;6380:55784;;;;;;;;;;;;;;;;;;;;;21341:27;6380:55784;21218:13;;21233:22;;;21403:13;21418:5;;;;;;21083:476;;;21425:3;6380:55784;;;;;;20521:16;;6380:55784;-1:-1:-1;;6380:55784:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21403:13;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;20909:41;20931:10;;;;;;:::i;:::-;6380:55784;;;;;;20931:19;20909:41;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;10651:78;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;11362:58;6380:55784;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;12030:59;6380:55784;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;56999:8;6380:55784;57086:13;57266;;57281:7;;;;;;57698:20;;;;:::i;:::-;57832:18;57937:19;57832:18;;;:::i;:::-;57937:19;;:::i;:::-;58019:13;;;58065:7;;;;;;6380:55784;;;;;;;;;;;;:::i;58074:3::-;58174:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;57370:13;6380:55784;;;;;;;;;;;;;;;57474:14;58259:19;;:41;;;;58074:3;58255:469;;58074:3;;;;6380:55784;;58050:13;;;58255:469;58389:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;58373:27;;;;:::i;:::-;6380:55784;;;58487:26;58701:7;58487:26;;6380:55784;58487:26;;;:::i;:::-;6380:55784;58620:11;;;:::i;:::-;6380:55784;;;;;;;;;;;;;;58607:12;6380:55784;;;;;;;:::i;:::-;58592:40;;;;:::i;:::-;;;;;;:::i;:::-;;58701:7;:::i;:::-;58255:469;;;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;58259:41;6380:55784;;;58287:13;58282:18;;58259:41;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;57290:3;57384:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;57370:13;6380:55784;;;;;;;;;;;;;;57474:14;57469:19;;:41;;;;;57290:3;57465:141;;;57290:3;6380:55784;;57266:13;;57465:141;57583:7;;6380:55784;57583:7;;:::i;:::-;57465:141;;;;;57469:41;57497:13;6380:55784;;57492:18;57469:41;;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;11500:57;6380:55784;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;9069:10;6380:55784;;9059:9;6380:55784;;9037:209;6380:55784;;;;;;9037:209;:::i;:::-;2466:103:6;;:::i;:::-;36446:9:11;:13;6380:55784;;9069:10;6380:55784;;36627:13;6380:55784;;;;;;;;;;;;;;36656:14;36627:43;:89;;;;6380:55784;;;;36968:26;;;:::i;:::-;:39;36446:9;6380:55784;;36968:39;:::i;:::-;6380:55784;;37164:30;36446:9;6380:55784;;37164:30;:::i;:::-;6380:55784;;37323:38;37360:1;36446:9;6380:55784;37323:38;6380:55784;37323:38;:::i;:::-;;6380:55784;;;36446:9;;6380:55784;;37519:58;6380:55784;9069:10;37519:58;;6380:55784;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;36627:89;9069:10;;6380:55784;;36627:13;6380:55784;;;;;;;;;;;;;;;36674:42;36627:89;;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9783:63;6380:55784;;;;;;;;;;;;;;;;;;;;;;10519:68;6380:55784;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;59380:8;6380:55784;59465:9;;;59461:24;;6380:55784;59624:16;;;:::i;:::-;59749:14;;;;:::i;:::-;59850:15;;;;:::i;:::-;59935:13;-1:-1:-1;;6380:55784:11;;;;;59935:13;59950:5;;;;;;6380:55784;;;;;;;;;:::i;59957:3::-;6380:55784;;;60043:23;60052:13;;;;:::i;:::-;60043:23;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;60126:13;;;;:::i;:::-;6380:55784;;;60256:13;6380:55784;;;;;;;;;;;;;;60236:37;6380:55784;60236:37;;;;;:::i;:::-;6380:55784;60376:11;;;:::i;:::-;6380:55784;;;;;;;;;;;;;;60363:12;6380:55784;;;;;;;:::i;:::-;60352:36;;;;:::i;:::-;;;;;;:::i;:::-;;6380:55784;59935:13;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;59461:24;59476:9;-1:-1:-1;59476:9:11;59461:24;;6380:55784;-1:-1:-1;6380:55784:11;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;8622:10;:21;:47;;;;6380:55784;8600:199;;;:::i;:::-;2466:103:6;;:::i;:::-;31028:1:11;6380:55784;;;31001:28;6380:55784;;;;;;;;31197:41;6380:55784;;;;;;;;31400:48;6380:55784;;;;;;31604:41;6380:55784;;;;;;;31786:41;6380:55784;;;;;;31981:40;6380:55784;;;;;32160:28;6380:55784;;32351:21;2487:578:1;;;;;;;;;;;;;;6380:55784:11;2487:578:1;-1:-1:-1;;;;;2487:578:1;;;;6380:55784:11;3078:22:1;;;3074:85;;6380:55784:11;;32475:31;6380:55784;;32475:31;:::i;:::-;:33;6380:55784;;32475:33;:::i;:::-;6380:55784;;32638:30;;:26;;6380:55784;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;32638:423;;6380:55784;;;33078:9;6380:55784;;;;;;;;;;;;;;;;;33170:13;6380:55784;;;;;;;;;;;;;;;33287:12;6380:55784;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;:::i;:::-;;;;;;32638:423;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;33420:1229;;;;;6380:55784;;;;;;;;;;;;33420:1229;;6380:55784;33420:1229;;6380:55784;2367:4:1;6380:55784:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33420:1229;33462:9;;33420:1229;;;;;;;;;;;6380:55784;;;34662:8;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;;;34662:8;6380:55784;;:::i;:::-;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;34779:35;;;;34952:27;6380:55784;;34952:27;:::i;:::-;6380:55784;34662:8;6380:55784;35046:14;;;:53;;;6380:55784;35042:244;;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;:::i;35042:244::-;35116:27;6380:55784;;35116:27;:::i;:::-;:41;6380:55784;;;35116:41;:::i;:::-;6380:55784;;35172:56;;;;;6380:55784;;;;;;;;;;;;35172:56;;;;;;;;;;35042:244;35172:56;;;;;;:::i;:::-;6380:55784;;35172:56;35042:244;;35172:56;6380:55784;;;;;;;;;35046:53;35064:21;;;:35;;35046:53;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;;;;33420:1229;;;;:::i;:::-;;;;;;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31028:1;6380:55784;;;;;;;;;;;;31028:1;6380:55784;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;32638:423;6380:55784;;;32879:34;6380:55784;;32879:34;:::i;:::-;32964:31;6380:55784;;32964:31;:::i;:::-;6380:55784;29226:18:8;6380:55784:11;-1:-1:-1;;;29282:17:8;;;29278:103;;32638:423:11;29398:17:8;29407:8;29978:7;29398:17;;;29394:103;;32638:423:11;29523:8:8;29514:17;;;29510:103;;32638:423:11;29639:7:8;29630:16;;;29626:100;;32638:423:11;29752:7:8;29743:16;;;29739:100;;32638:423:11;6380:55784;29856:16:8;;;29852:100;;32638:423:11;29969:16:8;;29965:66;;32638:423:11;6380:55784;;;;29978:7:8;1545:94:7;6380:55784:11;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;6380:55784:11;;;;1545:94:7;;;1652:247;-1:-1:-1;;6380:55784:11;;-1:-1:-1;;;1706:111:7;;;;6380:55784:11;1706:111:7;6380:55784:11;1867:10:7;;;1863:21;;29978:7:8;;1652:247:7;;1863:21;1879:5;;6380:55784:11;1879:5:7;6380:55784:11;;1879:5:7;32840:220:11;1879:5:7;6380:55784:11;;;;;;;;32840:220;;;;;;6380:55784;;;:::i;:::-;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;:::i;:::-;;;32840:220;;6380:55784;;32840:220;;;;;;:::i;:::-;32638:423;;;29965:66:8;6380:55784:11;;29965:66:8;;29852:100;6380:55784:11;29936:1:8;6380:55784:11;;;;29852:100:8;;;29739;29752:7;6380:55784:11;;;;;29739:100:8;;;29626;29639:7;29710:1;6380:55784:11;;;;29626:100:8;;;29510:103;29523:8;29596:2;6380:55784:11;;;;29510:103:8;;;29394;29407:8;6380:55784:11;;;;;29394:103:8;;;29278;-1:-1:-1;6380:55784:11;;-1:-1:-1;;;;6380:55784:11;;29278:103:8;;3074:85:1;-1:-1:-1;;;3123:25:1;;6380:55784:11;3123:25:1;;6380:55784:11;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;8622:47;-1:-1:-1;8622:10:11;6380:55784;;8647:10;6380:55784;;;;;;;;8622:47;;6380:55784;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;8622:10;:21;:47;;;;6380:55784;8600:199;;;:::i;:::-;28062:16;6380:55784;-1:-1:-1;;;;;6380:55784:11;8622:10;28062:30;6380:55784;;28230:17;6380:55784;10908:6;6380:55784;;;;;;;27936:15;28211:64;6380:55784;;28425:16;6380:55784;28425:16;;-1:-1:-1;;;;;6380:55784:11;28425:16;:::i;:::-;;6380:55784;;;;-1:-1:-1;;;;;6380:55784:11;;;;;27936:15;6380:55784;;;;8622:10;;28560:63;;6380:55784;28560:63;-1:-1:-1;;;;;6380:55784:11;;28425:16;6380:55784;;28425:16;6380:55784;-1:-1:-1;;;;;6380:55784:11;;28062:16;6380:55784;;28062:16;6380:55784;;28230:17;6380:55784;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8622:47;-1:-1:-1;8622:10:11;6380:55784;;8647:10;6380:55784;;;;;;;;8622:47;;6380:55784;;;;;;;;;;;;;1500:62:0;;:::i;:::-;6380:55784:11;;-1:-1:-1;;;;;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;3052:40:0;6380:55784:11;;3052:40:0;6380:55784:11;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;8622:10;:21;:47;;;;6380:55784;8600:199;;;:::i;:::-;26286:50;26294:21;;;26286:50;:::i;:::-;6380:55784;;;26410:10;6380:55784;;;;;;;;;;;;;;26410:10;6380:55784;;;;;;;-1:-1:-1;;6380:55784:11;;;26663:33;6380:55784;;26663:33;6380:55784;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;8622:47;-1:-1:-1;8622:10:11;6380:55784;;8647:10;6380:55784;;;;;;;;8622:47;;6380:55784;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;54704:8;6380:55784;54792:13;54983;;54998:7;;;;;;55369:20;;;;:::i;:::-;55506:18;55611:19;55506:18;;;:::i;55611:19::-;55693:13;;;55739:7;;;;;;6380:55784;;;;;;;;;;;;:::i;55748:3::-;55848:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;55091:13;6380:55784;;;;;;;;;;;;;;;55141:14;55933:19;;;:41;;;55748:3;55929:471;;55748:3;;;;6380:55784;;55724:13;;;55929:471;56067:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;56051:27;;;;:::i;:::-;6380:55784;;;56163:26;56377:7;56163:26;;6380:55784;56163:26;;;:::i;56377:7::-;55929:471;;;;55933:41;6380:55784;;;55961:13;55956:18;;;55933:41;;55007:3;55105:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;55091:13;6380:55784;;;;;;;;;;;;;;55141:14;55136:19;;;:41;;;;55007:3;55132:145;;;55007:3;6380:55784;;54983:13;;55132:145;55254:7;;6380:55784;55254:7;;:::i;:::-;55132:145;;;;;55136:41;55164:13;6380:55784;;55159:18;;55136:41;;;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47480:8;6380:55784;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;41474:8;6380:55784;41573:13;;6380:55784;;41795:5;;;42147:20;;;;:::i;:::-;42298:19;42452;42298;;;:::i;:::-;42452;;:::i;:::-;42544:11;;42701:15;42696:935;42718:5;;;6380:55784;;;;;;;;;:::i;42725:3::-;-1:-1:-1;;6380:55784:11;;;;;;;42840:15;;;:::i;:::-;6380:55784;;;;-1:-1:-1;;;42951:36:11;;6380:55784;42951:36;;6380:55784;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;41909:50;6380:55784;;42951:36;;;;;;;;;;;42725:3;42947:673;;;42725:3;;;;;:::i;:::-;42701:15;;;42947:673;43078:17;;;;;;;;:::i;:::-;6380:55784;;;-1:-1:-1;;;43244:39:11;;6380:55784;;;;43244:39;;;;;;;;;;;;42947:673;43228:55;;43501:5;43228:55;;42725:3;43228:55;;;;;:::i;:::-;;:::i;:::-;6380:55784;;43393:12;6380:55784;;;;;;;:::i;:::-;43380:28;;;;:::i;:::-;;;;;;:::i;43501:5::-;42947:673;;;;43244:39;;;6380:55784;43244:39;;;;;;;;;6380:55784;43244:39;;;:::i;:::-;;;6380:55784;;;;;;;;;;;43501:5;43244:39;;;;;-1:-1:-1;43244:39:11;;;6380:55784;;;;;;;;;42951:36;;;;6380:55784;42951:36;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;41802:3;-1:-1:-1;;6380:55784:11;;;;;;;;41925:15;41909:50;41925:15;;:::i;:::-;6380:55784;;;;-1:-1:-1;;;41909:50:11;;6380:55784;41909:50;;6380:55784;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;41909:50;;;;;;;;;;;41802:3;41905:154;;;41802:3;;;;:::i;:::-;41778:15;;;41905:154;42036:7;;41802:3;42036:7;;:::i;:::-;41905:154;;;;;41909:50;;;;6380:55784;41909:50;;;;;;;;;:::i;:::-;;;;6380:55784;-1:-1:-1;;;6380:55784:11;;;;;41909:50;6380:55784;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;8622:10;:21;:47;;;;6380:55784;8600:199;;;:::i;:::-;25531:50;25539:21;;;25531:50;:::i;:::-;6380:55784;;;25656:10;6380:55784;;;;;;;;;;;;;25656:10;6380:55784;;;;;;;-1:-1:-1;;6380:55784:11;25802:4;6380:55784;;;25909:31;6380:55784;;25909:31;6380:55784;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;8622:47;-1:-1:-1;8622:10:11;6380:55784;;8647:10;6380:55784;;;;;;;;8622:47;;6380:55784;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;15372:18;6380:55784;;;;;;;;;;15623:12;;;;;;-1:-1:-1;;;15964:13:11;;;6380:55784;15964:46;;6380:55784;;;;;;15964:46;15735:7;6380:55784;;;;;;;15264:15;15984:26;6380:55784;15264:15;;15984:26;;:::i;15637:3::-;15728:4;;;;:::i;:::-;6380:55784;;;;;;15735:7;6380:55784;;;;;;;15264:15;-1:-1:-1;15724:212:11;;15637:3;6380:55784;;15611:10;;15724:212;15775:13;;:32;;;;15724:212;15771:53;15724:212;15771:53;15820:4;;6380:55784;15820:4;;;;:::i;:::-;6380:55784;;;;;;15771:53;;;15724:212;;15775:32;15792:4;;;;;;:::i;:::-;6380:55784;;;;;;15792:15;15775:32;;6380:55784;;;;;;;;;;;;;;10237:69;6380:55784;;;;;;;;;;;;;;;;;;;;11239:63;6380:55784;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;9647:56;6380:55784;9647:56;;;;;6380:55784;9647:56;;;:::i;:::-;6380:55784;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;8622:10;:21;:47;;;;6380:55784;8600:199;;;:::i;:::-;27280:22;;6380:55784;;-1:-1:-1;;;;;6380:55784:11;;27388:27;6380:55784;;;27388:27;6380:55784;8622:10;-1:-1:-1;;;;;6380:55784:11;;27426:29;6380:55784;;;27426:29;6380:55784;27186:15;27466:35;6380:55784;27517:54;6380:55784;;8622:10;27517:54;8622:10;27186:15;;27517:54;;6380:55784;;;;;;;;;;;;;;;;;;;;;27517:54;;;;6380:55784;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;8622:47;-1:-1:-1;8622:10:11;6380:55784;;8647:10;6380:55784;;;;;;;;8622:47;;6380:55784;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46879:28;;6380:55784;;;;;;;;;;;;;;46997:49;;;;;;;;;;;;;6380:55784;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;46997:49;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;6380:55784;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;;;;;;;;;;52538:8;6380:55784;52629:13;;52725;;52740:7;;;;;;53166:20;;;;:::i;:::-;53297:18;53406:19;53297:18;;;:::i;:::-;53406:19;;:::i;:::-;53484:13;;53513;;53528:7;;;;;;6380:55784;;;;;;;;;:::i;53537:3::-;53634:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;52826:13;6380:55784;;;;;;;;;;;;;;;;;53620:31;;53616:472;;53537:3;6380:55784;;53513:13;;53616:472;53769:11;;;;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;53743:37;;;;:::i;:::-;6380:55784;;54065:7;6380:55784;53859:26;;;;;:::i;:::-;6380:55784;;;;;53980:11;;;:::i;:::-;6380:55784;;;;;;;;;;;;;;53967:12;6380:55784;;;;;;;:::i;:::-;53952:40;;;;:::i;:::-;;;;;;:::i;54065:7::-;53616:472;;;;;52749:3;52840:11;;;:::i;:::-;6380:55784;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;52826:13;6380:55784;;;;;;;;;;;;;;;;;52826:31;;52822:237;;52749:3;6380:55784;;52725:13;;52822:237;52949:7;;6380:55784;52949:7;;:::i;:::-;52822:237;;;;;6380:55784;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;1500:62:0;;:::i;:::-;2466:103:6;;:::i;:::-;6380:55784:11;;-1:-1:-1;;;;;6380:55784:11;;2531:1:6;39865:22:11;;6380:55784;;39995:11;39991:172;;6380:55784;40191:21;40181:31;;6380:55784;;40338:43;;;;;;;;6380:55784;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;40626:32;6380:55784;;;;;;40626:32;6380:55784;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;39991:172;40032:21;;39991:172;;6380:55784;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;11101:63;6380:55784;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;9942:65;6380:55784;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;11650:61;6380:55784;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;10965:64;6380:55784;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;6380:55784:11;;;;;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;6380:55784:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;52538:8;6380:55784;;;;;;52538:8;-1:-1:-1;6380:55784:11;;-1:-1:-1;6380:55784:11;;;-1:-1:-1;6380:55784:11;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;;-1:-1:-1;6380:55784:11;;;-1:-1:-1;6380:55784:11;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;:::o;:::-;;;;-1:-1:-1;6380:55784:11;;;;;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;:::o;:::-;;;;;;-1:-1:-1;6380:55784:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;6380:55784:11;;;;;-1:-1:-1;6380:55784:11;;-1:-1:-1;6380:55784:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6380:55784:11;60950:13;6380:55784;;;-1:-1:-1;6380:55784:11;;:::o;:::-;;;;;;;-1:-1:-1;6380:55784:11;32475:17;6380:55784;;;-1:-1:-1;6380:55784:11;;:::o;:::-;-1:-1:-1;;;;;6380:55784:11;;;;;;-1:-1:-1;;6380:55784:11;;;;:::o;:::-;-1:-1:-1;;6380:55784:11;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;6380:55784:11;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;6380:55784:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6380:55784:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;-1:-1:-1;;6380:55784:11;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;47830:4165::-;48116:8;6380:55784;48146:8;;48142:209;;6380:55784;;48004:15;6380:55784;48004:15;6380:55784;;;;;;48004:15;6380:55784;48004:15;6380:55784;;;;48153:1;48613:13;;48727:15;48722:981;48744:5;;;48722:981;49825:20;;;;:::i;:::-;49967:19;;;:::i;:::-;50108;;;;:::i;:::-;50209:9;48153:1;50236:15;;50253:5;;;:18;;;50236:15;50253:18;;;-1:-1:-1;;6380:55784:11;;50415:11;6380:55784;50415:11;:::i;:::-;6380:55784;;;;;;;;;;;;;48153:1;6380:55784;48937:13;6380:55784;;;;48153:1;6380:55784;;;;;;;;50692:36;;48153:1;50692:36;49000;50692;;;;;;;;;;;;;48153:1;50692:36;;;50236:15;50826;;6380:55784;50826:15;;6380:55784;;;50826:29;:93;;;50236:15;50826:298;;;51046:13;;;;6380:55784;51046:25;50826:298;51141:148;;51303:16;;51437;51303;51437;51303;;;;6380:55784;51303:16;;;:::i;:::-;6380:55784;51437:16;:::i;:::-;48153:1;6380:55784;51579:12;6380:55784;;;;48153:1;6380:55784;;:::i;:::-;51568:26;;;;:::i;:::-;;;;;;:::i;:::-;;6380:55784;50236:15;;;51141:148;-1:-1:-1;51268:5:11;;51836:35;-1:-1:-1;51268:5:11;;-1:-1:-1;;;;;;47830:4165:11:o;50826:298::-;6380:55784;;;;;51095:29;50826:298;;:93;6380:55784;;;;;;;;;;;;50877:19;;;;;50882:14;50877:19;;:41;50826:93;50877:41;6380:55784;50905:13;50900:18;;50826:93;;50692:36;;;;;;;;;;;;:::i;:::-;;;;;6380:55784;;;48153:1;6380:55784;;;;;50253:18;-1:-1:-1;50253:18:11;;51836:35;-1:-1:-1;50253:18:11;-1:-1:-1;;;47830:4165:11:o;50253:18::-;50262:9;;;;50253:18;;48727:15;6380:55784;;;;;;48899:11;;;;:::i;:::-;6380:55784;;;;;;;;;;;;;48153:1;6380:55784;48937:13;6380:55784;;49000:36;48153:1;6380:55784;;;;;;;;;;;;;;;;49000:36;;;;;;;;;;;;;48153:1;49000:36;;;48727:15;49084;6380:55784;49084:15;;6380:55784;;;;49084:29;:153;;;;48727:15;-1:-1:-1;49084:328:11;;;49261:13;;;;6380:55784;49261:25;49084:328;49509:161;;49684:7;;;;:::i;:::-;48727:15;;;;49509:161;49540:5;;;;49084:328;6380:55784;;;;;49383:29;49084:328;;:153;6380:55784;;;;;;;;;;;49195:19;;;49200:14;49195:19;;;:41;;;;;49084:153;;;;;49195:41;49223:13;6380:55784;;49218:18;49195:41;;;49000:36;;;;;;;;;;;;;:::i;:::-;;;;;48142:209;6380:55784;;;;;;;;;:::i;:::-;48153:1;6380:55784;;48153:1;6380:55784;;;;;;;;;;:::i;:::-;48153:1;6380:55784;;48153:1;6380:55784;;;;;;48153:1;6380:55784;48153:1;6380:55784;;:::i;:::-;;;-1:-1:-1;;6380:55784:11;;-1:-1:-1;6380:55784:11;;;;;;48280:59;;;;;;:::o;6380:55784::-;;;;;;;;;;;;61335:824;61518:17;6380:55784;61518:22;;61514:143;;10908:6;6380:55784;;;;;;;;61758:15;;61790;;61786:125;;61945:16;6380:55784;61976:16;6380:55784;-1:-1:-1;;;;;6380:55784:11;;;;;;;;62039:14;;61758:15;;62039:14;:::i;:::-;61923:228;;;;61335:824;:::o;61786:125::-;61830:16;6380:55784;61848:16;6380:55784;-1:-1:-1;;;;;6380:55784:11;;;;-1:-1:-1;6380:55784:11;;61822:65;-1:-1:-1;;61822:65:11:o;61514:143::-;61557:37;-1:-1:-1;61557:37:11;-1:-1:-1;61557:37:11;-1:-1:-1;61557:37:11;-1:-1:-1;61557:37:11;:::o;17268:2719::-;-1:-1:-1;;;;;6380:55784:11;;;;;18031:18;6380:55784;;;;;;;;;;;;;;18139:12;;;;;;6380:55784;;;;;;;;;-1:-1:-1;18845:27:11;6380:55784;18845:27;;6380:55784;;;;-1:-1:-1;18967:28:11;;;19082:10;;;;;18123:700;19078:42;;19222:9;;;18123:700;19218:44;;;19371:9;;;18123:700;19367:45;;;19607:6;6380:55784;;;;;;;19592:29;17411:15;;19592:29;;:::i;:::-;6380:55784;18282:7;6380:55784;;;;;;;19723:29;17411:15;;19723:29;;:::i;:::-;19854:13;:44;;;19870:13;19854:44;;6380:55784;19839:60;17268:2719;:::o;19854:44::-;6380:55784;19854:44;;;19367:45;19383:29;;6380:55784;19383:29;19398:13;19383:29;:::o;19371:9::-;;;;;;19218:44;19234:28;;;;6380:55784;19234:28;6380:55784;19234:28;:::o;19222:9::-;;;;;;19078:42;19094:26;;;;;;6380:55784;19094:26;6380:55784;19094:26;:::o;19082:10::-;;;;;18153:3;18255:4;;;;:::i;:::-;6380:55784;;;;;;18282:7;6380:55784;;;;;;;17411:15;-1:-1:-1;18274:538:11;;18153:3;;6380:55784;;18128:9;;18274:538;18403:14;;;;:::i;:::-;18440:16;;;:35;;;;18274:538;18436:56;;18274:538;18585:6;6380:55784;;;;;;;17411:15;-1:-1:-1;18577:220:11;18274:538;18577:220;18624:13;;;;:::i;:::-;18664:15;;;:33;;;;18577:220;18660:53;18274:538;18660:53;;-1:-1:-1;6380:55784:11;18274:538;;18664:33;18683:14;;;;18664:33;;18436:56;18477:15;-1:-1:-1;18477:15:11;18436:56;;18440:35;18460:15;;;;18440:35;;6380:55784;;;;:::o;:::-;;;-1:-1:-1;;;6380:55784:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;6380:55784:11;;;;;;;1796:162:0;1710:6;6380:55784:11;-1:-1:-1;;;;;6380:55784:11;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:2;1901:40:0;6380:55784:11;;1710:6:0;1901:40;2575:307:6;1899:1;2702:7;6380:55784:11;2702:18:6;2698:86;;1899:1;2702:7;6380:55784:11;2575:307:6:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:6;;-1:-1:-1;2743:30:6;2912:187:0;3004:6;6380:55784:11;;-1:-1:-1;;;;;6380:55784:11;;;-1:-1:-1;;;;;;6380:55784:11;;;;;;;;;3052:40:0;;3004:6;3052:40;2912:187::o;12957:524:11:-;6380:55784;;;;;;13060:18;13055:23;;13051:52;;-1:-1:-1;13123:24:11;13118:29;;13114:58;;13187:24;13192:19;13187:24;;13183:53;;-1:-1:-1;13256:17:11;13251:22;;13247:51;;13313:23;13318:18;13313:23;;13309:52;;13381:19;-1:-1:-1;13376:24:11;;13372:53;;6380:55784;;;;;;;:::i;:::-;13381:19;6380:55784;;-1:-1:-1;;;6380:55784:11;;;;12957:524;:::o;13372:53::-;6380:55784;;;;;;;:::i;:::-;;;;-1:-1:-1;;;6380:55784:11;;;;13409:16;:::o;13309:52::-;6380:55784;;;;;;;:::i;:::-;;;;-1:-1:-1;;;6380:55784:11;;;;13346:15;:::o;13247:51::-;-1:-1:-1;;6380:55784:11;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;6380:55784:11;;;;13284:14;:::o;13183:53::-;6380:55784;;;;;;;:::i;:::-;;;;-1:-1:-1;;;6380:55784:11;;;;13220:16;:::o;13114:58::-;-1:-1:-1;;6380:55784:11;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;6380:55784:11;;;;13151:21;:::o;13051:52::-;6380:55784;;;;;;;:::i;:::-;;;;-1:-1:-1;;;6380:55784:11;;;;13088:15;:::o"},"methodIdentifiers":{"OWNERSHIP_PROPOSAL_WINDOW()":"d3050eba","addAuthorizedAddress(address)":"42f1181e","authorized(address)":"b9181611","canEnroll(address)":"9804a586","confirmOwnershipTransfer()":"7200b829","createMission(uint8,uint256,uint256,uint256,uint8,uint8,uint256,uint256,uint8,string)":"72eecd21","getAllMissions()":"6d8a1390","getFactorySummary()":"e5047770","getFundsByType(uint8)":"2e33b07f","getLatestMissions(uint256)":"7e9eae50","getMissionData(address)":"20c5718f","getMissionsByStatus(uint8)":"1e59d584","getMissionsEnded()":"b6202913","getMissionsNotEnded()":"6805036d","getOwnershipProposal()":"8c09b7c3","getPlayerLimits(address)":"cbf2080d","getPlayerParticipation(address)":"503c0b88","getTotalMissions()":"5c5bb6f2","isMission(address)":"aa1f0595","missionImplementation()":"bd487725","missionNames(address)":"b6de7b43","missionStatus(address)":"0814ab82","missionTypeCounts(uint8)":"f08e231e","missions(uint256)":"2c8fe526","monthlyLimit()":"0a6005da","owner()":"8da5cb5b","proposalProposer()":"2d771f30","proposalTimestamp()":"04a61752","proposeOwnershipTransfer(address)":"21040fc3","proposedNewOwner()":"0fc8c4ed","recordEnrollment(address)":"c17f9e59","registerMissionFunds(uint8)":"a9bea789","removeAuthorizedAddress(address)":"70712939","renounceOwnership()":"715018a6","reservedFunds(uint8)":"c416ad2a","reservedFundsBreakdown()":"df4db463","secondsTillMonthlySlot(address)":"37012762","secondsTillWeeklySlot(address)":"eff0ab92","setEnrollmentLimits(uint8,uint8)":"d41eca64","setMissionStatus(uint8)":"d8d6e8ff","totalMissionFailures()":"83fbea51","totalMissionFunds()":"63679723","totalMissionSuccesses()":"c892fde3","totalOwnerEarnedFunds()":"3589cf72","transferOwnership(address)":"f2fde38b","weeklyLimit()":"861a68d6","withdrawFunds(uint256)":"155dd5ee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AuthorizedAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AuthorizedAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newWeekly\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newMonthly\",\"type\":\"uint8\"}],\"name\":\"EnrollmentLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EnrollmentRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"missionAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum MissionType\",\"name\":\"missionType\",\"type\":\"uint8\"}],\"name\":\"MissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum MissionType\",\"name\":\"missionType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"MissionFundsRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"confirmer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnershipTransferConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnershipTransferProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"OWNERSHIP_PROPOSAL_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorizedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canEnroll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"},{\"internalType\":\"enum Limit\",\"name\":\"breach\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MissionType\",\"name\":\"_missionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_enrollmentStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_enrollmentEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_enrollmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_enrollmentMinPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_enrollmentMaxPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_missionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_missionEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_missionRounds\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_missionName\",\"type\":\"string\"}],\"name\":\"createMission\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllMissions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"enum Status[]\",\"name\":\"\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactorySummary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMissions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weekly\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"monthly\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"missionFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"successes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failures\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"fundsPerTypeArray\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MissionType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"getFundsByType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"getLatestMissions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"missionAddress\",\"type\":\"address\"}],\"name\":\"getMissionData\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"enum MissionType\",\"name\":\"missionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"enrollmentStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enrollmentEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enrollmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"enrollmentMinPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"enrollmentMaxPlayers\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"missionStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"missionEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"missionRounds\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"roundCount\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"croStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"croCurrent\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountWon\",\"type\":\"uint256\"}],\"internalType\":\"struct Mission.PlayersWon[]\",\"name\":\"playersWon\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"pauseTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"refundedPlayers\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct Mission.MissionData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Status\",\"name\":\"s\",\"type\":\"uint8\"}],\"name\":\"getMissionsByStatus\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMissionsEnded\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMissionsNotEnded\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnershipProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeLeft\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerLimits\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"weekUsed\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"weekMax\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"monthUsed\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"monthMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"secToWeek\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secToMonth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerParticipation\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"enum Status[]\",\"name\":\"\",\"type\":\"uint8[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"missionImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"missionNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"missionStatus\",\"outputs\":[{\"internalType\":\"enum Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MissionType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"missionTypeCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"missions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyLimit\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"proposeOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedNewOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"recordEnrollment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MissionType\",\"name\":\"missionType\",\"type\":\"uint8\"}],\"name\":\"registerMissionFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorizedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MissionType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"reservedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservedFundsBreakdown\",\"outputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"\",\"type\":\"uint256[7]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"secondsTillMonthlySlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"secondsTillWeeklySlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_weekly\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_monthly\",\"type\":\"uint8\"}],\"name\":\"setEnrollmentLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Status\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"setMissionStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMissionFailures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMissionFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMissionSuccesses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalOwnerEarnedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyLimit\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"AuthorizedAddressAdded(address)\":{\"details\":\"Events emitted by the MissionFactory contract. These events are used to log important actions and state changes within the contract.\"}},\"kind\":\"dev\",\"methods\":{\"addAuthorizedAddress(address)\":{\"details\":\"Adds an address to the list of authorized addresses.\",\"params\":{\"account\":\"The address to authorize.\"}},\"canEnroll(address)\":{\"details\":\"Checks if a user can enroll in a mission based on anti-addiction limits. This function checks the user's enrollment history to determine if they have exceeded the weekly or monthly limits.\",\"params\":{\"user\":\"The address of the user to check.\"},\"returns\":{\"breach\":\"A Limit enum indicating which limit is breached, if any.\",\"ok\":\"A boolean indicating if the user can enroll.\"}},\"confirmOwnershipTransfer()\":{\"details\":\"Confirms the ownership transfer to a new address. This function allows a 2nd authorized address to confirm the ownership transfer.\"},\"constructor\":{\"details\":\"Struct to hold information about players who won the mission. Contains the player's address and the amount they won.\"},\"createMission(uint8,uint256,uint256,uint256,uint8,uint8,uint256,uint256,uint8,string)\":{\"details\":\"Creates a new mission with the specified parameters.\",\"params\":{\"_enrollmentAmount\":\"The amount required for enrollment.\",\"_enrollmentEnd\":\"The end time for enrollment.\",\"_enrollmentMaxPlayers\":\"The maxnimum number of players required to start the mission.\",\"_enrollmentMinPlayers\":\"The minimum number of players required to start the mission.\",\"_enrollmentStart\":\"The start time for enrollment.\",\"_missionEnd\":\"The end time for the mission.\",\"_missionRounds\":\"The number of rounds in the mission.\",\"_missionStart\":\"The start time for the mission.\",\"_missionType\":\"The type of the mission.\"}},\"getAllMissions()\":{\"details\":\"Returns the addresses and statuses of all missions. This function retrieves all missions and their statuses, filtering out old missions.\",\"returns\":{\"_0\":\"An array of mission addresses and an array of their corresponding statuses.\"}},\"getFactorySummary()\":{\"details\":\"Returns a summary of the factory's state. This function returns various details about the factory, including owner address, implementation address, total missions, limits, funds, and mission success/failure counts.\",\"returns\":{\"factoryAddress\":\"The address of the factory contract.\",\"failures\":\"The total number of failed missions.\",\"fundsPerTypeArray\":\"An array containing the reserved funds for each mission type (1\\u20136).\",\"implementation\":\"The address of the mission implementation contract.\",\"missionFunds\":\"The total funds registered by missions.\",\"monthly\":\"The monthly enrollment limit.\",\"ownerAddress\":\"The address of the owner of the factory.\",\"ownerFunds\":\"The total funds earned by the owner from missions.\",\"successes\":\"The total number of successful missions.\",\"totalMissions\":\"The total number of missions created.\",\"weekly\":\"The weekly enrollment limit.\"}},\"getFundsByType(uint8)\":{\"details\":\"Returns the reserved funds for a specific mission type.\",\"params\":{\"_type\":\"The type of the mission to check.\"},\"returns\":{\"_0\":\"The amount of reserved funds for the specified mission type.\"}},\"getLatestMissions(uint256)\":{\"details\":\"Returns the addresses of the latest n missions. This function retrieves the last n missions from the list of all missions.\",\"params\":{\"n\":\"The number of latest missions to return.\"},\"returns\":{\"_0\":\"An array of mission addresses and an array of their corresponding statuses.\"}},\"getMissionData(address)\":{\"details\":\"Returns the status of a mission.\",\"params\":{\"missionAddress\":\"The address of the mission to check.\"},\"returns\":{\"_0\":\"mission data of the mission.\"}},\"getMissionsByStatus(uint8)\":{\"details\":\"Returns the addresses of missions filtered by status. This function filters missions based on their status and returns an array of mission addresses that match the specified status.\",\"params\":{\"s\":\"The status to filter missions by.\"},\"returns\":{\"_0\":\"An array of mission addresses and an array of their corresponding statuses.\"}},\"getMissionsEnded()\":{\"details\":\"Returns the addresses of missions that have ended. This function filters out missions that are in the Ended or Failed status.\",\"returns\":{\"_0\":\"An array of mission addresses and an array of their corresponding statuses.\"}},\"getMissionsNotEnded()\":{\"details\":\"Returns the addresses of missions that have not ended. This function filters out missions that are in the Ended or Failed status.\",\"returns\":{\"_0\":\"An array of mission addresses and an array of their corresponding statuses.\"}},\"getOwnershipProposal()\":{\"details\":\"Returns the proposal data\",\"returns\":{\"newOwner\":\"the stored newOwner proposal\",\"proposer\":\"the proposer\",\"timeLeft\":\"the time left\",\"timestamp\":\"the time of the proposal\"}},\"getPlayerLimits(address)\":{\"details\":\"Returns the player's enrollment limits and time until next slots. This function calculates the number of enrollments a player has made in the last week and month, and returns the limits and time until the next slots.\",\"params\":{\"player\":\"The address of the player to check.\"},\"returns\":{\"monthMax\":\"The maximum number of enrollments allowed in a month.\",\"monthUsed\":\"The number of enrollments used in the last month.\",\"secToMonth\":\"The number of seconds until the next monthly slot.\",\"secToWeek\":\"The number of seconds until the next weekly slot.\",\"weekMax\":\"The maximum number of enrollments allowed in a week.\",\"weekUsed\":\"The number of enrollments used in the last week.\"}},\"getPlayerParticipation(address)\":{\"details\":\"Returns the missions a player is participating in and their statuses. This function retrieves all missions the player is enrolled in and their current statuses.\",\"params\":{\"player\":\"The address of the player to check.\"},\"returns\":{\"_0\":\"joined An array of addresses of the missions the player is enrolled in.\",\"_1\":\"statuses An array of statuses corresponding to each mission.\"}},\"getTotalMissions()\":{\"details\":\"Returns the total number of missions. This function returns the length of the missions array, which contains all mission addresses.\",\"returns\":{\"_0\":\"The total number of missions.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposeOwnershipTransfer(address)\":{\"details\":\"Proposes a transfer of ownership to a new address.\",\"params\":{\"newOwner\":\"The address of the new owner. If the owner is not available anymore or lost access, this function allows an authorized address to propose a new owner.\"}},\"recordEnrollment(address)\":{\"details\":\"Records the enrollment of a user in a mission. This function is called when a user enrolls in a mission. It updates the user's enrollment history and emits an event.\",\"params\":{\"user\":\"The address of the user enrolling in the mission.\"}},\"registerMissionFunds(uint8)\":{\"details\":\"Registers mission funds for a specific mission type.\",\"params\":{\"missionType\":\"The type of the mission.\"}},\"removeAuthorizedAddress(address)\":{\"details\":\"Removes authorization for an address.\",\"params\":{\"account\":\"The address to remove authorization from.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reservedFundsBreakdown()\":{\"details\":\"Returns the breakdown of reserved funds for each mission type. This function returns an array containing the reserved funds for each mission type.\",\"returns\":{\"_0\":\"breakdown An array containing the reserved funds for each mission type.\"}},\"secondsTillMonthlySlot(address)\":{\"details\":\"Returns the time until the next monthly slot for a user. This function calculates the time remaining until the next monthly slot based on the user's enrollment history.\",\"params\":{\"user\":\"The address of the user to check.\"},\"returns\":{\"_0\":\"The number of seconds until the next monthly slot.\"}},\"secondsTillWeeklySlot(address)\":{\"details\":\"Returns the time until the next weekly slot for a user. This function calculates the time remaining until the next weekly slot based on the user's enrollment history.\",\"params\":{\"user\":\"The address of the user to check.\"},\"returns\":{\"_0\":\"The number of seconds until the next weekly slot.\"}},\"setEnrollmentLimits(uint8,uint8)\":{\"details\":\"Sets the weekly and monthly enrollment limits. This function allows the owner or an authorized address to set the limits for how many missions a user can enroll in per week and per month.\",\"params\":{\"_monthly\":\"The new monthly limit for mission enrollments.\",\"_weekly\":\"The new weekly limit for mission enrollments.\"}},\"setMissionStatus(uint8)\":{\"details\":\"Sets the status of a mission.\",\"params\":{\"newStatus\":\"The new status to set for the mission.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds(uint256)\":{\"details\":\"Withdraws funds from the MissionFactory contract. This function allows the owner or an authorized address to withdraw funds from the contract. This function shall only be called if the contract is not in use anymore and all missions have ended. It transfers the specified amount of funds to the owner of the MissionFactory contract.\",\"params\":{\"amount\":\"The amount of funds to withdraw. If 0, withdraws all available funds.\"}}},\"stateVariables\":{\"missions\":{\"details\":\"State variables for the MissionFactory contract. These variables store the state of the contract, including authorized addresses, reserved funds, mission statuses, and the implementation address for missions.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MissionFactory.sol\":\"MissionFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MissionFactory.sol\":{\"keccak256\":\"0x3af8015c31c8d64ac5413ba235e28efe88bfef7916268c451609511a5e28ea10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e599d2549568837cc3f2b643ccd4ebdca7b3d78eecf47c398ec26e9d142adc8\",\"dweb:/ipfs/QmUYsGY88pbdGDiuVAPjmZoW5aKPnbJrqsruCVWjY92aaC\"]}},\"version\":1}"}}}}}