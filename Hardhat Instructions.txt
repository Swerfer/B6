Initialize Project:

    npm install --save-dev hardhat
    npm install --save-dev @nomicfoundation/hardhat-toolbox
    npm install --save-dev @nomicfoundation/hardhat-verify
    npx hardhat
        Choose: Create an empty hardhat.config.js

        In hardhad.config.js:

require("@nomicfoundation/hardhat-toolbox");
require("@nomicfoundation/hardhat-verify");
require("hardhat-contract-sizer");

/** @type import('hardhat/config').HardhatUserConfig */
module.exports = {
    solidity: {
      version: "0.8.30",
      settings: {
        optimizer: {
          enabled: true,
          runs: 200
        },
        viaIR: true
      }
    },
    defaultNetwork: "cronos",
    networks: {
        cronos: {
            url: "https://evm.cronos.org",
            chainId: 25,
            accounts: ["b9b9db2718b48ca645b07538f320223036b3521f8f58d366cd2045a1495a3acf"] // Owner private key
        }
    },
    sourcify: { enabled: false },

    etherscan: {
      apiKey: {
        cronos: "tivRx81kJ6uSornGygDWc7bQwohnveVj",
      },
      customChains: [
        {
          network: "cronos",
          chainId: 25,
          urls: {
            apiURL: "https://cronos.org/explorer/api",
            browserURL: "https://explorer.cronos.org",
          },
        },
      ],
    },

};
    
    npm install @openzeppelin/contracts
    npm audit fix --force

    In PowerShell if node version is not 20 (Maybe first go to https://github.com/coreybutler/nvm-windows/releases for installer):
    
    nvm install 20
    nvm use 20

Test compile:

    Compile with configured Remote version

Publish contract(s):

    npx hardhat run scripts/deployAll.js
 
For Cronos Explorer verification - public Etherscan-compatible API (cronos.org/explorer/api):

    WERKT NIET! De 2e is wel te gebruiken om het argument te vinden benodigd voor handmatige verificatie

    2x Mission implementation address:
    curl.exe -sS -H "Content-Type: application/x-www-form-urlencoded" -H "User-Agent: Mozilla/5.0" -H "Origin: https://cronos.org" -H "Referer: https://cronos.org/explorer/api-docs" --data-urlencode module=contract --data-urlencode action=verifysourcecode --data-urlencode codeformat=solidity-standard-json-input --data-urlencode contractaddress=0x650Bb899Be461d850dfDe84B4A70c36BC3672259 --data-urlencode "contractname=contracts/MissionFactory.sol:Mission" --data-urlencode "compilerversion=v0.8.30+commit.73712a01" --data-urlencode sourceCode@source.json "https://cronos.org/explorer/api"
    node -e "const {AbiCoder}=require('ethers'); const coder=new AbiCoder(); console.log(coder.encode(['address'], ['0x650Bb899Be461d850dfDe84B4A70c36BC3672259']));"

    1x Factory address and 1x constructor args (result from node command above)
    curl.exe -sS -H "Content-Type: application/x-www-form-urlencoded" -H "User-Agent: Mozilla/5.0" -H "Origin: https://cronos.org" -H "Referer: https://cronos.org/explorer/api-docs" --data-urlencode module=contract --data-urlencode action=verifysourcecode --data-urlencode codeformat=solidity-standard-json-input --data-urlencode contractaddress=0x4F5765a59be7Ae20681e74B9b0a041Fea0742dbd --data-urlencode "contractname=contracts/MissionFactory.sol:MissionFactory" --data-urlencode "compilerversion=v0.8.30+commit.73712a01" --data-urlencode "constructorArguements=0x000000000000000000000000650bb899be461d850dfde84b4a70c36bc3672259" --data-urlencode sourceCode@source.json "https://cronos.org/explorer/api"

Via Cronos Explorer UI:

    node -e "const fs=require('fs'),p=require('path');const d='artifacts/build-info';const files=fs.readdirSync(d).filter(f=>f.endsWith('.json')).map(f=>p.join(d,f)).sort((a,b)=>fs.statSync(b).mtime-fs.statSync(a).mtime);if(!files[0]){throw new Error('No build-info found');}const j=JSON.parse(fs.readFileSync(files[0],'utf8'));fs.writeFileSync('source.json', JSON.stringify(j.input));console.log('wrote source.json from', files[0]);"

    Then verify with the updated file (B6 root source.json) in the UI (Choose HardHat JSON).
    
    Argument address all lower case. Voorbeeld: 000000000000000000000000650bb899be461d850dfde84b4a70c36bc3672259 (Mission address 0x650Bb899Be461d850dfDe84B4A70c36BC3672259)
